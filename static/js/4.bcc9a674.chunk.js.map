{"version":3,"sources":["../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/raf/index.js","../node_modules/performance-now/lib/performance-now.js","../node_modules/rgbcolor/index.js","../node_modules/svg-pathdata/lib/SVGPathData.module.js","../node_modules/stackblur-canvas/dist/stackblur-es.js","../node_modules/canvg/lib/index.es.js"],"names":["asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","module","exports","this","arguments","apply","_next","_throw","__esModule","toPropertyKey","__webpack_require__","Object","defineProperty","enumerable","configurable","writable","_typeof","toPrimitive","Symbol","call","TypeError","String","Number","global","now","root","window","vendors","suffix","raf","caf","length","last","id","queue","callback","_now","next","Math","max","setTimeout","cp","slice","cancelled","round","push","handle","fn","cancel","polyfill","object","requestAnimationFrame","cancelAnimationFrame","process","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","hr","uptime","Date","getTime","color_string","ok","alpha","charAt","substr","replace","toLowerCase","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","bits","parseInt","parseFloat","processor","exec","channels","g","b","isNaN","toRGB","toRGBA","toHex","toString","getHelpXML","examples","Array","j","sc","xml","document","createElement","setAttribute","list_item","list_color","RGBColor","example_div","style","cssText","appendChild","createTextNode","list_item_value","d","__webpack_exports__","_","setPrototypeOf","__proto__","prototype","hasOwnProperty","constructor","create","cos","sin","Error","PI","lArcFlag","sweepFlag","rX","rY","s","x","y","abs","h","xRot","p","pow","sqrt","m","O","l","T","v","cX","cY","phi1","atan2","phi2","relative","x1","y1","x2","y2","NaN","type","SMOOTH_CURVE_TO","CURVE_TO","SMOOTH_QUAD_TO","QUAD_TO","MOVE_TO","CLOSE_PATH","HORIZ_LINE_TO","LINE_TO","VERT_LINE_TO","f","N","E","A","C","M","R","I","S","L","ROUND","TO_ABS","TO_REL","NORMALIZE_HVZ","ARC","NORMALIZE_ST","QT_TO_C","INFO","SANITIZE","LINE_COMMANDS","MATRIX","ROTATE","TRANSLATE","SCALE","SKEW_X","atan","SKEW_Y","X_AXIS_SYMMETRY","Y_AXIS_SYMMETRY","A_TO_C","min","ceil","H","ANNOTATE_ARCS","CLONE","CALCULATE_BOUNDS","maxX","minX","maxY","minY","DRAWING_COMMANDS","w","map","U","transform","toAbs","toRel","normalizeHVZ","normalizeST","qtToC","aToC","sanitize","translate","scale","rotate","matrix","skewX","skewY","xSymmetry","ySymmetry","annotateArcs","charCodeAt","curNumber","curCommandType","curCommandRelative","canParseCommandOrComma","curNumberHasExp","curNumberHasExpDigits","curNumberHasDecimal","curArgs","finish","parse","SyntaxError","getPrototypeOf","isArray","commands","encode","getBounds","obj","iterator","processCanvasRGBA","mulTable","shgTable","getImageDataFromCanvas","canvas","topX","topY","width","height","getElementById","context","getContext","getImageData","radius","imageData","stackEnd","pixels","data","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","stackIn","stackOut","yw","yi","mulSum","shgSum","pr","pg","pb","pa","_i","rInSum","gInSum","bInSum","aInSum","rOutSum","gOutSum","bOutSum","aOutSum","rSum","gSum","bSum","aSum","_i2","rbs","paInitial","_a2","_p","_stackOut","_r","_g","_b","_a","_x","_pr","_pg","_pb","_pa","_rOutSum","_gOutSum","_bOutSum","_aOutSum","_rSum","_gSum","_bSum","_aSum","_i3","yp","_gInSum","_bInSum","_aInSum","_rInSum","_i4","_rbs","_y","_p2","processImageDataRGBA","putImageData","instance","Constructor","_classCallCheck","AElement","AnimateColorElement","AnimateElement","AnimateTransformElement","BoundingBox","CB1","CB2","CB3","CB4","Canvg","CircleElement","ClipPathElement","DefsElement","DescElement","Document","Element","EllipseElement","FeColorMatrixElement","FeCompositeElement","FeDropShadowElement","FeGaussianBlurElement","FeMorphologyElement","FilterElement","Font","FontElement","FontFaceElement","GElement","GlyphElement","GradientElement","ImageElement","LineElement","LinearGradientElement","MarkerElement","MaskElement","Matrix","MissingGlyphElement","Mouse","PSEUDO_ZERO","Parser","PathElement","PathParser","PatternElement","Point","PolygonElement","PolylineElement","Property","QB1","QB2","QB3","RadialGradientElement","RectElement","RenderedElement","Rotate","SVGElement","SVGFontLoader","Scale","Screen","Skew","SkewX","SkewY","StopElement","StyleElement","SymbolElement","TRefElement","TSpanElement","TextElement","TextPathElement","TitleElement","Transform","Translate","UnknownElement","UseElement","ViewPort","compressSpaces","getSelectorSpecificity","normalizeAttributeName","normalizeColor","parseExternalUrl","index","toNumbers","trimLeft","trimRight","vectorMagnitude","vectorsAngle","vectorsRatio","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default","raf__WEBPACK_IMPORTED_MODULE_2__","raf__WEBPACK_IMPORTED_MODULE_2___default","rgbcolor__WEBPACK_IMPORTED_MODULE_3__","rgbcolor__WEBPACK_IMPORTED_MODULE_3___default","svg_pathdata__WEBPACK_IMPORTED_MODULE_4__","stackblur_canvas__WEBPACK_IMPORTED_MODULE_5__","freeze","offscreen","DOMParser","DOMParserFallback","undefined","preset","ignoreAnimation","ignoreMouse","createCanvas","OffscreenCanvas","createImage","url","response","fetch","blob","createImageBitmap","Reflect","deleteProperty","node","_ref","loadImage","str","match","allUppercase","name","test","urlMatch","color","startsWith","rgbParts","num","isFloat","attributeRegex","idRegex","classRegex","pseudoElementRegex","pseudoClassWithBracketsRegex","pseudoClassRegex","elementRegex","findSelectorMatch","selector","regex","matches","specificity","currentSelector","delta","join","acos","[object Object]","isNormalizedColor","separator","getString","trim","split","zeroIsValue","regexp","result","isString","hasValue","asString","endsWith","def","rootEmSize","emSize","axisOrIsFontSize","processPercent","axis","isFontSize","viewPort","screen","getNumber","computeSize","getRem","getEm","getDpi","definitions","element","opacity","getDefinition","createGradient","ctx","createPattern","getHrefAttribute","patternTransform","getAttribute","setValue","textBaselineMapping","getColor","len","commas","baseline","before-edge","text-before-edge","middle","central","after-edge","text-after-edge","ideographic","alphabetic","hanging","mathematical","viewPorts","pop","getCurrent","point","defaultValue","path","points","pathPoints","xp","working","events","eventElements","onClick","bind","onMouseMove","onclick","onmousemove","cursor","forEach","run","parent","_ref2","isPointInPath","boundingBox","_ref3","isPointInBox","offsetLeft","offsetTop","offsetParent","scrollX","scrollY","event","mapXY","clientX","clientY","eventTarget","defaultWindow","defaultFetch$1","FRAMERATE","MAX_VIRTUAL_PIXELS","CLIENT_WIDTH","CLIENT_HEIGHT","mouse","animations","waits","frameDuration","isReadyLock","isFirstRender","intervalId","checker","readyPromise","every","resolveReady","strokeStyle","lineCap","lineJoin","miterLimit","aspectRatio","desiredWidth","desiredHeight","refX","refY","clip","clipX","clipY","cleanAspectRatio","aspectRatioAlign","aspectRatioMeetOrSlice","align","meetOrSlice","scaleX","scaleY","scaleMin","scaleMax","finalDesiredWidth","finalDesiredHeight","refXProp","refYProp","hasRefs","getPixels","scaledClipX","scaledClipY","beginPath","moveTo","lineTo","closePath","isMeetMinY","isSliceMaxY","isMeetMinX","isSliceMaxX","enableRedraw","ignoreDimensions","ignoreClear","forceRedraw","scaleWidth","scaleHeight","offsetX","offsetY","isReady","render","tick","shouldUpdate","runEvents","start","stop","reduce","animation","update","hasEvents","clear","setCurrent","widthStyle","getStyle","heightStyle","concat","cWidth","clientWidth","cHeight","clientHeight","viewBox","xRatio","yRatio","_widthStyle","_heightStyle","transformStyle","clearRect","defaultFetch","DefaultDOMParser","resource","_this","parseFromString","load","parser","checkDocument","err","parserError","getElementsByTagName","textContent","_this2","text","applyTransform","transformOrigin","angle","originX","originY","cx","cy","numbers","tx","ty","getRadians","rad","scaleSize","parseScale","det","skew","super","transforms","parseTransforms","parseTransform","TransformType","transformTypes","transformOriginXProperty","transformOriginYProperty","unapply","applyToPoint","captureTextNodes","attributes","styles","stylesSpecificity","animationFrozen","animationFrozenValue","children","nodeType","from","attribute","nodeName","addStylesFromStyleDefinition","childNodes","childNode","addChild","textNode","getText","createIfNotExists","attr","_attr","empty","key","skipAncestors","parentStyle","_style","save","mask","applyEffects","getValue","filter","setContext","renderChildren","clearContext","restore","fromElement","clipPathStyleProp","child","ignoreChildTypes","includes","_node$getAttribute","styleClasses","some","styleClass","matchesSelector","existingSpecificity","ignoreStyles","toRestore","styleProp","_this$parent","indexOf","wrapFontFamily","fontFamily","trimmed","prepareFontStyle","fontStyle","targetFontStyle","prepareFontWeight","fontWeight","targetFontWeight","fontVariant","fontSize","inherit","inheritFont","font","parts","set","part","variants","weights","addPoint","p0","p1","p2","p3","forX","b2ac","t1","addX","sumCubic","addY","t2","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","bezierCurveAdd","cp1x","cp1y","cp2x","cp2y","addBezierCurve","control","current","command","previousCommand","angles","xProp","yProp","makeAbsolute","getPoint","ox","oy","priorTo","angleTo","addMarkerAngle","modifiedEmSizeStack","opacityStyle","fromMeasure","fillStyleProp","fillOpacityStyleProp","strokeStyleProp","strokeOpacityProp","isUrlDefinition","fillStyle","getFillStyleDefinition","_fillStyle","_fillStyle2","addOpacity","_strokeStyle","_strokeStyle2","strokeWidthStyleProp","newLineWidth","lineWidth","strokeLinecapStyleProp","strokeLinejoinStyleProp","strokeMiterlimitProp","strokeDasharrayStyleProp","strokeDashoffsetProp","gaps","setLineDash","webkitLineDash","mozDash","offset","lineDashOffset","webkitLineDashOffset","mozDashOffset","fontStyleProp","fontStyleStyleProp","fontVariantStyleProp","fontWeightStyleProp","fontSizeStyleProp","fontFamilyStyleProp","isPixels","globalAlpha","calculateOpacity","popEmSize","pathParser","reset","isEnd","pathM","pathL","pathH","pathV","pathC","pathS","pathQ","pathT","pathA","pathZ","getMarkerPoints","getMarkerAngles","checkPath","fillRuleStyleProp","fill","setTransform","stroke","markers","getMarkers","markersLastIndex","markerStartStyleProp","markerMidStyleProp","markerEndStyleProp","marker","_marker","_point","_angle","_marker2","_point2","_angle2","getAsCurrentPoint","addMarker","controlPoint","getAsControlPoint","currentPoint","bezierCurveTo","getReflectedControlPoint","addQuadraticCurve","quadraticCurveTo","xAxisRotation","currp","cpp","centp","a1","ad","dir","ah","halfWay","sx","sy","arc","Boolean","horizAdvX","unicode","arabicForm","measureCache","textBaseline","getTextBaseline","leafTexts","textChunkStart","POSITIVE_INFINITY","NEGATIVE_INFINITY","getTElementBoundingBox","initializeCoordinates","adjustChildCoordinatesRecursive","childBoundingBox","getChildBoundingBox","addBoundingBox","inheritFontSize","getFontSize","measureText","char","glyph","isArabic","prevChar","nextChar","glyphs","maybeGlyph","missingGlyph","parentNode","lastIndex","renderChild","isWorking","checkBoundingBox","getBoundingBox","renderTElementChildren","renderText","customFont","unitsPerEm","fontFace","ctxFont","isRTL","reverse","dx","getGlyph","lw","fillText","strokeText","firstElement","textAnchor","shift","adjustChildCoordinatesRecursiveCore","applyAnchoring","textParent","adjustChildCoordinates","xAttr","yAttr","dxAttr","dyAttr","getInheritedAttribute","measure","measureTargetText","targetText","_measure","isFirstChild","parentAttr","getTextFromNode","TextNode","_this$node$parentNode","setDefaults","getComputedStyle","getPropertyValue","fontSizeProp","refXAttr","refYAttr","viewBoxAttr","setViewBox","removeCurrent","preserveAspectRatio","widthAttr","heightAttr","styleAttr","originWidth","originHeight","preserveAspectRatioAttr","rxAttr","ryAttr","rx","ry","KAPPA","x0","y0","getPoints","parsePath","parentOpacityProp","patternSvg","patternCanvas","patternCtx","orient","markerUnits","markerSvg","overflow","attributesToInherit","stops","stopsContainer","inheritStopContainer","gradient","getGradient","addParentOpacity","addColorStop","rootView","rect","group","attributeToInherit","isBoundingBoxUnits","getGradientUnits","createLinearGradient","fx","fy","fr","createRadialGradient","stopOpacity","stopColor","duration","initialValue","initialUnits","removed","frozen","begin","getMilliseconds","maxDuration","to","values","valuesAttr","attributeType","attributeName","progress","getProgress","newValue","prop","getProperty","getUnits","updated","calcValue","typeAttr","lb","floor","ub","colorFrom","colorTo","transformFrom","transformTo","fontFamilyStyle","ascent","descent","firstChild","hasText","open","ownKeys$2","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread$2","target","source","getOwnPropertyDescriptors","defineProperties","textWidth","textHeight","pathLength","glyphInfo","letterSpacingCache","measuresCache","Map","pathElement","dataArray","parsePathData","theta","dTheta","psi","fs","setTextData","textDecoration","rotation","partialText","idx","anchor","textFullWidth","fullPathWidth","spacesNumber","inputOffset","dy","charI","glyphWidth","getLetterSpacingAt","splineStep","getEquidistantPointOnPath","segment","dyX","dyY","has","get","chars","thisSpacing","parentSpacing","letterSpacing","textLen","dxSum","acc","cur","getPathLength","startOffset","nextOffset","findSegmentToFitChar","pathCommands","startX","startY","nextCommandType","calcLength","commandType","getLineLength","getPointOnCubicBezier","getPointOnQuadraticBezier","end","inc","getPointOnEllipticalArc","dist","fromX","fromY","rise","pt","ix","iy","pRise","pRun","distance","fullLen","cumulativePathLength","currentT","getPointOnLine","pct","p4x","p4y","cosPsi","sinPsi","inputStep","inputPrecision","precision","step","equidistantCache","getPointOnPath","targetDistance","buildEquidistantCache","dataUriRegex","loaded","href","isSvg","images","loadSvg","image","console","error","atob","decodeURIComponent","svg","subDocument","canvg","forkString","documentElement","_image","complete","drawImage","fonts","fontNode","cssParts","cssClasses","cssProps","cssClass","props","cssProp","src","tempSvg","oldParent","cachedElement","imGet","img","_height","rgba","imSet","val","m1","m2","m3","includeOpacity","srcData","nr","ng","nb","na","ignoredStyles","removeStyles","maskCanvas","maskCtx","tmpCanvas","tmpCtx","globalCompositeOperation","fillRect","restoreStyles","noop","contextProto","elementTransform","px","py","efd","extraFilterDistance","tmpCanvasWidth","tmpCanvasHeight","_width","blurRadius","body","getUniqueId","display","removeChild","elements","circle","ellipse","line","polyline","polygon","pattern","defs","linearGradient","radialGradient","animate","animateColor","animateTransform","font-face","missing-glyph","tspan","tref","textPath","symbol","use","clipPath","feDropShadow","feMorphology","feComposite","feColorMatrix","feGaussianBlur","title","desc","ownKeys$1","_createImage","anonymousCrossOrigin","crossOrigin","reject","onload","onerror","_event","_source","_lineno","_colno","emSizeStack","uniqueId","bindCreateImage","wait","isImagesLoaded","isFontsLoaded","forceAnonymousCrossOrigin","elementType","ElementType","elementTypes","config","_objectSpread$1","ownKeys","_objectSpread","options","createDocumentElement","_arguments","svgDocument","fromString","ready","_arguments2","baseOptions","resize"],"mappings":"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","file":"static/js/4.bcc9a674.chunk.js","sourcesContent":["function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var now = require('performance-now'),\n  root = typeof window === 'undefined' ? global : window,\n  vendors = ['moz', 'webkit'],\n  suffix = 'AnimationFrame',\n  raf = root['request' + suffix],\n  caf = root['cancel' + suffix] || root['cancelRequest' + suffix];\nfor (var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix];\n  caf = root[vendors[i] + 'Cancel' + suffix] || root[vendors[i] + 'CancelRequest' + suffix];\n}\n\n// Some versions of FF have rAF but not cAF\nif (!raf || !caf) {\n  var last = 0,\n    id = 0,\n    queue = [],\n    frameDuration = 1000 / 60;\n  raf = function (callback) {\n    if (queue.length === 0) {\n      var _now = now(),\n        next = Math.max(0, frameDuration - (_now - last));\n      last = next + _now;\n      setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n          if (!cp[i].cancelled) {\n            try {\n              cp[i].callback(last);\n            } catch (e) {\n              setTimeout(function () {\n                throw e;\n              }, 0);\n            }\n          }\n        }\n      }, Math.round(next));\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    });\n    return id;\n  };\n  caf = function (handle) {\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].handle === handle) {\n        queue[i].cancelled = true;\n      }\n    }\n  };\n}\nmodule.exports = function (fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn);\n};\nmodule.exports.cancel = function () {\n  caf.apply(root, arguments);\n};\nmodule.exports.polyfill = function (object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf;\n  object.cancelAnimationFrame = caf;\n};","// Generated by CoffeeScript 1.12.2\n(function () {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n  if (typeof performance !== \"undefined\" && performance !== null && performance.now) {\n    module.exports = function () {\n      return performance.now();\n    };\n  } else if (typeof process !== \"undefined\" && process !== null && process.hrtime) {\n    module.exports = function () {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function () {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function () {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function () {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n}).call(this);","/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\n\nmodule.exports = function (color_string) {\n  this.ok = false;\n  this.alpha = 1.0;\n\n  // strip any leading #\n  if (color_string.charAt(0) == '#') {\n    // remove # if any\n    color_string = color_string.substr(1, 6);\n  }\n  color_string = color_string.replace(/ /g, '');\n  color_string = color_string.toLowerCase();\n\n  // before getting into regexps, try simple matches\n  // and overwrite the input\n  var simple_colors = {\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '00ffff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000000',\n    blanchedalmond: 'ffebcd',\n    blue: '0000ff',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '00ffff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgreen: '006400',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dodgerblue: '1e90ff',\n    feldspar: 'd19275',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'ff00ff',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgrey: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslateblue: '8470ff',\n    lightslategray: '778899',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '00ff00',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'ff00ff',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370d8',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'd87093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    rebeccapurple: '663399',\n    red: 'ff0000',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    violetred: 'd02090',\n    wheat: 'f5deb3',\n    white: 'ffffff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ffff00',\n    yellowgreen: '9acd32'\n  };\n  color_string = simple_colors[color_string] || color_string;\n  // emd of simple type-in colors\n\n  // array of color definition objects\n  var color_defs = [{\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n    example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n    process: function (bits) {\n      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3]), parseFloat(bits[4])];\n    }\n  }, {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n    process: function (bits) {\n      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3])];\n    }\n  }, {\n    re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    example: ['#00ff00', '336699'],\n    process: function (bits) {\n      return [parseInt(bits[1], 16), parseInt(bits[2], 16), parseInt(bits[3], 16)];\n    }\n  }, {\n    re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    example: ['#fb0', 'f0f'],\n    process: function (bits) {\n      return [parseInt(bits[1] + bits[1], 16), parseInt(bits[2] + bits[2], 16), parseInt(bits[3] + bits[3], 16)];\n    }\n  }];\n\n  // search through the definitions to find a match\n  for (var i = 0; i < color_defs.length; i++) {\n    var re = color_defs[i].re;\n    var processor = color_defs[i].process;\n    var bits = re.exec(color_string);\n    if (bits) {\n      var channels = processor(bits);\n      this.r = channels[0];\n      this.g = channels[1];\n      this.b = channels[2];\n      if (channels.length > 3) {\n        this.alpha = channels[3];\n      }\n      this.ok = true;\n    }\n  }\n\n  // validate/cleanup values\n  this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r;\n  this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g;\n  this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b;\n  this.alpha = this.alpha < 0 ? 0 : this.alpha > 1.0 || isNaN(this.alpha) ? 1.0 : this.alpha;\n\n  // some getters\n  this.toRGB = function () {\n    return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n  };\n  this.toRGBA = function () {\n    return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n  };\n  this.toHex = function () {\n    var r = this.r.toString(16);\n    var g = this.g.toString(16);\n    var b = this.b.toString(16);\n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    return '#' + r + g + b;\n  };\n\n  // help\n  this.getHelpXML = function () {\n    var examples = new Array();\n    // add regexps\n    for (var i = 0; i < color_defs.length; i++) {\n      var example = color_defs[i].example;\n      for (var j = 0; j < example.length; j++) {\n        examples[examples.length] = example[j];\n      }\n    }\n    // add type-in colors\n    for (var sc in simple_colors) {\n      examples[examples.length] = sc;\n    }\n    var xml = document.createElement('ul');\n    xml.setAttribute('id', 'rgbcolor-examples');\n    for (var i = 0; i < examples.length; i++) {\n      try {\n        var list_item = document.createElement('li');\n        var list_color = new RGBColor(examples[i]);\n        var example_div = document.createElement('div');\n        example_div.style.cssText = 'margin: 3px; ' + 'border: 1px solid black; ' + 'background:' + list_color.toHex() + '; ' + 'color:' + list_color.toHex();\n        example_div.appendChild(document.createTextNode('test'));\n        var list_item_value = document.createTextNode(' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex());\n        list_item.appendChild(example_div);\n        list_item.appendChild(list_item_value);\n        xml.appendChild(list_item);\n      } catch (e) {}\n    }\n    return xml;\n  };\n};","/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nvar t = function (r, e) {\n  return (t = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (t, r) {\n    t.__proto__ = r;\n  } || function (t, r) {\n    for (var e in r) Object.prototype.hasOwnProperty.call(r, e) && (t[e] = r[e]);\n  })(r, e);\n};\nfunction r(r, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Class extends value \" + String(e) + \" is not a constructor or null\");\n  function i() {\n    this.constructor = r;\n  }\n  t(r, e), r.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());\n}\nfunction e(t) {\n  var r = \"\";\n  Array.isArray(t) || (t = [t]);\n  for (var e = 0; e < t.length; e++) {\n    var i = t[e];\n    if (i.type === _.CLOSE_PATH) r += \"z\";else if (i.type === _.HORIZ_LINE_TO) r += (i.relative ? \"h\" : \"H\") + i.x;else if (i.type === _.VERT_LINE_TO) r += (i.relative ? \"v\" : \"V\") + i.y;else if (i.type === _.MOVE_TO) r += (i.relative ? \"m\" : \"M\") + i.x + \" \" + i.y;else if (i.type === _.LINE_TO) r += (i.relative ? \"l\" : \"L\") + i.x + \" \" + i.y;else if (i.type === _.CURVE_TO) r += (i.relative ? \"c\" : \"C\") + i.x1 + \" \" + i.y1 + \" \" + i.x2 + \" \" + i.y2 + \" \" + i.x + \" \" + i.y;else if (i.type === _.SMOOTH_CURVE_TO) r += (i.relative ? \"s\" : \"S\") + i.x2 + \" \" + i.y2 + \" \" + i.x + \" \" + i.y;else if (i.type === _.QUAD_TO) r += (i.relative ? \"q\" : \"Q\") + i.x1 + \" \" + i.y1 + \" \" + i.x + \" \" + i.y;else if (i.type === _.SMOOTH_QUAD_TO) r += (i.relative ? \"t\" : \"T\") + i.x + \" \" + i.y;else {\n      if (i.type !== _.ARC) throw new Error('Unexpected command type \"' + i.type + '\" at index ' + e + \".\");\n      r += (i.relative ? \"a\" : \"A\") + i.rX + \" \" + i.rY + \" \" + i.xRot + \" \" + +i.lArcFlag + \" \" + +i.sweepFlag + \" \" + i.x + \" \" + i.y;\n    }\n  }\n  return r;\n}\nfunction i(t, r) {\n  var e = t[0],\n    i = t[1];\n  return [e * Math.cos(r) - i * Math.sin(r), e * Math.sin(r) + i * Math.cos(r)];\n}\nfunction a() {\n  for (var t = [], r = 0; r < arguments.length; r++) t[r] = arguments[r];\n  for (var e = 0; e < t.length; e++) if (\"number\" != typeof t[e]) throw new Error(\"assertNumbers arguments[\" + e + \"] is not a number. \" + typeof t[e] + \" == typeof \" + t[e]);\n  return !0;\n}\nvar n = Math.PI;\nfunction o(t, r, e) {\n  t.lArcFlag = 0 === t.lArcFlag ? 0 : 1, t.sweepFlag = 0 === t.sweepFlag ? 0 : 1;\n  var a = t.rX,\n    o = t.rY,\n    s = t.x,\n    u = t.y;\n  a = Math.abs(t.rX), o = Math.abs(t.rY);\n  var h = i([(r - s) / 2, (e - u) / 2], -t.xRot / 180 * n),\n    c = h[0],\n    y = h[1],\n    p = Math.pow(c, 2) / Math.pow(a, 2) + Math.pow(y, 2) / Math.pow(o, 2);\n  1 < p && (a *= Math.sqrt(p), o *= Math.sqrt(p)), t.rX = a, t.rY = o;\n  var m = Math.pow(a, 2) * Math.pow(y, 2) + Math.pow(o, 2) * Math.pow(c, 2),\n    O = (t.lArcFlag !== t.sweepFlag ? 1 : -1) * Math.sqrt(Math.max(0, (Math.pow(a, 2) * Math.pow(o, 2) - m) / m)),\n    l = a * y / o * O,\n    T = -o * c / a * O,\n    v = i([l, T], t.xRot / 180 * n);\n  t.cX = v[0] + (r + s) / 2, t.cY = v[1] + (e + u) / 2, t.phi1 = Math.atan2((y - T) / o, (c - l) / a), t.phi2 = Math.atan2((-y - T) / o, (-c - l) / a), 0 === t.sweepFlag && t.phi2 > t.phi1 && (t.phi2 -= 2 * n), 1 === t.sweepFlag && t.phi2 < t.phi1 && (t.phi2 += 2 * n), t.phi1 *= 180 / n, t.phi2 *= 180 / n;\n}\nfunction s(t, r, e) {\n  a(t, r, e);\n  var i = t * t + r * r - e * e;\n  if (0 > i) return [];\n  if (0 === i) return [[t * e / (t * t + r * r), r * e / (t * t + r * r)]];\n  var n = Math.sqrt(i);\n  return [[(t * e + r * n) / (t * t + r * r), (r * e - t * n) / (t * t + r * r)], [(t * e - r * n) / (t * t + r * r), (r * e + t * n) / (t * t + r * r)]];\n}\nvar u,\n  h = Math.PI / 180;\nfunction c(t, r, e) {\n  return (1 - e) * t + e * r;\n}\nfunction y(t, r, e, i) {\n  return t + Math.cos(i / 180 * n) * r + Math.sin(i / 180 * n) * e;\n}\nfunction p(t, r, e, i) {\n  var a = 1e-6,\n    n = r - t,\n    o = e - r,\n    s = 3 * n + 3 * (i - e) - 6 * o,\n    u = 6 * (o - n),\n    h = 3 * n;\n  return Math.abs(s) < a ? [-h / u] : function (t, r, e) {\n    void 0 === e && (e = 1e-6);\n    var i = t * t / 4 - r;\n    if (i < -e) return [];\n    if (i <= e) return [-t / 2];\n    var a = Math.sqrt(i);\n    return [-t / 2 - a, -t / 2 + a];\n  }(u / s, h / s, a);\n}\nfunction m(t, r, e, i, a) {\n  var n = 1 - a;\n  return t * (n * n * n) + r * (3 * n * n * a) + e * (3 * n * a * a) + i * (a * a * a);\n}\n!function (t) {\n  function r() {\n    return u(function (t, r, e) {\n      return t.relative && (void 0 !== t.x1 && (t.x1 += r), void 0 !== t.y1 && (t.y1 += e), void 0 !== t.x2 && (t.x2 += r), void 0 !== t.y2 && (t.y2 += e), void 0 !== t.x && (t.x += r), void 0 !== t.y && (t.y += e), t.relative = !1), t;\n    });\n  }\n  function e() {\n    var t = NaN,\n      r = NaN,\n      e = NaN,\n      i = NaN;\n    return u(function (a, n, o) {\n      return a.type & _.SMOOTH_CURVE_TO && (a.type = _.CURVE_TO, t = isNaN(t) ? n : t, r = isNaN(r) ? o : r, a.x1 = a.relative ? n - t : 2 * n - t, a.y1 = a.relative ? o - r : 2 * o - r), a.type & _.CURVE_TO ? (t = a.relative ? n + a.x2 : a.x2, r = a.relative ? o + a.y2 : a.y2) : (t = NaN, r = NaN), a.type & _.SMOOTH_QUAD_TO && (a.type = _.QUAD_TO, e = isNaN(e) ? n : e, i = isNaN(i) ? o : i, a.x1 = a.relative ? n - e : 2 * n - e, a.y1 = a.relative ? o - i : 2 * o - i), a.type & _.QUAD_TO ? (e = a.relative ? n + a.x1 : a.x1, i = a.relative ? o + a.y1 : a.y1) : (e = NaN, i = NaN), a;\n    });\n  }\n  function n() {\n    var t = NaN,\n      r = NaN;\n    return u(function (e, i, a) {\n      if (e.type & _.SMOOTH_QUAD_TO && (e.type = _.QUAD_TO, t = isNaN(t) ? i : t, r = isNaN(r) ? a : r, e.x1 = e.relative ? i - t : 2 * i - t, e.y1 = e.relative ? a - r : 2 * a - r), e.type & _.QUAD_TO) {\n        t = e.relative ? i + e.x1 : e.x1, r = e.relative ? a + e.y1 : e.y1;\n        var n = e.x1,\n          o = e.y1;\n        e.type = _.CURVE_TO, e.x1 = ((e.relative ? 0 : i) + 2 * n) / 3, e.y1 = ((e.relative ? 0 : a) + 2 * o) / 3, e.x2 = (e.x + 2 * n) / 3, e.y2 = (e.y + 2 * o) / 3;\n      } else t = NaN, r = NaN;\n      return e;\n    });\n  }\n  function u(t) {\n    var r = 0,\n      e = 0,\n      i = NaN,\n      a = NaN;\n    return function (n) {\n      if (isNaN(i) && !(n.type & _.MOVE_TO)) throw new Error(\"path must start with moveto\");\n      var o = t(n, r, e, i, a);\n      return n.type & _.CLOSE_PATH && (r = i, e = a), void 0 !== n.x && (r = n.relative ? r + n.x : n.x), void 0 !== n.y && (e = n.relative ? e + n.y : n.y), n.type & _.MOVE_TO && (i = r, a = e), o;\n    };\n  }\n  function O(t, r, e, i, n, o) {\n    return a(t, r, e, i, n, o), u(function (a, s, u, h) {\n      var c = a.x1,\n        y = a.x2,\n        p = a.relative && !isNaN(h),\n        m = void 0 !== a.x ? a.x : p ? 0 : s,\n        O = void 0 !== a.y ? a.y : p ? 0 : u;\n      function l(t) {\n        return t * t;\n      }\n      a.type & _.HORIZ_LINE_TO && 0 !== r && (a.type = _.LINE_TO, a.y = a.relative ? 0 : u), a.type & _.VERT_LINE_TO && 0 !== e && (a.type = _.LINE_TO, a.x = a.relative ? 0 : s), void 0 !== a.x && (a.x = a.x * t + O * e + (p ? 0 : n)), void 0 !== a.y && (a.y = m * r + a.y * i + (p ? 0 : o)), void 0 !== a.x1 && (a.x1 = a.x1 * t + a.y1 * e + (p ? 0 : n)), void 0 !== a.y1 && (a.y1 = c * r + a.y1 * i + (p ? 0 : o)), void 0 !== a.x2 && (a.x2 = a.x2 * t + a.y2 * e + (p ? 0 : n)), void 0 !== a.y2 && (a.y2 = y * r + a.y2 * i + (p ? 0 : o));\n      var T = t * i - r * e;\n      if (void 0 !== a.xRot && (1 !== t || 0 !== r || 0 !== e || 1 !== i)) if (0 === T) delete a.rX, delete a.rY, delete a.xRot, delete a.lArcFlag, delete a.sweepFlag, a.type = _.LINE_TO;else {\n        var v = a.xRot * Math.PI / 180,\n          f = Math.sin(v),\n          N = Math.cos(v),\n          x = 1 / l(a.rX),\n          d = 1 / l(a.rY),\n          E = l(N) * x + l(f) * d,\n          A = 2 * f * N * (x - d),\n          C = l(f) * x + l(N) * d,\n          M = E * i * i - A * r * i + C * r * r,\n          R = A * (t * i + r * e) - 2 * (E * e * i + C * t * r),\n          g = E * e * e - A * t * e + C * t * t,\n          I = (Math.atan2(R, M - g) + Math.PI) % Math.PI / 2,\n          S = Math.sin(I),\n          L = Math.cos(I);\n        a.rX = Math.abs(T) / Math.sqrt(M * l(L) + R * S * L + g * l(S)), a.rY = Math.abs(T) / Math.sqrt(M * l(S) - R * S * L + g * l(L)), a.xRot = 180 * I / Math.PI;\n      }\n      return void 0 !== a.sweepFlag && 0 > T && (a.sweepFlag = +!a.sweepFlag), a;\n    });\n  }\n  function l() {\n    return function (t) {\n      var r = {};\n      for (var e in t) r[e] = t[e];\n      return r;\n    };\n  }\n  t.ROUND = function (t) {\n    function r(r) {\n      return Math.round(r * t) / t;\n    }\n    return void 0 === t && (t = 1e13), a(t), function (t) {\n      return void 0 !== t.x1 && (t.x1 = r(t.x1)), void 0 !== t.y1 && (t.y1 = r(t.y1)), void 0 !== t.x2 && (t.x2 = r(t.x2)), void 0 !== t.y2 && (t.y2 = r(t.y2)), void 0 !== t.x && (t.x = r(t.x)), void 0 !== t.y && (t.y = r(t.y)), void 0 !== t.rX && (t.rX = r(t.rX)), void 0 !== t.rY && (t.rY = r(t.rY)), t;\n    };\n  }, t.TO_ABS = r, t.TO_REL = function () {\n    return u(function (t, r, e) {\n      return t.relative || (void 0 !== t.x1 && (t.x1 -= r), void 0 !== t.y1 && (t.y1 -= e), void 0 !== t.x2 && (t.x2 -= r), void 0 !== t.y2 && (t.y2 -= e), void 0 !== t.x && (t.x -= r), void 0 !== t.y && (t.y -= e), t.relative = !0), t;\n    });\n  }, t.NORMALIZE_HVZ = function (t, r, e) {\n    return void 0 === t && (t = !0), void 0 === r && (r = !0), void 0 === e && (e = !0), u(function (i, a, n, o, s) {\n      if (isNaN(o) && !(i.type & _.MOVE_TO)) throw new Error(\"path must start with moveto\");\n      return r && i.type & _.HORIZ_LINE_TO && (i.type = _.LINE_TO, i.y = i.relative ? 0 : n), e && i.type & _.VERT_LINE_TO && (i.type = _.LINE_TO, i.x = i.relative ? 0 : a), t && i.type & _.CLOSE_PATH && (i.type = _.LINE_TO, i.x = i.relative ? o - a : o, i.y = i.relative ? s - n : s), i.type & _.ARC && (0 === i.rX || 0 === i.rY) && (i.type = _.LINE_TO, delete i.rX, delete i.rY, delete i.xRot, delete i.lArcFlag, delete i.sweepFlag), i;\n    });\n  }, t.NORMALIZE_ST = e, t.QT_TO_C = n, t.INFO = u, t.SANITIZE = function (t) {\n    void 0 === t && (t = 0), a(t);\n    var r = NaN,\n      e = NaN,\n      i = NaN,\n      n = NaN;\n    return u(function (a, o, s, u, h) {\n      var c = Math.abs,\n        y = !1,\n        p = 0,\n        m = 0;\n      if (a.type & _.SMOOTH_CURVE_TO && (p = isNaN(r) ? 0 : o - r, m = isNaN(e) ? 0 : s - e), a.type & (_.CURVE_TO | _.SMOOTH_CURVE_TO) ? (r = a.relative ? o + a.x2 : a.x2, e = a.relative ? s + a.y2 : a.y2) : (r = NaN, e = NaN), a.type & _.SMOOTH_QUAD_TO ? (i = isNaN(i) ? o : 2 * o - i, n = isNaN(n) ? s : 2 * s - n) : a.type & _.QUAD_TO ? (i = a.relative ? o + a.x1 : a.x1, n = a.relative ? s + a.y1 : a.y2) : (i = NaN, n = NaN), a.type & _.LINE_COMMANDS || a.type & _.ARC && (0 === a.rX || 0 === a.rY || !a.lArcFlag) || a.type & _.CURVE_TO || a.type & _.SMOOTH_CURVE_TO || a.type & _.QUAD_TO || a.type & _.SMOOTH_QUAD_TO) {\n        var O = void 0 === a.x ? 0 : a.relative ? a.x : a.x - o,\n          l = void 0 === a.y ? 0 : a.relative ? a.y : a.y - s;\n        p = isNaN(i) ? void 0 === a.x1 ? p : a.relative ? a.x : a.x1 - o : i - o, m = isNaN(n) ? void 0 === a.y1 ? m : a.relative ? a.y : a.y1 - s : n - s;\n        var T = void 0 === a.x2 ? 0 : a.relative ? a.x : a.x2 - o,\n          v = void 0 === a.y2 ? 0 : a.relative ? a.y : a.y2 - s;\n        c(O) <= t && c(l) <= t && c(p) <= t && c(m) <= t && c(T) <= t && c(v) <= t && (y = !0);\n      }\n      return a.type & _.CLOSE_PATH && c(o - u) <= t && c(s - h) <= t && (y = !0), y ? [] : a;\n    });\n  }, t.MATRIX = O, t.ROTATE = function (t, r, e) {\n    void 0 === r && (r = 0), void 0 === e && (e = 0), a(t, r, e);\n    var i = Math.sin(t),\n      n = Math.cos(t);\n    return O(n, i, -i, n, r - r * n + e * i, e - r * i - e * n);\n  }, t.TRANSLATE = function (t, r) {\n    return void 0 === r && (r = 0), a(t, r), O(1, 0, 0, 1, t, r);\n  }, t.SCALE = function (t, r) {\n    return void 0 === r && (r = t), a(t, r), O(t, 0, 0, r, 0, 0);\n  }, t.SKEW_X = function (t) {\n    return a(t), O(1, 0, Math.atan(t), 1, 0, 0);\n  }, t.SKEW_Y = function (t) {\n    return a(t), O(1, Math.atan(t), 0, 1, 0, 0);\n  }, t.X_AXIS_SYMMETRY = function (t) {\n    return void 0 === t && (t = 0), a(t), O(-1, 0, 0, 1, t, 0);\n  }, t.Y_AXIS_SYMMETRY = function (t) {\n    return void 0 === t && (t = 0), a(t), O(1, 0, 0, -1, 0, t);\n  }, t.A_TO_C = function () {\n    return u(function (t, r, e) {\n      return _.ARC === t.type ? function (t, r, e) {\n        var a, n, s, u;\n        t.cX || o(t, r, e);\n        for (var y = Math.min(t.phi1, t.phi2), p = Math.max(t.phi1, t.phi2) - y, m = Math.ceil(p / 90), O = new Array(m), l = r, T = e, v = 0; v < m; v++) {\n          var f = c(t.phi1, t.phi2, v / m),\n            N = c(t.phi1, t.phi2, (v + 1) / m),\n            x = N - f,\n            d = 4 / 3 * Math.tan(x * h / 4),\n            E = [Math.cos(f * h) - d * Math.sin(f * h), Math.sin(f * h) + d * Math.cos(f * h)],\n            A = E[0],\n            C = E[1],\n            M = [Math.cos(N * h), Math.sin(N * h)],\n            R = M[0],\n            g = M[1],\n            I = [R + d * Math.sin(N * h), g - d * Math.cos(N * h)],\n            S = I[0],\n            L = I[1];\n          O[v] = {\n            relative: t.relative,\n            type: _.CURVE_TO\n          };\n          var H = function (r, e) {\n            var a = i([r * t.rX, e * t.rY], t.xRot),\n              n = a[0],\n              o = a[1];\n            return [t.cX + n, t.cY + o];\n          };\n          a = H(A, C), O[v].x1 = a[0], O[v].y1 = a[1], n = H(S, L), O[v].x2 = n[0], O[v].y2 = n[1], s = H(R, g), O[v].x = s[0], O[v].y = s[1], t.relative && (O[v].x1 -= l, O[v].y1 -= T, O[v].x2 -= l, O[v].y2 -= T, O[v].x -= l, O[v].y -= T), l = (u = [O[v].x, O[v].y])[0], T = u[1];\n        }\n        return O;\n      }(t, t.relative ? 0 : r, t.relative ? 0 : e) : t;\n    });\n  }, t.ANNOTATE_ARCS = function () {\n    return u(function (t, r, e) {\n      return t.relative && (r = 0, e = 0), _.ARC === t.type && o(t, r, e), t;\n    });\n  }, t.CLONE = l, t.CALCULATE_BOUNDS = function () {\n    var t = function (t) {\n        var r = {};\n        for (var e in t) r[e] = t[e];\n        return r;\n      },\n      i = r(),\n      a = n(),\n      h = e(),\n      c = u(function (r, e, n) {\n        var u = h(a(i(t(r))));\n        function O(t) {\n          t > c.maxX && (c.maxX = t), t < c.minX && (c.minX = t);\n        }\n        function l(t) {\n          t > c.maxY && (c.maxY = t), t < c.minY && (c.minY = t);\n        }\n        if (u.type & _.DRAWING_COMMANDS && (O(e), l(n)), u.type & _.HORIZ_LINE_TO && O(u.x), u.type & _.VERT_LINE_TO && l(u.y), u.type & _.LINE_TO && (O(u.x), l(u.y)), u.type & _.CURVE_TO) {\n          O(u.x), l(u.y);\n          for (var T = 0, v = p(e, u.x1, u.x2, u.x); T < v.length; T++) {\n            0 < (w = v[T]) && 1 > w && O(m(e, u.x1, u.x2, u.x, w));\n          }\n          for (var f = 0, N = p(n, u.y1, u.y2, u.y); f < N.length; f++) {\n            0 < (w = N[f]) && 1 > w && l(m(n, u.y1, u.y2, u.y, w));\n          }\n        }\n        if (u.type & _.ARC) {\n          O(u.x), l(u.y), o(u, e, n);\n          for (var x = u.xRot / 180 * Math.PI, d = Math.cos(x) * u.rX, E = Math.sin(x) * u.rX, A = -Math.sin(x) * u.rY, C = Math.cos(x) * u.rY, M = u.phi1 < u.phi2 ? [u.phi1, u.phi2] : -180 > u.phi2 ? [u.phi2 + 360, u.phi1 + 360] : [u.phi2, u.phi1], R = M[0], g = M[1], I = function (t) {\n              var r = t[0],\n                e = t[1],\n                i = 180 * Math.atan2(e, r) / Math.PI;\n              return i < R ? i + 360 : i;\n            }, S = 0, L = s(A, -d, 0).map(I); S < L.length; S++) {\n            (w = L[S]) > R && w < g && O(y(u.cX, d, A, w));\n          }\n          for (var H = 0, U = s(C, -E, 0).map(I); H < U.length; H++) {\n            var w;\n            (w = U[H]) > R && w < g && l(y(u.cY, E, C, w));\n          }\n        }\n        return r;\n      });\n    return c.minX = 1 / 0, c.maxX = -1 / 0, c.minY = 1 / 0, c.maxY = -1 / 0, c;\n  };\n}(u || (u = {}));\nvar O,\n  l = function () {\n    function t() {}\n    return t.prototype.round = function (t) {\n      return this.transform(u.ROUND(t));\n    }, t.prototype.toAbs = function () {\n      return this.transform(u.TO_ABS());\n    }, t.prototype.toRel = function () {\n      return this.transform(u.TO_REL());\n    }, t.prototype.normalizeHVZ = function (t, r, e) {\n      return this.transform(u.NORMALIZE_HVZ(t, r, e));\n    }, t.prototype.normalizeST = function () {\n      return this.transform(u.NORMALIZE_ST());\n    }, t.prototype.qtToC = function () {\n      return this.transform(u.QT_TO_C());\n    }, t.prototype.aToC = function () {\n      return this.transform(u.A_TO_C());\n    }, t.prototype.sanitize = function (t) {\n      return this.transform(u.SANITIZE(t));\n    }, t.prototype.translate = function (t, r) {\n      return this.transform(u.TRANSLATE(t, r));\n    }, t.prototype.scale = function (t, r) {\n      return this.transform(u.SCALE(t, r));\n    }, t.prototype.rotate = function (t, r, e) {\n      return this.transform(u.ROTATE(t, r, e));\n    }, t.prototype.matrix = function (t, r, e, i, a, n) {\n      return this.transform(u.MATRIX(t, r, e, i, a, n));\n    }, t.prototype.skewX = function (t) {\n      return this.transform(u.SKEW_X(t));\n    }, t.prototype.skewY = function (t) {\n      return this.transform(u.SKEW_Y(t));\n    }, t.prototype.xSymmetry = function (t) {\n      return this.transform(u.X_AXIS_SYMMETRY(t));\n    }, t.prototype.ySymmetry = function (t) {\n      return this.transform(u.Y_AXIS_SYMMETRY(t));\n    }, t.prototype.annotateArcs = function () {\n      return this.transform(u.ANNOTATE_ARCS());\n    }, t;\n  }(),\n  T = function (t) {\n    return \" \" === t || \"\\t\" === t || \"\\r\" === t || \"\\n\" === t;\n  },\n  v = function (t) {\n    return \"0\".charCodeAt(0) <= t.charCodeAt(0) && t.charCodeAt(0) <= \"9\".charCodeAt(0);\n  },\n  f = function (t) {\n    function e() {\n      var r = t.call(this) || this;\n      return r.curNumber = \"\", r.curCommandType = -1, r.curCommandRelative = !1, r.canParseCommandOrComma = !0, r.curNumberHasExp = !1, r.curNumberHasExpDigits = !1, r.curNumberHasDecimal = !1, r.curArgs = [], r;\n    }\n    return r(e, t), e.prototype.finish = function (t) {\n      if (void 0 === t && (t = []), this.parse(\" \", t), 0 !== this.curArgs.length || !this.canParseCommandOrComma) throw new SyntaxError(\"Unterminated command at the path end.\");\n      return t;\n    }, e.prototype.parse = function (t, r) {\n      var e = this;\n      void 0 === r && (r = []);\n      for (var i = function (t) {\n          r.push(t), e.curArgs.length = 0, e.canParseCommandOrComma = !0;\n        }, a = 0; a < t.length; a++) {\n        var n = t[a],\n          o = !(this.curCommandType !== _.ARC || 3 !== this.curArgs.length && 4 !== this.curArgs.length || 1 !== this.curNumber.length || \"0\" !== this.curNumber && \"1\" !== this.curNumber),\n          s = v(n) && (\"0\" === this.curNumber && \"0\" === n || o);\n        if (!v(n) || s) {\n          if (\"e\" !== n && \"E\" !== n) {\n            if (\"-\" !== n && \"+\" !== n || !this.curNumberHasExp || this.curNumberHasExpDigits) {\n              if (\".\" !== n || this.curNumberHasExp || this.curNumberHasDecimal || o) {\n                if (this.curNumber && -1 !== this.curCommandType) {\n                  var u = Number(this.curNumber);\n                  if (isNaN(u)) throw new SyntaxError(\"Invalid number ending at \" + a);\n                  if (this.curCommandType === _.ARC) if (0 === this.curArgs.length || 1 === this.curArgs.length) {\n                    if (0 > u) throw new SyntaxError('Expected positive number, got \"' + u + '\" at index \"' + a + '\"');\n                  } else if ((3 === this.curArgs.length || 4 === this.curArgs.length) && \"0\" !== this.curNumber && \"1\" !== this.curNumber) throw new SyntaxError('Expected a flag, got \"' + this.curNumber + '\" at index \"' + a + '\"');\n                  this.curArgs.push(u), this.curArgs.length === N[this.curCommandType] && (_.HORIZ_LINE_TO === this.curCommandType ? i({\n                    type: _.HORIZ_LINE_TO,\n                    relative: this.curCommandRelative,\n                    x: u\n                  }) : _.VERT_LINE_TO === this.curCommandType ? i({\n                    type: _.VERT_LINE_TO,\n                    relative: this.curCommandRelative,\n                    y: u\n                  }) : this.curCommandType === _.MOVE_TO || this.curCommandType === _.LINE_TO || this.curCommandType === _.SMOOTH_QUAD_TO ? (i({\n                    type: this.curCommandType,\n                    relative: this.curCommandRelative,\n                    x: this.curArgs[0],\n                    y: this.curArgs[1]\n                  }), _.MOVE_TO === this.curCommandType && (this.curCommandType = _.LINE_TO)) : this.curCommandType === _.CURVE_TO ? i({\n                    type: _.CURVE_TO,\n                    relative: this.curCommandRelative,\n                    x1: this.curArgs[0],\n                    y1: this.curArgs[1],\n                    x2: this.curArgs[2],\n                    y2: this.curArgs[3],\n                    x: this.curArgs[4],\n                    y: this.curArgs[5]\n                  }) : this.curCommandType === _.SMOOTH_CURVE_TO ? i({\n                    type: _.SMOOTH_CURVE_TO,\n                    relative: this.curCommandRelative,\n                    x2: this.curArgs[0],\n                    y2: this.curArgs[1],\n                    x: this.curArgs[2],\n                    y: this.curArgs[3]\n                  }) : this.curCommandType === _.QUAD_TO ? i({\n                    type: _.QUAD_TO,\n                    relative: this.curCommandRelative,\n                    x1: this.curArgs[0],\n                    y1: this.curArgs[1],\n                    x: this.curArgs[2],\n                    y: this.curArgs[3]\n                  }) : this.curCommandType === _.ARC && i({\n                    type: _.ARC,\n                    relative: this.curCommandRelative,\n                    rX: this.curArgs[0],\n                    rY: this.curArgs[1],\n                    xRot: this.curArgs[2],\n                    lArcFlag: this.curArgs[3],\n                    sweepFlag: this.curArgs[4],\n                    x: this.curArgs[5],\n                    y: this.curArgs[6]\n                  })), this.curNumber = \"\", this.curNumberHasExpDigits = !1, this.curNumberHasExp = !1, this.curNumberHasDecimal = !1, this.canParseCommandOrComma = !0;\n                }\n                if (!T(n)) if (\",\" === n && this.canParseCommandOrComma) this.canParseCommandOrComma = !1;else if (\"+\" !== n && \"-\" !== n && \".\" !== n) {\n                  if (s) this.curNumber = n, this.curNumberHasDecimal = !1;else {\n                    if (0 !== this.curArgs.length) throw new SyntaxError(\"Unterminated command at index \" + a + \".\");\n                    if (!this.canParseCommandOrComma) throw new SyntaxError('Unexpected character \"' + n + '\" at index ' + a + \". Command cannot follow comma\");\n                    if (this.canParseCommandOrComma = !1, \"z\" !== n && \"Z\" !== n) {\n                      if (\"h\" === n || \"H\" === n) this.curCommandType = _.HORIZ_LINE_TO, this.curCommandRelative = \"h\" === n;else if (\"v\" === n || \"V\" === n) this.curCommandType = _.VERT_LINE_TO, this.curCommandRelative = \"v\" === n;else if (\"m\" === n || \"M\" === n) this.curCommandType = _.MOVE_TO, this.curCommandRelative = \"m\" === n;else if (\"l\" === n || \"L\" === n) this.curCommandType = _.LINE_TO, this.curCommandRelative = \"l\" === n;else if (\"c\" === n || \"C\" === n) this.curCommandType = _.CURVE_TO, this.curCommandRelative = \"c\" === n;else if (\"s\" === n || \"S\" === n) this.curCommandType = _.SMOOTH_CURVE_TO, this.curCommandRelative = \"s\" === n;else if (\"q\" === n || \"Q\" === n) this.curCommandType = _.QUAD_TO, this.curCommandRelative = \"q\" === n;else if (\"t\" === n || \"T\" === n) this.curCommandType = _.SMOOTH_QUAD_TO, this.curCommandRelative = \"t\" === n;else {\n                        if (\"a\" !== n && \"A\" !== n) throw new SyntaxError('Unexpected character \"' + n + '\" at index ' + a + \".\");\n                        this.curCommandType = _.ARC, this.curCommandRelative = \"a\" === n;\n                      }\n                    } else r.push({\n                      type: _.CLOSE_PATH\n                    }), this.canParseCommandOrComma = !0, this.curCommandType = -1;\n                  }\n                } else this.curNumber = n, this.curNumberHasDecimal = \".\" === n;\n              } else this.curNumber += n, this.curNumberHasDecimal = !0;\n            } else this.curNumber += n;\n          } else this.curNumber += n, this.curNumberHasExp = !0;\n        } else this.curNumber += n, this.curNumberHasExpDigits = this.curNumberHasExp;\n      }\n      return r;\n    }, e.prototype.transform = function (t) {\n      return Object.create(this, {\n        parse: {\n          value: function (r, e) {\n            void 0 === e && (e = []);\n            for (var i = 0, a = Object.getPrototypeOf(this).parse.call(this, r); i < a.length; i++) {\n              var n = a[i],\n                o = t(n);\n              Array.isArray(o) ? e.push.apply(e, o) : e.push(o);\n            }\n            return e;\n          }\n        }\n      });\n    }, e;\n  }(l),\n  _ = function (t) {\n    function i(r) {\n      var e = t.call(this) || this;\n      return e.commands = \"string\" == typeof r ? i.parse(r) : r, e;\n    }\n    return r(i, t), i.prototype.encode = function () {\n      return i.encode(this.commands);\n    }, i.prototype.getBounds = function () {\n      var t = u.CALCULATE_BOUNDS();\n      return this.transform(t), t;\n    }, i.prototype.transform = function (t) {\n      for (var r = [], e = 0, i = this.commands; e < i.length; e++) {\n        var a = t(i[e]);\n        Array.isArray(a) ? r.push.apply(r, a) : r.push(a);\n      }\n      return this.commands = r, this;\n    }, i.encode = function (t) {\n      return e(t);\n    }, i.parse = function (t) {\n      var r = new f(),\n        e = [];\n      return r.parse(t, e), r.finish(e), e;\n    }, i.CLOSE_PATH = 1, i.MOVE_TO = 2, i.HORIZ_LINE_TO = 4, i.VERT_LINE_TO = 8, i.LINE_TO = 16, i.CURVE_TO = 32, i.SMOOTH_CURVE_TO = 64, i.QUAD_TO = 128, i.SMOOTH_QUAD_TO = 256, i.ARC = 512, i.LINE_COMMANDS = i.LINE_TO | i.HORIZ_LINE_TO | i.VERT_LINE_TO, i.DRAWING_COMMANDS = i.HORIZ_LINE_TO | i.VERT_LINE_TO | i.LINE_TO | i.CURVE_TO | i.SMOOTH_CURVE_TO | i.QUAD_TO | i.SMOOTH_QUAD_TO | i.ARC, i;\n  }(l),\n  N = ((O = {})[_.MOVE_TO] = 2, O[_.LINE_TO] = 2, O[_.HORIZ_LINE_TO] = 1, O[_.VERT_LINE_TO] = 1, O[_.CLOSE_PATH] = 0, O[_.QUAD_TO] = 4, O[_.SMOOTH_QUAD_TO] = 2, O[_.CURVE_TO] = 6, O[_.SMOOTH_CURVE_TO] = 4, O[_.ARC] = 7, O);\nexport { N as COMMAND_ARG_COUNTS, _ as SVGPathData, f as SVGPathDataParser, u as SVGPathDataTransformer, e as encodeSVGPath };","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-bitwise -- used for calculations */\n\n/* eslint-disable unicorn/prefer-query-selector -- aiming at\n  backward-compatibility */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffset\n * @param {boolean} skipStyles\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel, useOffset, skipStyles) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n  if (!img || Object.prototype.toString.call(img).slice(8, -1) === 'HTMLImageElement' && !('naturalWidth' in img)) {\n    return;\n  }\n  var dimensionType = useOffset ? 'offset' : 'natural';\n  var w = img[dimensionType + 'Width'];\n  var h = img[dimensionType + 'Height']; // add ImageBitmap support,can blur texture source\n\n  if (Object.prototype.toString.call(img).slice(8, -1) === 'ImageBitmap') {\n    w = img.width;\n    h = img.height;\n  }\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n  if (!skipStyles) {\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n  var context = canvas.getContext('2d');\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n  stack.next = stackStart;\n  var stackIn = null,\n    stackOut = null,\n    yw = 0,\n    yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  for (var y = 0; y < height; y++) {\n    stack = stackStart;\n    var pr = pixels[yi],\n      pg = pixels[yi + 1],\n      pb = pixels[yi + 2],\n      pa = pixels[yi + 3];\n    for (var _i = 0; _i < radiusPlus1; _i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n    var rInSum = 0,\n      gInSum = 0,\n      bInSum = 0,\n      aInSum = 0,\n      rOutSum = radiusPlus1 * pr,\n      gOutSum = radiusPlus1 * pg,\n      bOutSum = radiusPlus1 * pb,\n      aOutSum = radiusPlus1 * pa,\n      rSum = sumFactor * pr,\n      gSum = sumFactor * pg,\n      bSum = sumFactor * pb,\n      aSum = sumFactor * pa;\n    for (var _i2 = 1; _i2 < radiusPlus1; _i2++) {\n      var p = yi + ((widthMinus1 < _i2 ? widthMinus1 : _i2) << 2);\n      var r = pixels[p],\n        g = pixels[p + 1],\n        b = pixels[p + 2],\n        a = pixels[p + 3];\n      var rbs = radiusPlus1 - _i2;\n      rSum += (stack.r = r) * rbs;\n      gSum += (stack.g = g) * rbs;\n      bSum += (stack.b = b) * rbs;\n      aSum += (stack.a = a) * rbs;\n      rInSum += r;\n      gInSum += g;\n      bInSum += b;\n      aInSum += a;\n      stack = stack.next;\n    }\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (var x = 0; x < width; x++) {\n      var paInitial = aSum * mulSum >>> shgSum;\n      pixels[yi + 3] = paInitial;\n      if (paInitial !== 0) {\n        var _a2 = 255 / paInitial;\n        pixels[yi] = (rSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 1] = (gSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 2] = (bSum * mulSum >>> shgSum) * _a2;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n      var _p = x + radius + 1;\n      _p = yw + (_p < widthMinus1 ? _p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[_p];\n      gInSum += stackIn.g = pixels[_p + 1];\n      bInSum += stackIn.b = pixels[_p + 2];\n      aInSum += stackIn.a = pixels[_p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      var _stackOut = stackOut,\n        _r = _stackOut.r,\n        _g = _stackOut.g,\n        _b = _stackOut.b,\n        _a = _stackOut.a;\n      rOutSum += _r;\n      gOutSum += _g;\n      bOutSum += _b;\n      aOutSum += _a;\n      rInSum -= _r;\n      gInSum -= _g;\n      bInSum -= _b;\n      aInSum -= _a;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n    yw += width;\n  }\n  for (var _x = 0; _x < width; _x++) {\n    yi = _x << 2;\n    var _pr = pixels[yi],\n      _pg = pixels[yi + 1],\n      _pb = pixels[yi + 2],\n      _pa = pixels[yi + 3],\n      _rOutSum = radiusPlus1 * _pr,\n      _gOutSum = radiusPlus1 * _pg,\n      _bOutSum = radiusPlus1 * _pb,\n      _aOutSum = radiusPlus1 * _pa,\n      _rSum = sumFactor * _pr,\n      _gSum = sumFactor * _pg,\n      _bSum = sumFactor * _pb,\n      _aSum = sumFactor * _pa;\n    stack = stackStart;\n    for (var _i3 = 0; _i3 < radiusPlus1; _i3++) {\n      stack.r = _pr;\n      stack.g = _pg;\n      stack.b = _pb;\n      stack.a = _pa;\n      stack = stack.next;\n    }\n    var yp = width;\n    var _gInSum = 0,\n      _bInSum = 0,\n      _aInSum = 0,\n      _rInSum = 0;\n    for (var _i4 = 1; _i4 <= radius; _i4++) {\n      yi = yp + _x << 2;\n      var _rbs = radiusPlus1 - _i4;\n      _rSum += (stack.r = _pr = pixels[yi]) * _rbs;\n      _gSum += (stack.g = _pg = pixels[yi + 1]) * _rbs;\n      _bSum += (stack.b = _pb = pixels[yi + 2]) * _rbs;\n      _aSum += (stack.a = _pa = pixels[yi + 3]) * _rbs;\n      _rInSum += _pr;\n      _gInSum += _pg;\n      _bInSum += _pb;\n      _aInSum += _pa;\n      stack = stack.next;\n      if (_i4 < heightMinus1) {\n        yp += width;\n      }\n    }\n    yi = _x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (var _y = 0; _y < height; _y++) {\n      var _p2 = yi << 2;\n      pixels[_p2 + 3] = _pa = _aSum * mulSum >>> shgSum;\n      if (_pa > 0) {\n        _pa = 255 / _pa;\n        pixels[_p2] = (_rSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 1] = (_gSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 2] = (_bSum * mulSum >>> shgSum) * _pa;\n      } else {\n        pixels[_p2] = pixels[_p2 + 1] = pixels[_p2 + 2] = 0;\n      }\n      _rSum -= _rOutSum;\n      _gSum -= _gOutSum;\n      _bSum -= _bOutSum;\n      _aSum -= _aOutSum;\n      _rOutSum -= stackIn.r;\n      _gOutSum -= stackIn.g;\n      _bOutSum -= stackIn.b;\n      _aOutSum -= stackIn.a;\n      _p2 = _x + ((_p2 = _y + radiusPlus1) < heightMinus1 ? _p2 : heightMinus1) * width << 2;\n      _rSum += _rInSum += stackIn.r = pixels[_p2];\n      _gSum += _gInSum += stackIn.g = pixels[_p2 + 1];\n      _bSum += _bInSum += stackIn.b = pixels[_p2 + 2];\n      _aSum += _aInSum += stackIn.a = pixels[_p2 + 3];\n      stackIn = stackIn.next;\n      _rOutSum += _pr = stackOut.r;\n      _gOutSum += _pg = stackOut.g;\n      _bOutSum += _pb = stackOut.b;\n      _aOutSum += _pa = stackOut.a;\n      _rInSum -= _pr;\n      _gInSum -= _pg;\n      _bInSum -= _pb;\n      _aInSum -= _pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  var p, rbs;\n  var yw = 0,\n    yi = 0;\n  for (var y = 0; y < height; y++) {\n    var pr = pixels[yi],\n      pg = pixels[yi + 1],\n      pb = pixels[yi + 2],\n      rOutSum = radiusPlus1 * pr,\n      gOutSum = radiusPlus1 * pg,\n      bOutSum = radiusPlus1 * pb,\n      rSum = sumFactor * pr,\n      gSum = sumFactor * pg,\n      bSum = sumFactor * pb;\n    stack = stackStart;\n    for (var _i5 = 0; _i5 < radiusPlus1; _i5++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n    var rInSum = 0,\n      gInSum = 0,\n      bInSum = 0;\n    for (var _i6 = 1; _i6 < radiusPlus1; _i6++) {\n      p = yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - _i6);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (var x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >>> shgSum;\n      pixels[yi + 1] = gSum * mulSum >>> shgSum;\n      pixels[yi + 2] = bSum * mulSum >>> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n    yw += width;\n  }\n  for (var _x2 = 0; _x2 < width; _x2++) {\n    yi = _x2 << 2;\n    var _pr2 = pixels[yi],\n      _pg2 = pixels[yi + 1],\n      _pb2 = pixels[yi + 2],\n      _rOutSum2 = radiusPlus1 * _pr2,\n      _gOutSum2 = radiusPlus1 * _pg2,\n      _bOutSum2 = radiusPlus1 * _pb2,\n      _rSum2 = sumFactor * _pr2,\n      _gSum2 = sumFactor * _pg2,\n      _bSum2 = sumFactor * _pb2;\n    stack = stackStart;\n    for (var _i7 = 0; _i7 < radiusPlus1; _i7++) {\n      stack.r = _pr2;\n      stack.g = _pg2;\n      stack.b = _pb2;\n      stack = stack.next;\n    }\n    var _rInSum2 = 0,\n      _gInSum2 = 0,\n      _bInSum2 = 0;\n    for (var _i8 = 1, yp = width; _i8 <= radius; _i8++) {\n      yi = yp + _x2 << 2;\n      _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);\n      _gSum2 += (stack.g = _pg2 = pixels[yi + 1]) * rbs;\n      _bSum2 += (stack.b = _pb2 = pixels[yi + 2]) * rbs;\n      _rInSum2 += _pr2;\n      _gInSum2 += _pg2;\n      _bInSum2 += _pb2;\n      stack = stack.next;\n      if (_i8 < heightMinus1) {\n        yp += width;\n      }\n    }\n    yi = _x2;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (var _y2 = 0; _y2 < height; _y2++) {\n      p = yi << 2;\n      pixels[p] = _rSum2 * mulSum >>> shgSum;\n      pixels[p + 1] = _gSum2 * mulSum >>> shgSum;\n      pixels[p + 2] = _bSum2 * mulSum >>> shgSum;\n      _rSum2 -= _rOutSum2;\n      _gSum2 -= _gOutSum2;\n      _bSum2 -= _bOutSum2;\n      _rOutSum2 -= stackIn.r;\n      _gOutSum2 -= stackIn.g;\n      _bOutSum2 -= stackIn.b;\n      p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      _rSum2 += _rInSum2 += stackIn.r = pixels[p];\n      _gSum2 += _gInSum2 += stackIn.g = pixels[p + 1];\n      _bSum2 += _bInSum2 += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      _rOutSum2 += _pr2 = stackOut.r;\n      _gOutSum2 += _pg2 = stackOut.g;\n      _bOutSum2 += _pb2 = stackOut.b;\n      _rInSum2 -= _pr2;\n      _gInSum2 -= _pg2;\n      _bInSum2 -= _pb2;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n  return imageData;\n}\n/**\n *\n */\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };","import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport requestAnimationFrame from 'raf';\nimport RGBColor from 'rgbcolor';\nimport { SVGPathData } from 'svg-pathdata';\nimport { canvasRGBA } from 'stackblur-canvas';\n\n/**\r\n * Options preset for `OffscreenCanvas`.\r\n * @param config - Preset requirements.\r\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\r\n * @returns Preset object.\r\n */\nfunction offscreen() {\n  var {\n    DOMParser: DOMParserFallback\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var preset = {\n    window: null,\n    ignoreAnimation: true,\n    ignoreMouse: true,\n    DOMParser: DOMParserFallback,\n    createCanvas(width, height) {\n      return new OffscreenCanvas(width, height);\n    },\n    createImage(url) {\n      return _asyncToGenerator(function* () {\n        var response = yield fetch(url);\n        var blob = yield response.blob();\n        var img = yield createImageBitmap(blob);\n        return img;\n      })();\n    }\n  };\n  if (typeof DOMParser !== 'undefined' || typeof DOMParserFallback === 'undefined') {\n    Reflect.deleteProperty(preset, 'DOMParser');\n  }\n  return preset;\n}\n\n/**\r\n * Options preset for `node-canvas`.\r\n * @param config - Preset requirements.\r\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\r\n * @param config.canvas - `node-canvas` exports.\r\n * @param config.fetch - WHATWG-compatible `fetch` function.\r\n * @returns Preset object.\r\n */\nfunction node(_ref) {\n  var {\n    DOMParser,\n    canvas,\n    fetch\n  } = _ref;\n  return {\n    window: null,\n    ignoreAnimation: true,\n    ignoreMouse: true,\n    DOMParser,\n    fetch,\n    createCanvas: canvas.createCanvas,\n    createImage: canvas.loadImage\n  };\n}\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  offscreen: offscreen,\n  node: node\n});\n\n/**\r\n * HTML-safe compress white-spaces.\r\n * @param str - String to compress.\r\n * @returns String.\r\n */\nfunction compressSpaces(str) {\n  return str.replace(/(?!\\u3000)\\s+/gm, ' ');\n}\n/**\r\n * HTML-safe left trim.\r\n * @param str - String to trim.\r\n * @returns String.\r\n */\n\nfunction trimLeft(str) {\n  return str.replace(/^[\\n \\t]+/, '');\n}\n/**\r\n * HTML-safe right trim.\r\n * @param str - String to trim.\r\n * @returns String.\r\n */\n\nfunction trimRight(str) {\n  return str.replace(/[\\n \\t]+$/, '');\n}\n/**\r\n * String to numbers array.\r\n * @param str - Numbers string.\r\n * @returns Numbers array.\r\n */\n\nfunction toNumbers(str) {\n  var matches = (str || '').match(/-?(\\d+(?:\\.\\d*(?:[eE][+-]?\\d+)?)?|\\.\\d+)(?=\\D|$)/gm) || [];\n  return matches.map(parseFloat);\n} // Microsoft Edge fix\n\nvar allUppercase = /^[A-Z-]+$/;\n/**\r\n * Normalize attribute name.\r\n * @param name - Attribute name.\r\n * @returns Normalized attribute name.\r\n */\n\nfunction normalizeAttributeName(name) {\n  if (allUppercase.test(name)) {\n    return name.toLowerCase();\n  }\n  return name;\n}\n/**\r\n * Parse external URL.\r\n * @param url - CSS url string.\r\n * @returns Parsed URL.\r\n */\n\nfunction parseExternalUrl(url) {\n  //                      single quotes [2]\n  //                      v         double quotes [3]\n  //                      v         v         no quotes [4]\n  //                      v         v         v\n  var urlMatch = /url\\(('([^']+)'|\"([^\"]+)\"|([^'\")]+))\\)/.exec(url) || [];\n  return urlMatch[2] || urlMatch[3] || urlMatch[4];\n}\n/**\r\n * Transform floats to integers in rgb colors.\r\n * @param color - Color to normalize.\r\n * @returns Normalized color.\r\n */\n\nfunction normalizeColor(color) {\n  if (!color.startsWith('rgb')) {\n    return color;\n  }\n  var rgbParts = 3;\n  var normalizedColor = color.replace(/\\d+(\\.\\d+)?/g, (num, isFloat) => rgbParts-- && isFloat ? String(Math.round(parseFloat(num))) : num);\n  return normalizedColor;\n}\n\n// slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js\nvar attributeRegex = /(\\[[^\\]]+\\])/g;\nvar idRegex = /(#[^\\s+>~.[:]+)/g;\nvar classRegex = /(\\.[^\\s+>~.[:]+)/g;\nvar pseudoElementRegex = /(::[^\\s+>~.[:]+|:first-line|:first-letter|:before|:after)/gi;\nvar pseudoClassWithBracketsRegex = /(:[\\w-]+\\([^)]*\\))/gi;\nvar pseudoClassRegex = /(:[^\\s+>~.[:]+)/g;\nvar elementRegex = /([^\\s+>~.[:]+)/g;\nfunction findSelectorMatch(selector, regex) {\n  var matches = regex.exec(selector);\n  if (!matches) {\n    return [selector, 0];\n  }\n  return [selector.replace(regex, ' '), matches.length];\n}\n/**\r\n * Measure selector specificity.\r\n * @param selector - Selector to measure.\r\n * @returns Specificity.\r\n */\n\nfunction getSelectorSpecificity(selector) {\n  var specificity = [0, 0, 0];\n  var currentSelector = selector.replace(/:not\\(([^)]*)\\)/g, '     $1 ').replace(/{[\\s\\S]*/gm, ' ');\n  var delta = 0;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, attributeRegex);\n  specificity[1] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, idRegex);\n  specificity[0] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, classRegex);\n  specificity[1] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoElementRegex);\n  specificity[2] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassWithBracketsRegex);\n  specificity[1] += delta;\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassRegex);\n  specificity[1] += delta;\n  currentSelector = currentSelector.replace(/[*\\s+>~]/g, ' ').replace(/[#.]/g, ' ');\n  [currentSelector, delta] = findSelectorMatch(currentSelector, elementRegex); // lgtm [js/useless-assignment-to-local]\n\n  specificity[2] += delta;\n  return specificity.join('');\n}\nvar PSEUDO_ZERO = .00000001;\n/**\r\n * Vector magnitude.\r\n * @param v\r\n * @returns Number result.\r\n */\n\nfunction vectorMagnitude(v) {\n  return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2));\n}\n/**\r\n * Ratio between two vectors.\r\n * @param u\r\n * @param v\r\n * @returns Number result.\r\n */\n\nfunction vectorsRatio(u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vectorMagnitude(u) * vectorMagnitude(v));\n}\n/**\r\n * Angle between two vectors.\r\n * @param u\r\n * @param v\r\n * @returns Number result.\r\n */\n\nfunction vectorsAngle(u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vectorsRatio(u, v));\n}\nfunction CB1(t) {\n  return t * t * t;\n}\nfunction CB2(t) {\n  return 3 * t * t * (1 - t);\n}\nfunction CB3(t) {\n  return 3 * t * (1 - t) * (1 - t);\n}\nfunction CB4(t) {\n  return (1 - t) * (1 - t) * (1 - t);\n}\nfunction QB1(t) {\n  return t * t;\n}\nfunction QB2(t) {\n  return 2 * t * (1 - t);\n}\nfunction QB3(t) {\n  return (1 - t) * (1 - t);\n}\nclass Property {\n  constructor(document, name, value) {\n    this.document = document;\n    this.name = name;\n    this.value = value;\n    this.isNormalizedColor = false;\n  }\n  static empty(document) {\n    return new Property(document, 'EMPTY', '');\n  }\n  split() {\n    var separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ' ';\n    var {\n      document,\n      name\n    } = this;\n    return compressSpaces(this.getString()).trim().split(separator).map(value => new Property(document, name, value));\n  }\n  hasValue(zeroIsValue) {\n    var {\n      value\n    } = this;\n    return value !== null && value !== '' && (zeroIsValue || value !== 0) && typeof value !== 'undefined';\n  }\n  isString(regexp) {\n    var {\n      value\n    } = this;\n    var result = typeof value === 'string';\n    if (!result || !regexp) {\n      return result;\n    }\n    return regexp.test(value);\n  }\n  isUrlDefinition() {\n    return this.isString(/^url\\(/);\n  }\n  isPixels() {\n    if (!this.hasValue()) {\n      return false;\n    }\n    var asString = this.getString();\n    switch (true) {\n      case asString.endsWith('px'):\n      case /^[0-9]+$/.test(asString):\n        return true;\n      default:\n        return false;\n    }\n  }\n  setValue(value) {\n    this.value = value;\n    return this;\n  }\n  getValue(def) {\n    if (typeof def === 'undefined' || this.hasValue()) {\n      return this.value;\n    }\n    return def;\n  }\n  getNumber(def) {\n    if (!this.hasValue()) {\n      if (typeof def === 'undefined') {\n        return 0;\n      }\n      return parseFloat(def);\n    }\n    var {\n      value\n    } = this;\n    var n = parseFloat(value);\n    if (this.isString(/%$/)) {\n      n /= 100.0;\n    }\n    return n;\n  }\n  getString(def) {\n    if (typeof def === 'undefined' || this.hasValue()) {\n      return typeof this.value === 'undefined' ? '' : String(this.value);\n    }\n    return String(def);\n  }\n  getColor(def) {\n    var color = this.getString(def);\n    if (this.isNormalizedColor) {\n      return color;\n    }\n    this.isNormalizedColor = true;\n    color = normalizeColor(color);\n    this.value = color;\n    return color;\n  }\n  getDpi() {\n    return 96.0; // TODO: compute?\n  }\n  getRem() {\n    return this.document.rootEmSize;\n  }\n  getEm() {\n    return this.document.emSize;\n  }\n  getUnits() {\n    return this.getString().replace(/[0-9.-]/g, '');\n  }\n  getPixels(axisOrIsFontSize) {\n    var processPercent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!this.hasValue()) {\n      return 0;\n    }\n    var [axis, isFontSize] = typeof axisOrIsFontSize === 'boolean' ? [undefined, axisOrIsFontSize] : [axisOrIsFontSize];\n    var {\n      viewPort\n    } = this.document.screen;\n    switch (true) {\n      case this.isString(/vmin$/):\n        return this.getNumber() / 100.0 * Math.min(viewPort.computeSize('x'), viewPort.computeSize('y'));\n      case this.isString(/vmax$/):\n        return this.getNumber() / 100.0 * Math.max(viewPort.computeSize('x'), viewPort.computeSize('y'));\n      case this.isString(/vw$/):\n        return this.getNumber() / 100.0 * viewPort.computeSize('x');\n      case this.isString(/vh$/):\n        return this.getNumber() / 100.0 * viewPort.computeSize('y');\n      case this.isString(/rem$/):\n        return this.getNumber() * this.getRem();\n      case this.isString(/em$/):\n        return this.getNumber() * this.getEm();\n      case this.isString(/ex$/):\n        return this.getNumber() * this.getEm() / 2.0;\n      case this.isString(/px$/):\n        return this.getNumber();\n      case this.isString(/pt$/):\n        return this.getNumber() * this.getDpi() * (1.0 / 72.0);\n      case this.isString(/pc$/):\n        return this.getNumber() * 15;\n      case this.isString(/cm$/):\n        return this.getNumber() * this.getDpi() / 2.54;\n      case this.isString(/mm$/):\n        return this.getNumber() * this.getDpi() / 25.4;\n      case this.isString(/in$/):\n        return this.getNumber() * this.getDpi();\n      case this.isString(/%$/) && isFontSize:\n        return this.getNumber() * this.getEm();\n      case this.isString(/%$/):\n        return this.getNumber() * viewPort.computeSize(axis);\n      default:\n        {\n          var n = this.getNumber();\n          if (processPercent && n < 1.0) {\n            return n * viewPort.computeSize(axis);\n          }\n          return n;\n        }\n    }\n  }\n  getMilliseconds() {\n    if (!this.hasValue()) {\n      return 0;\n    }\n    if (this.isString(/ms$/)) {\n      return this.getNumber();\n    }\n    return this.getNumber() * 1000;\n  }\n  getRadians() {\n    if (!this.hasValue()) {\n      return 0;\n    }\n    switch (true) {\n      case this.isString(/deg$/):\n        return this.getNumber() * (Math.PI / 180.0);\n      case this.isString(/grad$/):\n        return this.getNumber() * (Math.PI / 200.0);\n      case this.isString(/rad$/):\n        return this.getNumber();\n      default:\n        return this.getNumber() * (Math.PI / 180.0);\n    }\n  }\n  getDefinition() {\n    var asString = this.getString();\n    var name = /#([^)'\"]+)/.exec(asString);\n    if (name) {\n      name = name[1];\n    }\n    if (!name) {\n      name = asString;\n    }\n    return this.document.definitions[name];\n  }\n  getFillStyleDefinition(element, opacity) {\n    var def = this.getDefinition();\n    if (!def) {\n      return null;\n    } // gradient\n\n    if (typeof def.createGradient === 'function') {\n      return def.createGradient(this.document.ctx, element, opacity);\n    } // pattern\n\n    if (typeof def.createPattern === 'function') {\n      if (def.getHrefAttribute().hasValue()) {\n        var patternTransform = def.getAttribute('patternTransform');\n        def = def.getHrefAttribute().getDefinition();\n        if (patternTransform.hasValue()) {\n          def.getAttribute('patternTransform', true).setValue(patternTransform.value);\n        }\n      }\n      return def.createPattern(this.document.ctx, element, opacity);\n    }\n    return null;\n  }\n  getTextBaseline() {\n    if (!this.hasValue()) {\n      return null;\n    }\n    return Property.textBaselineMapping[this.getString()];\n  }\n  addOpacity(opacity) {\n    var value = this.getColor();\n    var len = value.length;\n    var commas = 0; // Simulate old RGBColor version, which can't parse rgba.\n\n    for (var i = 0; i < len; i++) {\n      if (value[i] === ',') {\n        commas++;\n      }\n      if (commas === 3) {\n        break;\n      }\n    }\n    if (opacity.hasValue() && this.isString() && commas !== 3) {\n      var color = new RGBColor(value);\n      if (color.ok) {\n        color.alpha = opacity.getNumber();\n        value = color.toRGBA();\n      }\n    }\n    return new Property(this.document, this.name, value);\n  }\n}\nProperty.textBaselineMapping = {\n  'baseline': 'alphabetic',\n  'before-edge': 'top',\n  'text-before-edge': 'top',\n  'middle': 'middle',\n  'central': 'middle',\n  'after-edge': 'bottom',\n  'text-after-edge': 'bottom',\n  'ideographic': 'ideographic',\n  'alphabetic': 'alphabetic',\n  'hanging': 'hanging',\n  'mathematical': 'alphabetic'\n};\nclass ViewPort {\n  constructor() {\n    this.viewPorts = [];\n  }\n  clear() {\n    this.viewPorts = [];\n  }\n  setCurrent(width, height) {\n    this.viewPorts.push({\n      width,\n      height\n    });\n  }\n  removeCurrent() {\n    this.viewPorts.pop();\n  }\n  getCurrent() {\n    var {\n      viewPorts\n    } = this;\n    return viewPorts[viewPorts.length - 1];\n  }\n  get width() {\n    return this.getCurrent().width;\n  }\n  get height() {\n    return this.getCurrent().height;\n  }\n  computeSize(d) {\n    if (typeof d === 'number') {\n      return d;\n    }\n    if (d === 'x') {\n      return this.width;\n    }\n    if (d === 'y') {\n      return this.height;\n    }\n    return Math.sqrt(Math.pow(this.width, 2) + Math.pow(this.height, 2)) / Math.sqrt(2);\n  }\n}\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  static parse(point) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var [x = defaultValue, y = defaultValue] = toNumbers(point);\n    return new Point(x, y);\n  }\n  static parseScale(scale) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var [x = defaultValue, y = x] = toNumbers(scale);\n    return new Point(x, y);\n  }\n  static parsePath(path) {\n    var points = toNumbers(path);\n    var len = points.length;\n    var pathPoints = [];\n    for (var i = 0; i < len; i += 2) {\n      pathPoints.push(new Point(points[i], points[i + 1]));\n    }\n    return pathPoints;\n  }\n  angleTo(point) {\n    return Math.atan2(point.y - this.y, point.x - this.x);\n  }\n  applyTransform(transform) {\n    var {\n      x,\n      y\n    } = this;\n    var xp = x * transform[0] + y * transform[2] + transform[4];\n    var yp = x * transform[1] + y * transform[3] + transform[5];\n    this.x = xp;\n    this.y = yp;\n  }\n}\nclass Mouse {\n  constructor(screen) {\n    this.screen = screen;\n    this.working = false;\n    this.events = [];\n    this.eventElements = []; // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n    this.onClick = this.onClick.bind(this); // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n    this.onMouseMove = this.onMouseMove.bind(this);\n  }\n  isWorking() {\n    return this.working;\n  }\n  start() {\n    if (this.working) {\n      return;\n    }\n    var {\n      screen,\n      onClick,\n      onMouseMove\n    } = this;\n    var canvas = screen.ctx.canvas;\n    canvas.onclick = onClick;\n    canvas.onmousemove = onMouseMove;\n    this.working = true;\n  }\n  stop() {\n    if (!this.working) {\n      return;\n    }\n    var canvas = this.screen.ctx.canvas;\n    this.working = false;\n    canvas.onclick = null;\n    canvas.onmousemove = null;\n  }\n  hasEvents() {\n    return this.working && this.events.length > 0;\n  }\n  runEvents() {\n    if (!this.working) {\n      return;\n    }\n    var {\n      screen: document,\n      events,\n      eventElements\n    } = this;\n    var {\n      style\n    } = document.ctx.canvas;\n    if (style) {\n      style.cursor = '';\n    }\n    events.forEach((_ref, i) => {\n      var {\n        run\n      } = _ref;\n      var element = eventElements[i];\n      while (element) {\n        run(element);\n        element = element.parent;\n      }\n    }); // done running, clear\n\n    this.events = [];\n    this.eventElements = [];\n  }\n  checkPath(element, ctx) {\n    if (!this.working || !ctx) {\n      return;\n    }\n    var {\n      events,\n      eventElements\n    } = this;\n    events.forEach((_ref2, i) => {\n      var {\n        x,\n        y\n      } = _ref2;\n      if (!eventElements[i] && ctx.isPointInPath && ctx.isPointInPath(x, y)) {\n        eventElements[i] = element;\n      }\n    });\n  }\n  checkBoundingBox(element, boundingBox) {\n    if (!this.working || !boundingBox) {\n      return;\n    }\n    var {\n      events,\n      eventElements\n    } = this;\n    events.forEach((_ref3, i) => {\n      var {\n        x,\n        y\n      } = _ref3;\n      if (!eventElements[i] && boundingBox.isPointInBox(x, y)) {\n        eventElements[i] = element;\n      }\n    });\n  }\n  mapXY(x, y) {\n    var {\n      window,\n      ctx\n    } = this.screen;\n    var point = new Point(x, y);\n    var element = ctx.canvas;\n    while (element) {\n      point.x -= element.offsetLeft;\n      point.y -= element.offsetTop;\n      element = element.offsetParent;\n    }\n    if (window.scrollX) {\n      point.x += window.scrollX;\n    }\n    if (window.scrollY) {\n      point.y += window.scrollY;\n    }\n    return point;\n  }\n  onClick(event) {\n    var {\n      x,\n      y\n    } = this.mapXY(event.clientX, event.clientY);\n    this.events.push({\n      type: 'onclick',\n      x,\n      y,\n      run(eventTarget) {\n        if (eventTarget.onClick) {\n          eventTarget.onClick();\n        }\n      }\n    });\n  }\n  onMouseMove(event) {\n    var {\n      x,\n      y\n    } = this.mapXY(event.clientX, event.clientY);\n    this.events.push({\n      type: 'onmousemove',\n      x,\n      y,\n      run(eventTarget) {\n        if (eventTarget.onMouseMove) {\n          eventTarget.onMouseMove();\n        }\n      }\n    });\n  }\n}\nvar defaultWindow = typeof window !== 'undefined' ? window : null;\nvar defaultFetch$1 = typeof fetch !== 'undefined' ? fetch.bind(undefined) // `fetch` depends on context: `someObject.fetch(...)` will throw error.\n: null;\nclass Screen {\n  constructor(ctx) {\n    var {\n      fetch = defaultFetch$1,\n      window = defaultWindow\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.ctx = ctx;\n    this.FRAMERATE = 30;\n    this.MAX_VIRTUAL_PIXELS = 30000;\n    this.CLIENT_WIDTH = 800;\n    this.CLIENT_HEIGHT = 600;\n    this.viewPort = new ViewPort();\n    this.mouse = new Mouse(this);\n    this.animations = [];\n    this.waits = [];\n    this.frameDuration = 0;\n    this.isReadyLock = false;\n    this.isFirstRender = true;\n    this.intervalId = null;\n    this.window = window;\n    this.fetch = fetch;\n  }\n  wait(checker) {\n    this.waits.push(checker);\n  }\n  ready() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    if (!this.readyPromise) {\n      return Promise.resolve();\n    }\n    return this.readyPromise;\n  }\n  isReady() {\n    if (this.isReadyLock) {\n      return true;\n    }\n    var isReadyLock = this.waits.every(_ => _());\n    if (isReadyLock) {\n      this.waits = [];\n      if (this.resolveReady) {\n        this.resolveReady();\n      }\n    }\n    this.isReadyLock = isReadyLock;\n    return isReadyLock;\n  }\n  setDefaults(ctx) {\n    // initial values and defaults\n    ctx.strokeStyle = 'rgba(0,0,0,0)';\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'miter';\n    ctx.miterLimit = 4;\n  }\n  setViewBox(_ref) {\n    var {\n      document,\n      ctx,\n      aspectRatio,\n      width,\n      desiredWidth,\n      height,\n      desiredHeight,\n      minX = 0,\n      minY = 0,\n      refX,\n      refY,\n      clip = false,\n      clipX = 0,\n      clipY = 0\n    } = _ref;\n    // aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n    var cleanAspectRatio = compressSpaces(aspectRatio).replace(/^defer\\s/, ''); // ignore defer\n\n    var [aspectRatioAlign, aspectRatioMeetOrSlice] = cleanAspectRatio.split(' ');\n    var align = aspectRatioAlign || 'xMidYMid';\n    var meetOrSlice = aspectRatioMeetOrSlice || 'meet'; // calculate scale\n\n    var scaleX = width / desiredWidth;\n    var scaleY = height / desiredHeight;\n    var scaleMin = Math.min(scaleX, scaleY);\n    var scaleMax = Math.max(scaleX, scaleY);\n    var finalDesiredWidth = desiredWidth;\n    var finalDesiredHeight = desiredHeight;\n    if (meetOrSlice === 'meet') {\n      finalDesiredWidth *= scaleMin;\n      finalDesiredHeight *= scaleMin;\n    }\n    if (meetOrSlice === 'slice') {\n      finalDesiredWidth *= scaleMax;\n      finalDesiredHeight *= scaleMax;\n    }\n    var refXProp = new Property(document, 'refX', refX);\n    var refYProp = new Property(document, 'refY', refY);\n    var hasRefs = refXProp.hasValue() && refYProp.hasValue();\n    if (hasRefs) {\n      ctx.translate(-scaleMin * refXProp.getPixels('x'), -scaleMin * refYProp.getPixels('y'));\n    }\n    if (clip) {\n      var scaledClipX = scaleMin * clipX;\n      var scaledClipY = scaleMin * clipY;\n      ctx.beginPath();\n      ctx.moveTo(scaledClipX, scaledClipY);\n      ctx.lineTo(width, scaledClipY);\n      ctx.lineTo(width, height);\n      ctx.lineTo(scaledClipX, height);\n      ctx.closePath();\n      ctx.clip();\n    }\n    if (!hasRefs) {\n      var isMeetMinY = meetOrSlice === 'meet' && scaleMin === scaleY;\n      var isSliceMaxY = meetOrSlice === 'slice' && scaleMax === scaleY;\n      var isMeetMinX = meetOrSlice === 'meet' && scaleMin === scaleX;\n      var isSliceMaxX = meetOrSlice === 'slice' && scaleMax === scaleX;\n      if (align.startsWith('xMid') && (isMeetMinY || isSliceMaxY)) {\n        ctx.translate(width / 2.0 - finalDesiredWidth / 2.0, 0);\n      }\n      if (align.endsWith('YMid') && (isMeetMinX || isSliceMaxX)) {\n        ctx.translate(0, height / 2.0 - finalDesiredHeight / 2.0);\n      }\n      if (align.startsWith('xMax') && (isMeetMinY || isSliceMaxY)) {\n        ctx.translate(width - finalDesiredWidth, 0);\n      }\n      if (align.endsWith('YMax') && (isMeetMinX || isSliceMaxX)) {\n        ctx.translate(0, height - finalDesiredHeight);\n      }\n    } // scale\n\n    switch (true) {\n      case align === 'none':\n        ctx.scale(scaleX, scaleY);\n        break;\n      case meetOrSlice === 'meet':\n        ctx.scale(scaleMin, scaleMin);\n        break;\n      case meetOrSlice === 'slice':\n        ctx.scale(scaleMax, scaleMax);\n        break;\n    } // translate\n\n    ctx.translate(-minX, -minY);\n  }\n  start(element) {\n    var {\n      enableRedraw = false,\n      ignoreMouse = false,\n      ignoreAnimation = false,\n      ignoreDimensions = false,\n      ignoreClear = false,\n      forceRedraw,\n      scaleWidth,\n      scaleHeight,\n      offsetX,\n      offsetY\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var {\n      FRAMERATE,\n      mouse\n    } = this;\n    var frameDuration = 1000 / FRAMERATE;\n    this.frameDuration = frameDuration;\n    this.readyPromise = new Promise(resolve => {\n      this.resolveReady = resolve;\n    });\n    if (this.isReady()) {\n      this.render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY);\n    }\n    if (!enableRedraw) {\n      return;\n    }\n    var now = Date.now();\n    var then = now;\n    var delta = 0;\n    var tick = () => {\n      now = Date.now();\n      delta = now - then;\n      if (delta >= frameDuration) {\n        then = now - delta % frameDuration;\n        if (this.shouldUpdate(ignoreAnimation, forceRedraw)) {\n          this.render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY);\n          mouse.runEvents();\n        }\n      }\n      this.intervalId = requestAnimationFrame(tick);\n    };\n    if (!ignoreMouse) {\n      mouse.start();\n    }\n    this.intervalId = requestAnimationFrame(tick);\n  }\n  stop() {\n    if (this.intervalId) {\n      requestAnimationFrame.cancel(this.intervalId);\n      this.intervalId = null;\n    }\n    this.mouse.stop();\n  }\n  shouldUpdate(ignoreAnimation, forceRedraw) {\n    // need update from animations?\n    if (!ignoreAnimation) {\n      var {\n        frameDuration\n      } = this;\n      var shouldUpdate = this.animations.reduce((shouldUpdate, animation) => animation.update(frameDuration) || shouldUpdate, false);\n      if (shouldUpdate) {\n        return true;\n      }\n    } // need update from redraw?\n\n    if (typeof forceRedraw === 'function' && forceRedraw()) {\n      return true;\n    }\n    if (!this.isReadyLock && this.isReady()) {\n      return true;\n    } // need update from mouse events?\n\n    if (this.mouse.hasEvents()) {\n      return true;\n    }\n    return false;\n  }\n  render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY) {\n    var {\n      CLIENT_WIDTH,\n      CLIENT_HEIGHT,\n      viewPort,\n      ctx,\n      isFirstRender\n    } = this;\n    var canvas = ctx.canvas;\n    viewPort.clear();\n    if (canvas.width && canvas.height) {\n      viewPort.setCurrent(canvas.width, canvas.height);\n    } else {\n      viewPort.setCurrent(CLIENT_WIDTH, CLIENT_HEIGHT);\n    }\n    var widthStyle = element.getStyle('width');\n    var heightStyle = element.getStyle('height');\n    if (!ignoreDimensions && (isFirstRender || typeof scaleWidth !== 'number' && typeof scaleHeight !== 'number')) {\n      // set canvas size\n      if (widthStyle.hasValue()) {\n        canvas.width = widthStyle.getPixels('x');\n        if (canvas.style) {\n          canvas.style.width = \"\".concat(canvas.width, \"px\");\n        }\n      }\n      if (heightStyle.hasValue()) {\n        canvas.height = heightStyle.getPixels('y');\n        if (canvas.style) {\n          canvas.style.height = \"\".concat(canvas.height, \"px\");\n        }\n      }\n    }\n    var cWidth = canvas.clientWidth || canvas.width;\n    var cHeight = canvas.clientHeight || canvas.height;\n    if (ignoreDimensions && widthStyle.hasValue() && heightStyle.hasValue()) {\n      cWidth = widthStyle.getPixels('x');\n      cHeight = heightStyle.getPixels('y');\n    }\n    viewPort.setCurrent(cWidth, cHeight);\n    if (typeof offsetX === 'number') {\n      element.getAttribute('x', true).setValue(offsetX);\n    }\n    if (typeof offsetY === 'number') {\n      element.getAttribute('y', true).setValue(offsetY);\n    }\n    if (typeof scaleWidth === 'number' || typeof scaleHeight === 'number') {\n      var viewBox = toNumbers(element.getAttribute('viewBox').getString());\n      var xRatio = 0;\n      var yRatio = 0;\n      if (typeof scaleWidth === 'number') {\n        var _widthStyle = element.getStyle('width');\n        if (_widthStyle.hasValue()) {\n          xRatio = _widthStyle.getPixels('x') / scaleWidth;\n        } else if (!isNaN(viewBox[2])) {\n          xRatio = viewBox[2] / scaleWidth;\n        }\n      }\n      if (typeof scaleHeight === 'number') {\n        var _heightStyle = element.getStyle('height');\n        if (_heightStyle.hasValue()) {\n          yRatio = _heightStyle.getPixels('y') / scaleHeight;\n        } else if (!isNaN(viewBox[3])) {\n          yRatio = viewBox[3] / scaleHeight;\n        }\n      }\n      if (!xRatio) {\n        xRatio = yRatio;\n      }\n      if (!yRatio) {\n        yRatio = xRatio;\n      }\n      element.getAttribute('width', true).setValue(scaleWidth);\n      element.getAttribute('height', true).setValue(scaleHeight);\n      var transformStyle = element.getStyle('transform', true, true);\n      transformStyle.setValue(\"\".concat(transformStyle.getString(), \" scale(\").concat(1.0 / xRatio, \", \").concat(1.0 / yRatio, \")\"));\n    } // clear and render\n\n    if (!ignoreClear) {\n      ctx.clearRect(0, 0, cWidth, cHeight);\n    }\n    element.render(ctx);\n    if (isFirstRender) {\n      this.isFirstRender = false;\n    }\n  }\n}\nScreen.defaultWindow = defaultWindow;\nScreen.defaultFetch = defaultFetch$1;\nvar {\n  defaultFetch\n} = Screen;\nvar DefaultDOMParser = typeof DOMParser !== 'undefined' ? DOMParser : null;\nclass Parser {\n  constructor() {\n    var {\n      fetch = defaultFetch,\n      DOMParser = DefaultDOMParser\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.fetch = fetch;\n    this.DOMParser = DOMParser;\n  }\n  parse(resource) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (resource.startsWith('<')) {\n        return _this.parseFromString(resource);\n      }\n      return _this.load(resource);\n    })();\n  }\n  parseFromString(xml) {\n    var parser = new this.DOMParser();\n    try {\n      return this.checkDocument(parser.parseFromString(xml, 'image/svg+xml'));\n    } catch (err) {\n      return this.checkDocument(parser.parseFromString(xml, 'text/xml'));\n    }\n  }\n  checkDocument(document) {\n    var parserError = document.getElementsByTagName('parsererror')[0];\n    if (parserError) {\n      throw new Error(parserError.textContent);\n    }\n    return document;\n  }\n  load(url) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var response = yield _this2.fetch(url);\n      var xml = yield response.text();\n      return _this2.parseFromString(xml);\n    })();\n  }\n}\nclass Translate {\n  constructor(_, point) {\n    this.type = 'translate';\n    this.point = null;\n    this.point = Point.parse(point);\n  }\n  apply(ctx) {\n    var {\n      x,\n      y\n    } = this.point;\n    ctx.translate(x || 0.0, y || 0.0);\n  }\n  unapply(ctx) {\n    var {\n      x,\n      y\n    } = this.point;\n    ctx.translate(-1.0 * x || 0.0, -1.0 * y || 0.0);\n  }\n  applyToPoint(point) {\n    var {\n      x,\n      y\n    } = this.point;\n    point.applyTransform([1, 0, 0, 1, x || 0.0, y || 0.0]);\n  }\n}\nclass Rotate {\n  constructor(document, rotate, transformOrigin) {\n    this.type = 'rotate';\n    this.angle = null;\n    this.originX = null;\n    this.originY = null;\n    this.cx = 0;\n    this.cy = 0;\n    var numbers = toNumbers(rotate);\n    this.angle = new Property(document, 'angle', numbers[0]);\n    this.originX = transformOrigin[0];\n    this.originY = transformOrigin[1];\n    this.cx = numbers[1] || 0;\n    this.cy = numbers[2] || 0;\n  }\n  apply(ctx) {\n    var {\n      cx,\n      cy,\n      originX,\n      originY,\n      angle\n    } = this;\n    var tx = cx + originX.getPixels('x');\n    var ty = cy + originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.rotate(angle.getRadians());\n    ctx.translate(-tx, -ty);\n  }\n  unapply(ctx) {\n    var {\n      cx,\n      cy,\n      originX,\n      originY,\n      angle\n    } = this;\n    var tx = cx + originX.getPixels('x');\n    var ty = cy + originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.rotate(-1.0 * angle.getRadians());\n    ctx.translate(-tx, -ty);\n  }\n  applyToPoint(point) {\n    var {\n      cx,\n      cy,\n      angle\n    } = this;\n    var rad = angle.getRadians();\n    point.applyTransform([1, 0, 0, 1, cx || 0.0, cy || 0.0 // this.p.y\n    ]);\n    point.applyTransform([Math.cos(rad), Math.sin(rad), -Math.sin(rad), Math.cos(rad), 0, 0]);\n    point.applyTransform([1, 0, 0, 1, -cx || 0.0, -cy || 0.0 // -this.p.y\n    ]);\n  }\n}\nclass Scale {\n  constructor(_, scale, transformOrigin) {\n    this.type = 'scale';\n    this.scale = null;\n    this.originX = null;\n    this.originY = null;\n    var scaleSize = Point.parseScale(scale); // Workaround for node-canvas\n\n    if (scaleSize.x === 0 || scaleSize.y === 0) {\n      scaleSize.x = PSEUDO_ZERO;\n      scaleSize.y = PSEUDO_ZERO;\n    }\n    this.scale = scaleSize;\n    this.originX = transformOrigin[0];\n    this.originY = transformOrigin[1];\n  }\n  apply(ctx) {\n    var {\n      scale: {\n        x,\n        y\n      },\n      originX,\n      originY\n    } = this;\n    var tx = originX.getPixels('x');\n    var ty = originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.scale(x, y || x);\n    ctx.translate(-tx, -ty);\n  }\n  unapply(ctx) {\n    var {\n      scale: {\n        x,\n        y\n      },\n      originX,\n      originY\n    } = this;\n    var tx = originX.getPixels('x');\n    var ty = originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.scale(1.0 / x, 1.0 / y || x);\n    ctx.translate(-tx, -ty);\n  }\n  applyToPoint(point) {\n    var {\n      x,\n      y\n    } = this.scale;\n    point.applyTransform([x || 0.0, 0, 0, y || 0.0, 0, 0]);\n  }\n}\nclass Matrix {\n  constructor(_, matrix, transformOrigin) {\n    this.type = 'matrix';\n    this.matrix = [];\n    this.originX = null;\n    this.originY = null;\n    this.matrix = toNumbers(matrix);\n    this.originX = transformOrigin[0];\n    this.originY = transformOrigin[1];\n  }\n  apply(ctx) {\n    var {\n      originX,\n      originY,\n      matrix\n    } = this;\n    var tx = originX.getPixels('x');\n    var ty = originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n    ctx.translate(-tx, -ty);\n  }\n  unapply(ctx) {\n    var {\n      originX,\n      originY,\n      matrix\n    } = this;\n    var a = matrix[0];\n    var b = matrix[2];\n    var c = matrix[4];\n    var d = matrix[1];\n    var e = matrix[3];\n    var f = matrix[5];\n    var g = 0.0;\n    var h = 0.0;\n    var i = 1.0;\n    var det = 1 / (a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g));\n    var tx = originX.getPixels('x');\n    var ty = originY.getPixels('y');\n    ctx.translate(tx, ty);\n    ctx.transform(det * (e * i - f * h), det * (f * g - d * i), det * (c * h - b * i), det * (a * i - c * g), det * (b * f - c * e), det * (c * d - a * f));\n    ctx.translate(-tx, -ty);\n  }\n  applyToPoint(point) {\n    point.applyTransform(this.matrix);\n  }\n}\nclass Skew extends Matrix {\n  constructor(document, skew, transformOrigin) {\n    super(document, skew, transformOrigin);\n    this.type = 'skew';\n    this.angle = null;\n    this.angle = new Property(document, 'angle', skew);\n  }\n}\nclass SkewX extends Skew {\n  constructor(document, skew, transformOrigin) {\n    super(document, skew, transformOrigin);\n    this.type = 'skewX';\n    this.matrix = [1, 0, Math.tan(this.angle.getRadians()), 1, 0, 0];\n  }\n}\nclass SkewY extends Skew {\n  constructor(document, skew, transformOrigin) {\n    super(document, skew, transformOrigin);\n    this.type = 'skewY';\n    this.matrix = [1, Math.tan(this.angle.getRadians()), 0, 1, 0, 0];\n  }\n}\nfunction parseTransforms(transform) {\n  return compressSpaces(transform).trim().replace(/\\)([a-zA-Z])/g, ') $1').replace(/\\)(\\s?,\\s?)/g, ') ').split(/\\s(?=[a-z])/);\n}\nfunction parseTransform(transform) {\n  var [type, value] = transform.split('(');\n  return [type.trim(), value.trim().replace(')', '')];\n}\nclass Transform {\n  constructor(document, transform, transformOrigin) {\n    this.document = document;\n    this.transforms = [];\n    var data = parseTransforms(transform);\n    data.forEach(transform => {\n      if (transform === 'none') {\n        return;\n      }\n      var [type, value] = parseTransform(transform);\n      var TransformType = Transform.transformTypes[type];\n      if (typeof TransformType !== 'undefined') {\n        this.transforms.push(new TransformType(this.document, value, transformOrigin));\n      }\n    });\n  }\n  static fromElement(document, element) {\n    var transformStyle = element.getStyle('transform', false, true);\n    var [transformOriginXProperty, transformOriginYProperty = transformOriginXProperty] = element.getStyle('transform-origin', false, true).split();\n    var transformOrigin = [transformOriginXProperty, transformOriginYProperty];\n    if (transformStyle.hasValue()) {\n      return new Transform(document, transformStyle.getString(), transformOrigin);\n    }\n    return null;\n  }\n  apply(ctx) {\n    var {\n      transforms\n    } = this;\n    var len = transforms.length;\n    for (var i = 0; i < len; i++) {\n      transforms[i].apply(ctx);\n    }\n  }\n  unapply(ctx) {\n    var {\n      transforms\n    } = this;\n    var len = transforms.length;\n    for (var i = len - 1; i >= 0; i--) {\n      transforms[i].unapply(ctx);\n    }\n  } // TODO: applyToPoint unused ... remove?\n\n  applyToPoint(point) {\n    var {\n      transforms\n    } = this;\n    var len = transforms.length;\n    for (var i = 0; i < len; i++) {\n      transforms[i].applyToPoint(point);\n    }\n  }\n}\nTransform.transformTypes = {\n  translate: Translate,\n  rotate: Rotate,\n  scale: Scale,\n  matrix: Matrix,\n  skewX: SkewX,\n  skewY: SkewY\n};\nclass Element {\n  constructor(document, node) {\n    var captureTextNodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this.document = document;\n    this.node = node;\n    this.captureTextNodes = captureTextNodes;\n    this.attributes = {};\n    this.styles = {};\n    this.stylesSpecificity = {};\n    this.animationFrozen = false;\n    this.animationFrozenValue = '';\n    this.parent = null;\n    this.children = [];\n    if (!node || node.nodeType !== 1) {\n      // ELEMENT_NODE\n      return;\n    } // add attributes\n\n    Array.from(node.attributes).forEach(attribute => {\n      var nodeName = normalizeAttributeName(attribute.nodeName);\n      this.attributes[nodeName] = new Property(document, nodeName, attribute.value);\n    });\n    this.addStylesFromStyleDefinition(); // add inline styles\n\n    if (this.getAttribute('style').hasValue()) {\n      var styles = this.getAttribute('style').getString().split(';').map(_ => _.trim());\n      styles.forEach(style => {\n        if (!style) {\n          return;\n        }\n        var [name, value] = style.split(':').map(_ => _.trim());\n        this.styles[name] = new Property(document, name, value);\n      });\n    }\n    var {\n      definitions\n    } = document;\n    var id = this.getAttribute('id'); // add id\n\n    if (id.hasValue()) {\n      if (!definitions[id.getString()]) {\n        definitions[id.getString()] = this;\n      }\n    }\n    Array.from(node.childNodes).forEach(childNode => {\n      if (childNode.nodeType === 1) {\n        this.addChild(childNode); // ELEMENT_NODE\n      } else if (captureTextNodes && (childNode.nodeType === 3 || childNode.nodeType === 4)) {\n        var textNode = document.createTextNode(childNode);\n        if (textNode.getText().length > 0) {\n          this.addChild(textNode); // TEXT_NODE\n        }\n      }\n    });\n  }\n  getAttribute(name) {\n    var createIfNotExists = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var attr = this.attributes[name];\n    if (!attr && createIfNotExists) {\n      var _attr = new Property(this.document, name, '');\n      this.attributes[name] = _attr;\n      return _attr;\n    }\n    return attr || Property.empty(this.document);\n  }\n  getHrefAttribute() {\n    for (var key in this.attributes) {\n      if (key === 'href' || key.endsWith(':href')) {\n        return this.attributes[key];\n      }\n    }\n    return Property.empty(this.document);\n  }\n  getStyle(name) {\n    var createIfNotExists = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var skipAncestors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var style = this.styles[name];\n    if (style) {\n      return style;\n    }\n    var attr = this.getAttribute(name);\n    if (attr !== null && attr !== void 0 && attr.hasValue()) {\n      this.styles[name] = attr; // move up to me to cache\n\n      return attr;\n    }\n    if (!skipAncestors) {\n      var {\n        parent\n      } = this;\n      if (parent) {\n        var parentStyle = parent.getStyle(name);\n        if (parentStyle !== null && parentStyle !== void 0 && parentStyle.hasValue()) {\n          return parentStyle;\n        }\n      }\n    }\n    if (createIfNotExists) {\n      var _style = new Property(this.document, name, '');\n      this.styles[name] = _style;\n      return _style;\n    }\n    return style || Property.empty(this.document);\n  }\n  render(ctx) {\n    // don't render display=none\n    // don't render visibility=hidden\n    if (this.getStyle('display').getString() === 'none' || this.getStyle('visibility').getString() === 'hidden') {\n      return;\n    }\n    ctx.save();\n    if (this.getStyle('mask').hasValue()) {\n      // mask\n      var mask = this.getStyle('mask').getDefinition();\n      if (mask) {\n        this.applyEffects(ctx);\n        mask.apply(ctx, this);\n      }\n    } else if (this.getStyle('filter').getValue('none') !== 'none') {\n      // filter\n      var filter = this.getStyle('filter').getDefinition();\n      if (filter) {\n        this.applyEffects(ctx);\n        filter.apply(ctx, this);\n      }\n    } else {\n      this.setContext(ctx);\n      this.renderChildren(ctx);\n      this.clearContext(ctx);\n    }\n    ctx.restore();\n  }\n  setContext(_) {// NO RENDER\n  }\n  applyEffects(ctx) {\n    // transform\n    var transform = Transform.fromElement(this.document, this);\n    if (transform) {\n      transform.apply(ctx);\n    } // clip\n\n    var clipPathStyleProp = this.getStyle('clip-path', false, true);\n    if (clipPathStyleProp.hasValue()) {\n      var clip = clipPathStyleProp.getDefinition();\n      if (clip) {\n        clip.apply(ctx);\n      }\n    }\n  }\n  clearContext(_) {// NO RENDER\n  }\n  renderChildren(ctx) {\n    this.children.forEach(child => {\n      child.render(ctx);\n    });\n  }\n  addChild(childNode) {\n    var child = childNode instanceof Element ? childNode : this.document.createElement(childNode);\n    child.parent = this;\n    if (!Element.ignoreChildTypes.includes(child.type)) {\n      this.children.push(child);\n    }\n  }\n  matchesSelector(selector) {\n    var _node$getAttribute;\n    var {\n      node\n    } = this;\n    if (typeof node.matches === 'function') {\n      return node.matches(selector);\n    }\n    var styleClasses = (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'class');\n    if (!styleClasses || styleClasses === '') {\n      return false;\n    }\n    return styleClasses.split(' ').some(styleClass => \".\".concat(styleClass) === selector);\n  }\n  addStylesFromStyleDefinition() {\n    var {\n      styles,\n      stylesSpecificity\n    } = this.document;\n    for (var selector in styles) {\n      if (!selector.startsWith('@') && this.matchesSelector(selector)) {\n        var style = styles[selector];\n        var specificity = stylesSpecificity[selector];\n        if (style) {\n          for (var name in style) {\n            var existingSpecificity = this.stylesSpecificity[name];\n            if (typeof existingSpecificity === 'undefined') {\n              existingSpecificity = '000';\n            }\n            if (specificity >= existingSpecificity) {\n              this.styles[name] = style[name];\n              this.stylesSpecificity[name] = specificity;\n            }\n          }\n        }\n      }\n    }\n  }\n  removeStyles(element, ignoreStyles) {\n    var toRestore = ignoreStyles.reduce((toRestore, name) => {\n      var styleProp = element.getStyle(name);\n      if (!styleProp.hasValue()) {\n        return toRestore;\n      }\n      var value = styleProp.getString();\n      styleProp.setValue('');\n      return [...toRestore, [name, value]];\n    }, []);\n    return toRestore;\n  }\n  restoreStyles(element, styles) {\n    styles.forEach(_ref => {\n      var [name, value] = _ref;\n      element.getStyle(name, true).setValue(value);\n    });\n  }\n  isFirstChild() {\n    var _this$parent;\n    return ((_this$parent = this.parent) === null || _this$parent === void 0 ? void 0 : _this$parent.children.indexOf(this)) === 0;\n  }\n}\nElement.ignoreChildTypes = ['title'];\nclass UnknownElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n  }\n}\nfunction wrapFontFamily(fontFamily) {\n  var trimmed = fontFamily.trim();\n  return /^('|\")/.test(trimmed) ? trimmed : \"\\\"\".concat(trimmed, \"\\\"\");\n}\nfunction prepareFontFamily(fontFamily) {\n  return typeof process === 'undefined' ? fontFamily : fontFamily.trim().split(',').map(wrapFontFamily).join(',');\n}\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-style\r\n * @param fontStyle\r\n * @returns CSS font style.\r\n */\n\nfunction prepareFontStyle(fontStyle) {\n  if (!fontStyle) {\n    return '';\n  }\n  var targetFontStyle = fontStyle.trim().toLowerCase();\n  switch (targetFontStyle) {\n    case 'normal':\n    case 'italic':\n    case 'oblique':\n    case 'inherit':\n    case 'initial':\n    case 'unset':\n      return targetFontStyle;\n    default:\n      if (/^oblique\\s+(-|)\\d+deg$/.test(targetFontStyle)) {\n        return targetFontStyle;\n      }\n      return '';\n  }\n}\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\r\n * @param fontWeight\r\n * @returns CSS font weight.\r\n */\n\nfunction prepareFontWeight(fontWeight) {\n  if (!fontWeight) {\n    return '';\n  }\n  var targetFontWeight = fontWeight.trim().toLowerCase();\n  switch (targetFontWeight) {\n    case 'normal':\n    case 'bold':\n    case 'lighter':\n    case 'bolder':\n    case 'inherit':\n    case 'initial':\n    case 'unset':\n      return targetFontWeight;\n    default:\n      if (/^[\\d.]+$/.test(targetFontWeight)) {\n        return targetFontWeight;\n      }\n      return '';\n  }\n}\nclass Font {\n  constructor(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit) {\n    var inheritFont = inherit ? typeof inherit === 'string' ? Font.parse(inherit) : inherit : {};\n    this.fontFamily = fontFamily || inheritFont.fontFamily;\n    this.fontSize = fontSize || inheritFont.fontSize;\n    this.fontStyle = fontStyle || inheritFont.fontStyle;\n    this.fontWeight = fontWeight || inheritFont.fontWeight;\n    this.fontVariant = fontVariant || inheritFont.fontVariant;\n  }\n  static parse() {\n    var font = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var inherit = arguments.length > 1 ? arguments[1] : undefined;\n    var fontStyle = '';\n    var fontVariant = '';\n    var fontWeight = '';\n    var fontSize = '';\n    var fontFamily = '';\n    var parts = compressSpaces(font).trim().split(' ');\n    var set = {\n      fontSize: false,\n      fontStyle: false,\n      fontWeight: false,\n      fontVariant: false\n    };\n    parts.forEach(part => {\n      switch (true) {\n        case !set.fontStyle && Font.styles.includes(part):\n          if (part !== 'inherit') {\n            fontStyle = part;\n          }\n          set.fontStyle = true;\n          break;\n        case !set.fontVariant && Font.variants.includes(part):\n          if (part !== 'inherit') {\n            fontVariant = part;\n          }\n          set.fontStyle = true;\n          set.fontVariant = true;\n          break;\n        case !set.fontWeight && Font.weights.includes(part):\n          if (part !== 'inherit') {\n            fontWeight = part;\n          }\n          set.fontStyle = true;\n          set.fontVariant = true;\n          set.fontWeight = true;\n          break;\n        case !set.fontSize:\n          if (part !== 'inherit') {\n            [fontSize] = part.split('/');\n          }\n          set.fontStyle = true;\n          set.fontVariant = true;\n          set.fontWeight = true;\n          set.fontSize = true;\n          break;\n        default:\n          if (part !== 'inherit') {\n            fontFamily += part;\n          }\n      }\n    });\n    return new Font(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit);\n  }\n  toString() {\n    return [prepareFontStyle(this.fontStyle), this.fontVariant, prepareFontWeight(this.fontWeight), this.fontSize,\n    // Wrap fontFamily only on nodejs and only for canvas.ctx\n    prepareFontFamily(this.fontFamily)].join(' ').trim();\n  }\n}\nFont.styles = 'normal|italic|oblique|inherit';\nFont.variants = 'normal|small-caps|inherit';\nFont.weights = 'normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit';\nclass BoundingBox {\n  constructor() {\n    var x1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.NaN;\n    var y1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.NaN;\n    var x2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.NaN;\n    var y2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Number.NaN;\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n  get x() {\n    return this.x1;\n  }\n  get y() {\n    return this.y1;\n  }\n  get width() {\n    return this.x2 - this.x1;\n  }\n  get height() {\n    return this.y2 - this.y1;\n  }\n  addPoint(x, y) {\n    if (typeof x !== 'undefined') {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) {\n        this.x1 = x;\n      }\n      if (x > this.x2) {\n        this.x2 = x;\n      }\n    }\n    if (typeof y !== 'undefined') {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) {\n        this.y1 = y;\n      }\n      if (y > this.y2) {\n        this.y2 = y;\n      }\n    }\n  }\n  addX(x) {\n    this.addPoint(x, null);\n  }\n  addY(y) {\n    this.addPoint(null, y);\n  }\n  addBoundingBox(boundingBox) {\n    if (!boundingBox) {\n      return;\n    }\n    var {\n      x1,\n      y1,\n      x2,\n      y2\n    } = boundingBox;\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n  sumCubic(t, p0, p1, p2, p3) {\n    return Math.pow(1 - t, 3) * p0 + 3 * Math.pow(1 - t, 2) * t * p1 + 3 * (1 - t) * Math.pow(t, 2) * p2 + Math.pow(t, 3) * p3;\n  }\n  bezierCurveAdd(forX, p0, p1, p2, p3) {\n    var b = 6 * p0 - 12 * p1 + 6 * p2;\n    var a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;\n    var c = 3 * p1 - 3 * p0;\n    if (a === 0) {\n      if (b === 0) {\n        return;\n      }\n      var t = -c / b;\n      if (0 < t && t < 1) {\n        if (forX) {\n          this.addX(this.sumCubic(t, p0, p1, p2, p3));\n        } else {\n          this.addY(this.sumCubic(t, p0, p1, p2, p3));\n        }\n      }\n      return;\n    }\n    var b2ac = Math.pow(b, 2) - 4 * c * a;\n    if (b2ac < 0) {\n      return;\n    }\n    var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      if (forX) {\n        this.addX(this.sumCubic(t1, p0, p1, p2, p3));\n      } else {\n        this.addY(this.sumCubic(t1, p0, p1, p2, p3));\n      }\n    }\n    var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      if (forX) {\n        this.addX(this.sumCubic(t2, p0, p1, p2, p3));\n      } else {\n        this.addY(this.sumCubic(t2, p0, p1, p2, p3));\n      }\n    }\n  } // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    this.addPoint(p0x, p0y);\n    this.addPoint(p3x, p3y);\n    this.bezierCurveAdd(true, p0x, p1x, p2x, p3x);\n    this.bezierCurveAdd(false, p0y, p1y, p2y, p3y);\n  }\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    var cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\n    var cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\n    var cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\n    var cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\n    this.addBezierCurve(p0x, p0y, cp1x, cp2x, cp1y, cp2y, p2x, p2y);\n  }\n  isPointInBox(x, y) {\n    var {\n      x1,\n      y1,\n      x2,\n      y2\n    } = this;\n    return x1 <= x && x <= x2 && y1 <= y && y <= y2;\n  }\n}\nclass PathParser extends SVGPathData {\n  constructor(path) {\n    super(path // Fix spaces after signs.\n    .replace(/([+\\-.])\\s+/gm, '$1') // Remove invalid part.\n    .replace(/[^MmZzLlHhVvCcSsQqTtAae\\d\\s.,+-].*/g, ''));\n    this.control = null;\n    this.start = null;\n    this.current = null;\n    this.command = null;\n    this.commands = this.commands;\n    this.i = -1;\n    this.previousCommand = null;\n    this.points = [];\n    this.angles = [];\n  }\n  reset() {\n    this.i = -1;\n    this.command = null;\n    this.previousCommand = null;\n    this.start = new Point(0, 0);\n    this.control = new Point(0, 0);\n    this.current = new Point(0, 0);\n    this.points = [];\n    this.angles = [];\n  }\n  isEnd() {\n    var {\n      i,\n      commands\n    } = this;\n    return i >= commands.length - 1;\n  }\n  next() {\n    var command = this.commands[++this.i];\n    this.previousCommand = this.command;\n    this.command = command;\n    return command;\n  }\n  getPoint() {\n    var xProp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'x';\n    var yProp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'y';\n    var point = new Point(this.command[xProp], this.command[yProp]);\n    return this.makeAbsolute(point);\n  }\n  getAsControlPoint(xProp, yProp) {\n    var point = this.getPoint(xProp, yProp);\n    this.control = point;\n    return point;\n  }\n  getAsCurrentPoint(xProp, yProp) {\n    var point = this.getPoint(xProp, yProp);\n    this.current = point;\n    return point;\n  }\n  getReflectedControlPoint() {\n    var previousCommand = this.previousCommand.type;\n    if (previousCommand !== SVGPathData.CURVE_TO && previousCommand !== SVGPathData.SMOOTH_CURVE_TO && previousCommand !== SVGPathData.QUAD_TO && previousCommand !== SVGPathData.SMOOTH_QUAD_TO) {\n      return this.current;\n    } // reflect point\n\n    var {\n      current: {\n        x: cx,\n        y: cy\n      },\n      control: {\n        x: ox,\n        y: oy\n      }\n    } = this;\n    var point = new Point(2 * cx - ox, 2 * cy - oy);\n    return point;\n  }\n  makeAbsolute(point) {\n    if (this.command.relative) {\n      var {\n        x,\n        y\n      } = this.current;\n      point.x += x;\n      point.y += y;\n    }\n    return point;\n  }\n  addMarker(point, from, priorTo) {\n    var {\n      points,\n      angles\n    } = this; // if the last angle isn't filled in because we didn't have this point yet ...\n\n    if (priorTo && angles.length > 0 && !angles[angles.length - 1]) {\n      angles[angles.length - 1] = points[points.length - 1].angleTo(priorTo);\n    }\n    this.addMarkerAngle(point, from ? from.angleTo(point) : null);\n  }\n  addMarkerAngle(point, angle) {\n    this.points.push(point);\n    this.angles.push(angle);\n  }\n  getMarkerPoints() {\n    return this.points;\n  }\n  getMarkerAngles() {\n    var {\n      angles\n    } = this;\n    var len = angles.length;\n    for (var i = 0; i < len; i++) {\n      if (!angles[i]) {\n        for (var j = i + 1; j < len; j++) {\n          if (angles[j]) {\n            angles[i] = angles[j];\n            break;\n          }\n        }\n      }\n    }\n    return angles;\n  }\n}\nclass RenderedElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.modifiedEmSizeStack = false;\n  }\n  calculateOpacity() {\n    var opacity = 1.0; // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n\n    var element = this;\n    while (element) {\n      var opacityStyle = element.getStyle('opacity', false, true); // no ancestors on style call\n\n      if (opacityStyle.hasValue(true)) {\n        opacity *= opacityStyle.getNumber();\n      }\n      element = element.parent;\n    }\n    return opacity;\n  }\n  setContext(ctx) {\n    var fromMeasure = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!fromMeasure) {\n      // causes stack overflow when measuring text with gradients\n      // fill\n      var fillStyleProp = this.getStyle('fill');\n      var fillOpacityStyleProp = this.getStyle('fill-opacity');\n      var strokeStyleProp = this.getStyle('stroke');\n      var strokeOpacityProp = this.getStyle('stroke-opacity');\n      if (fillStyleProp.isUrlDefinition()) {\n        var fillStyle = fillStyleProp.getFillStyleDefinition(this, fillOpacityStyleProp);\n        if (fillStyle) {\n          ctx.fillStyle = fillStyle;\n        }\n      } else if (fillStyleProp.hasValue()) {\n        if (fillStyleProp.getString() === 'currentColor') {\n          fillStyleProp.setValue(this.getStyle('color').getColor());\n        }\n        var _fillStyle = fillStyleProp.getColor();\n        if (_fillStyle !== 'inherit') {\n          ctx.fillStyle = _fillStyle === 'none' ? 'rgba(0,0,0,0)' : _fillStyle;\n        }\n      }\n      if (fillOpacityStyleProp.hasValue()) {\n        var _fillStyle2 = new Property(this.document, 'fill', ctx.fillStyle).addOpacity(fillOpacityStyleProp).getColor();\n        ctx.fillStyle = _fillStyle2;\n      } // stroke\n\n      if (strokeStyleProp.isUrlDefinition()) {\n        var strokeStyle = strokeStyleProp.getFillStyleDefinition(this, strokeOpacityProp);\n        if (strokeStyle) {\n          ctx.strokeStyle = strokeStyle;\n        }\n      } else if (strokeStyleProp.hasValue()) {\n        if (strokeStyleProp.getString() === 'currentColor') {\n          strokeStyleProp.setValue(this.getStyle('color').getColor());\n        }\n        var _strokeStyle = strokeStyleProp.getString();\n        if (_strokeStyle !== 'inherit') {\n          ctx.strokeStyle = _strokeStyle === 'none' ? 'rgba(0,0,0,0)' : _strokeStyle;\n        }\n      }\n      if (strokeOpacityProp.hasValue()) {\n        var _strokeStyle2 = new Property(this.document, 'stroke', ctx.strokeStyle).addOpacity(strokeOpacityProp).getString();\n        ctx.strokeStyle = _strokeStyle2;\n      }\n      var strokeWidthStyleProp = this.getStyle('stroke-width');\n      if (strokeWidthStyleProp.hasValue()) {\n        var newLineWidth = strokeWidthStyleProp.getPixels();\n        ctx.lineWidth = !newLineWidth ? PSEUDO_ZERO // browsers don't respect 0 (or node-canvas? :-)\n        : newLineWidth;\n      }\n      var strokeLinecapStyleProp = this.getStyle('stroke-linecap');\n      var strokeLinejoinStyleProp = this.getStyle('stroke-linejoin');\n      var strokeMiterlimitProp = this.getStyle('stroke-miterlimit'); // NEED TEST\n      // const pointOrderStyleProp = this.getStyle('paint-order');\n\n      var strokeDasharrayStyleProp = this.getStyle('stroke-dasharray');\n      var strokeDashoffsetProp = this.getStyle('stroke-dashoffset');\n      if (strokeLinecapStyleProp.hasValue()) {\n        ctx.lineCap = strokeLinecapStyleProp.getString();\n      }\n      if (strokeLinejoinStyleProp.hasValue()) {\n        ctx.lineJoin = strokeLinejoinStyleProp.getString();\n      }\n      if (strokeMiterlimitProp.hasValue()) {\n        ctx.miterLimit = strokeMiterlimitProp.getNumber();\n      } // NEED TEST\n      // if (pointOrderStyleProp.hasValue()) {\n      // \t// ?\n      // \tctx.paintOrder = pointOrderStyleProp.getValue();\n      // }\n\n      if (strokeDasharrayStyleProp.hasValue() && strokeDasharrayStyleProp.getString() !== 'none') {\n        var gaps = toNumbers(strokeDasharrayStyleProp.getString());\n        if (typeof ctx.setLineDash !== 'undefined') {\n          ctx.setLineDash(gaps);\n        } else\n          // @ts-expect-error Handle browser prefix.\n          if (typeof ctx.webkitLineDash !== 'undefined') {\n            // @ts-expect-error Handle browser prefix.\n            ctx.webkitLineDash = gaps;\n          } else\n            // @ts-expect-error Handle browser prefix.\n            if (typeof ctx.mozDash !== 'undefined' && !(gaps.length === 1 && gaps[0] === 0)) {\n              // @ts-expect-error Handle browser prefix.\n              ctx.mozDash = gaps;\n            }\n        var offset = strokeDashoffsetProp.getPixels();\n        if (typeof ctx.lineDashOffset !== 'undefined') {\n          ctx.lineDashOffset = offset;\n        } else\n          // @ts-expect-error Handle browser prefix.\n          if (typeof ctx.webkitLineDashOffset !== 'undefined') {\n            // @ts-expect-error Handle browser prefix.\n            ctx.webkitLineDashOffset = offset;\n          } else\n            // @ts-expect-error Handle browser prefix.\n            if (typeof ctx.mozDashOffset !== 'undefined') {\n              // @ts-expect-error Handle browser prefix.\n              ctx.mozDashOffset = offset;\n            }\n      }\n    } // font\n\n    this.modifiedEmSizeStack = false;\n    if (typeof ctx.font !== 'undefined') {\n      var fontStyleProp = this.getStyle('font');\n      var fontStyleStyleProp = this.getStyle('font-style');\n      var fontVariantStyleProp = this.getStyle('font-variant');\n      var fontWeightStyleProp = this.getStyle('font-weight');\n      var fontSizeStyleProp = this.getStyle('font-size');\n      var fontFamilyStyleProp = this.getStyle('font-family');\n      var font = new Font(fontStyleStyleProp.getString(), fontVariantStyleProp.getString(), fontWeightStyleProp.getString(), fontSizeStyleProp.hasValue() ? \"\".concat(fontSizeStyleProp.getPixels(true), \"px\") : '', fontFamilyStyleProp.getString(), Font.parse(fontStyleProp.getString(), ctx.font));\n      fontStyleStyleProp.setValue(font.fontStyle);\n      fontVariantStyleProp.setValue(font.fontVariant);\n      fontWeightStyleProp.setValue(font.fontWeight);\n      fontSizeStyleProp.setValue(font.fontSize);\n      fontFamilyStyleProp.setValue(font.fontFamily);\n      ctx.font = font.toString();\n      if (fontSizeStyleProp.isPixels()) {\n        this.document.emSize = fontSizeStyleProp.getPixels();\n        this.modifiedEmSizeStack = true;\n      }\n    }\n    if (!fromMeasure) {\n      // effects\n      this.applyEffects(ctx); // opacity\n\n      ctx.globalAlpha = this.calculateOpacity();\n    }\n  }\n  clearContext(ctx) {\n    super.clearContext(ctx);\n    if (this.modifiedEmSizeStack) {\n      this.document.popEmSize();\n    }\n  }\n}\nclass PathElement extends RenderedElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'path';\n    this.pathParser = null;\n    this.pathParser = new PathParser(this.getAttribute('d').getString());\n  }\n  path(ctx) {\n    var {\n      pathParser\n    } = this;\n    var boundingBox = new BoundingBox();\n    pathParser.reset();\n    if (ctx) {\n      ctx.beginPath();\n    }\n    while (!pathParser.isEnd()) {\n      switch (pathParser.next().type) {\n        case PathParser.MOVE_TO:\n          this.pathM(ctx, boundingBox);\n          break;\n        case PathParser.LINE_TO:\n          this.pathL(ctx, boundingBox);\n          break;\n        case PathParser.HORIZ_LINE_TO:\n          this.pathH(ctx, boundingBox);\n          break;\n        case PathParser.VERT_LINE_TO:\n          this.pathV(ctx, boundingBox);\n          break;\n        case PathParser.CURVE_TO:\n          this.pathC(ctx, boundingBox);\n          break;\n        case PathParser.SMOOTH_CURVE_TO:\n          this.pathS(ctx, boundingBox);\n          break;\n        case PathParser.QUAD_TO:\n          this.pathQ(ctx, boundingBox);\n          break;\n        case PathParser.SMOOTH_QUAD_TO:\n          this.pathT(ctx, boundingBox);\n          break;\n        case PathParser.ARC:\n          this.pathA(ctx, boundingBox);\n          break;\n        case PathParser.CLOSE_PATH:\n          this.pathZ(ctx, boundingBox);\n          break;\n      }\n    }\n    return boundingBox;\n  }\n  getBoundingBox(_) {\n    return this.path();\n  }\n  getMarkers() {\n    var {\n      pathParser\n    } = this;\n    var points = pathParser.getMarkerPoints();\n    var angles = pathParser.getMarkerAngles();\n    var markers = points.map((point, i) => [point, angles[i]]);\n    return markers;\n  }\n  renderChildren(ctx) {\n    this.path(ctx);\n    this.document.screen.mouse.checkPath(this, ctx);\n    var fillRuleStyleProp = this.getStyle('fill-rule');\n    if (ctx.fillStyle !== '') {\n      if (fillRuleStyleProp.getString('inherit') !== 'inherit') {\n        ctx.fill(fillRuleStyleProp.getString());\n      } else {\n        ctx.fill();\n      }\n    }\n    if (ctx.strokeStyle !== '') {\n      if (this.getAttribute('vector-effect').getString() === 'non-scaling-stroke') {\n        ctx.save();\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        ctx.stroke();\n      }\n    }\n    var markers = this.getMarkers();\n    if (markers) {\n      var markersLastIndex = markers.length - 1;\n      var markerStartStyleProp = this.getStyle('marker-start');\n      var markerMidStyleProp = this.getStyle('marker-mid');\n      var markerEndStyleProp = this.getStyle('marker-end');\n      if (markerStartStyleProp.isUrlDefinition()) {\n        var marker = markerStartStyleProp.getDefinition();\n        var [point, angle] = markers[0];\n        marker.render(ctx, point, angle);\n      }\n      if (markerMidStyleProp.isUrlDefinition()) {\n        var _marker = markerMidStyleProp.getDefinition();\n        for (var i = 1; i < markersLastIndex; i++) {\n          var [_point, _angle] = markers[i];\n          _marker.render(ctx, _point, _angle);\n        }\n      }\n      if (markerEndStyleProp.isUrlDefinition()) {\n        var _marker2 = markerEndStyleProp.getDefinition();\n        var [_point2, _angle2] = markers[markersLastIndex];\n        _marker2.render(ctx, _point2, _angle2);\n      }\n    }\n  }\n  static pathM(pathParser) {\n    var point = pathParser.getAsCurrentPoint();\n    pathParser.start = pathParser.current;\n    return {\n      point\n    };\n  }\n  pathM(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      point\n    } = PathElement.pathM(pathParser);\n    var {\n      x,\n      y\n    } = point;\n    pathParser.addMarker(point);\n    boundingBox.addPoint(x, y);\n    if (ctx) {\n      ctx.moveTo(x, y);\n    }\n  }\n  static pathL(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var point = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      point\n    };\n  }\n  pathL(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point\n    } = PathElement.pathL(pathParser);\n    var {\n      x,\n      y\n    } = point;\n    pathParser.addMarker(point, current);\n    boundingBox.addPoint(x, y);\n    if (ctx) {\n      ctx.lineTo(x, y);\n    }\n  }\n  static pathH(pathParser) {\n    var {\n      current,\n      command\n    } = pathParser;\n    var point = new Point((command.relative ? current.x : 0) + command.x, current.y);\n    pathParser.current = point;\n    return {\n      current,\n      point\n    };\n  }\n  pathH(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point\n    } = PathElement.pathH(pathParser);\n    var {\n      x,\n      y\n    } = point;\n    pathParser.addMarker(point, current);\n    boundingBox.addPoint(x, y);\n    if (ctx) {\n      ctx.lineTo(x, y);\n    }\n  }\n  static pathV(pathParser) {\n    var {\n      current,\n      command\n    } = pathParser;\n    var point = new Point(current.x, (command.relative ? current.y : 0) + command.y);\n    pathParser.current = point;\n    return {\n      current,\n      point\n    };\n  }\n  pathV(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point\n    } = PathElement.pathV(pathParser);\n    var {\n      x,\n      y\n    } = point;\n    pathParser.addMarker(point, current);\n    boundingBox.addPoint(x, y);\n    if (ctx) {\n      ctx.lineTo(x, y);\n    }\n  }\n  static pathC(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var point = pathParser.getPoint('x1', 'y1');\n    var controlPoint = pathParser.getAsControlPoint('x2', 'y2');\n    var currentPoint = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    };\n  }\n  pathC(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathC(pathParser);\n    pathParser.addMarker(currentPoint, controlPoint, point);\n    boundingBox.addBezierCurve(current.x, current.y, point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    if (ctx) {\n      ctx.bezierCurveTo(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n  }\n  static pathS(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var point = pathParser.getReflectedControlPoint();\n    var controlPoint = pathParser.getAsControlPoint('x2', 'y2');\n    var currentPoint = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    };\n  }\n  pathS(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathS(pathParser);\n    pathParser.addMarker(currentPoint, controlPoint, point);\n    boundingBox.addBezierCurve(current.x, current.y, point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    if (ctx) {\n      ctx.bezierCurveTo(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n  }\n  static pathQ(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var controlPoint = pathParser.getAsControlPoint('x1', 'y1');\n    var currentPoint = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      controlPoint,\n      currentPoint\n    };\n  }\n  pathQ(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathQ(pathParser);\n    pathParser.addMarker(currentPoint, controlPoint, controlPoint);\n    boundingBox.addQuadraticCurve(current.x, current.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    if (ctx) {\n      ctx.quadraticCurveTo(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n  }\n  static pathT(pathParser) {\n    var {\n      current\n    } = pathParser;\n    var controlPoint = pathParser.getReflectedControlPoint();\n    pathParser.control = controlPoint;\n    var currentPoint = pathParser.getAsCurrentPoint();\n    return {\n      current,\n      controlPoint,\n      currentPoint\n    };\n  }\n  pathT(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      current,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathT(pathParser);\n    pathParser.addMarker(currentPoint, controlPoint, controlPoint);\n    boundingBox.addQuadraticCurve(current.x, current.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    if (ctx) {\n      ctx.quadraticCurveTo(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n  }\n  static pathA(pathParser) {\n    var {\n      current,\n      command\n    } = pathParser;\n    var {\n      rX,\n      rY,\n      xRot,\n      lArcFlag,\n      sweepFlag\n    } = command;\n    var xAxisRotation = xRot * (Math.PI / 180.0);\n    var currentPoint = pathParser.getAsCurrentPoint(); // Conversion from endpoint to center parameterization\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    // x1', y1'\n\n    var currp = new Point(Math.cos(xAxisRotation) * (current.x - currentPoint.x) / 2.0 + Math.sin(xAxisRotation) * (current.y - currentPoint.y) / 2.0, -Math.sin(xAxisRotation) * (current.x - currentPoint.x) / 2.0 + Math.cos(xAxisRotation) * (current.y - currentPoint.y) / 2.0); // adjust radii\n\n    var l = Math.pow(currp.x, 2) / Math.pow(rX, 2) + Math.pow(currp.y, 2) / Math.pow(rY, 2);\n    if (l > 1) {\n      rX *= Math.sqrt(l);\n      rY *= Math.sqrt(l);\n    } // cx', cy'\n\n    var s = (lArcFlag === sweepFlag ? -1 : 1) * Math.sqrt((Math.pow(rX, 2) * Math.pow(rY, 2) - Math.pow(rX, 2) * Math.pow(currp.y, 2) - Math.pow(rY, 2) * Math.pow(currp.x, 2)) / (Math.pow(rX, 2) * Math.pow(currp.y, 2) + Math.pow(rY, 2) * Math.pow(currp.x, 2)));\n    if (isNaN(s)) {\n      s = 0;\n    }\n    var cpp = new Point(s * rX * currp.y / rY, s * -rY * currp.x / rX); // cx, cy\n\n    var centp = new Point((current.x + currentPoint.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y, (current.y + currentPoint.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y); // initial angle\n\n    var a1 = vectorsAngle([1, 0], [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY]); // θ1\n    // angle delta\n\n    var u = [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY];\n    var v = [(-currp.x - cpp.x) / rX, (-currp.y - cpp.y) / rY];\n    var ad = vectorsAngle(u, v); // Δθ\n\n    if (vectorsRatio(u, v) <= -1) {\n      ad = Math.PI;\n    }\n    if (vectorsRatio(u, v) >= 1) {\n      ad = 0;\n    }\n    return {\n      currentPoint,\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    };\n  }\n  pathA(ctx, boundingBox) {\n    var {\n      pathParser\n    } = this;\n    var {\n      currentPoint,\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    } = PathElement.pathA(pathParser); // for markers\n\n    var dir = 1 - sweepFlag ? 1.0 : -1.0;\n    var ah = a1 + dir * (ad / 2.0);\n    var halfWay = new Point(centp.x + rX * Math.cos(ah), centp.y + rY * Math.sin(ah));\n    pathParser.addMarkerAngle(halfWay, ah - dir * Math.PI / 2);\n    pathParser.addMarkerAngle(currentPoint, ah - dir * Math.PI);\n    boundingBox.addPoint(currentPoint.x, currentPoint.y); // TODO: this is too naive, make it better\n\n    if (ctx && !isNaN(a1) && !isNaN(ad)) {\n      var r = rX > rY ? rX : rY;\n      var sx = rX > rY ? 1 : rX / rY;\n      var sy = rX > rY ? rY / rX : 1;\n      ctx.translate(centp.x, centp.y);\n      ctx.rotate(xAxisRotation);\n      ctx.scale(sx, sy);\n      ctx.arc(0, 0, r, a1, a1 + ad, Boolean(1 - sweepFlag));\n      ctx.scale(1 / sx, 1 / sy);\n      ctx.rotate(-xAxisRotation);\n      ctx.translate(-centp.x, -centp.y);\n    }\n  }\n  static pathZ(pathParser) {\n    pathParser.current = pathParser.start;\n  }\n  pathZ(ctx, boundingBox) {\n    PathElement.pathZ(this.pathParser);\n    if (ctx) {\n      // only close path if it is not a straight line\n      if (boundingBox.x1 !== boundingBox.x2 && boundingBox.y1 !== boundingBox.y2) {\n        ctx.closePath();\n      }\n    }\n  }\n}\nclass GlyphElement extends PathElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'glyph';\n    this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber();\n    this.unicode = this.getAttribute('unicode').getString();\n    this.arabicForm = this.getAttribute('arabic-form').getString();\n  }\n}\nclass TextElement extends RenderedElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, new.target === TextElement ? true : captureTextNodes);\n    this.type = 'text';\n    this.x = 0;\n    this.y = 0;\n    this.measureCache = -1;\n  }\n  setContext(ctx) {\n    var fromMeasure = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    super.setContext(ctx, fromMeasure);\n    var textBaseline = this.getStyle('dominant-baseline').getTextBaseline() || this.getStyle('alignment-baseline').getTextBaseline();\n    if (textBaseline) {\n      ctx.textBaseline = textBaseline;\n    }\n  }\n  initializeCoordinates() {\n    this.x = 0;\n    this.y = 0;\n    this.leafTexts = [];\n    this.textChunkStart = 0;\n    this.minX = Number.POSITIVE_INFINITY;\n    this.maxX = Number.NEGATIVE_INFINITY;\n  }\n  getBoundingBox(ctx) {\n    if (this.type !== 'text') {\n      return this.getTElementBoundingBox(ctx);\n    } // first, calculate child positions\n\n    this.initializeCoordinates();\n    this.adjustChildCoordinatesRecursive(ctx);\n    var boundingBox = null; // then calculate bounding box\n\n    this.children.forEach((_, i) => {\n      var childBoundingBox = this.getChildBoundingBox(ctx, this, this, i);\n      if (!boundingBox) {\n        boundingBox = childBoundingBox;\n      } else {\n        boundingBox.addBoundingBox(childBoundingBox);\n      }\n    });\n    return boundingBox;\n  }\n  getFontSize() {\n    var {\n      document,\n      parent\n    } = this;\n    var inheritFontSize = Font.parse(document.ctx.font).fontSize;\n    var fontSize = parent.getStyle('font-size').getNumber(inheritFontSize);\n    return fontSize;\n  }\n  getTElementBoundingBox(ctx) {\n    var fontSize = this.getFontSize();\n    return new BoundingBox(this.x, this.y - fontSize, this.x + this.measureText(ctx), this.y);\n  }\n  getGlyph(font, text, i) {\n    var char = text[i];\n    var glyph = null;\n    if (font.isArabic) {\n      var len = text.length;\n      var prevChar = text[i - 1];\n      var nextChar = text[i + 1];\n      var arabicForm = 'isolated';\n      if ((i === 0 || prevChar === ' ') && i < len - 1 && nextChar !== ' ') {\n        arabicForm = 'terminal';\n      }\n      if (i > 0 && prevChar !== ' ' && i < len - 1 && nextChar !== ' ') {\n        arabicForm = 'medial';\n      }\n      if (i > 0 && prevChar !== ' ' && (i === len - 1 || nextChar === ' ')) {\n        arabicForm = 'initial';\n      }\n      if (typeof font.glyphs[char] !== 'undefined') {\n        // NEED TEST\n        var maybeGlyph = font.glyphs[char];\n        glyph = maybeGlyph instanceof GlyphElement ? maybeGlyph : maybeGlyph[arabicForm];\n      }\n    } else {\n      glyph = font.glyphs[char];\n    }\n    if (!glyph) {\n      glyph = font.missingGlyph;\n    }\n    return glyph;\n  }\n  getText() {\n    return '';\n  }\n  getTextFromNode(node) {\n    var textNode = node || this.node;\n    var childNodes = Array.from(textNode.parentNode.childNodes);\n    var index = childNodes.indexOf(textNode);\n    var lastIndex = childNodes.length - 1;\n    var text = compressSpaces(\n    // textNode.value\n    // || textNode.text\n    textNode.textContent || '');\n    if (index === 0) {\n      text = trimLeft(text);\n    }\n    if (index === lastIndex) {\n      text = trimRight(text);\n    }\n    return text;\n  }\n  renderChildren(ctx) {\n    if (this.type !== 'text') {\n      this.renderTElementChildren(ctx);\n      return;\n    } // first, calculate child positions\n\n    this.initializeCoordinates();\n    this.adjustChildCoordinatesRecursive(ctx); // then render\n\n    this.children.forEach((_, i) => {\n      this.renderChild(ctx, this, this, i);\n    });\n    var {\n      mouse\n    } = this.document.screen; // Do not calc bounding box if mouse is not working.\n\n    if (mouse.isWorking()) {\n      mouse.checkBoundingBox(this, this.getBoundingBox(ctx));\n    }\n  }\n  renderTElementChildren(ctx) {\n    var {\n      document,\n      parent\n    } = this;\n    var renderText = this.getText();\n    var customFont = parent.getStyle('font-family').getDefinition();\n    if (customFont) {\n      var {\n        unitsPerEm\n      } = customFont.fontFace;\n      var ctxFont = Font.parse(document.ctx.font);\n      var fontSize = parent.getStyle('font-size').getNumber(ctxFont.fontSize);\n      var fontStyle = parent.getStyle('font-style').getString(ctxFont.fontStyle);\n      var scale = fontSize / unitsPerEm;\n      var text = customFont.isRTL ? renderText.split('').reverse().join('') : renderText;\n      var dx = toNumbers(parent.getAttribute('dx').getString());\n      var len = text.length;\n      for (var i = 0; i < len; i++) {\n        var glyph = this.getGlyph(customFont, text, i);\n        ctx.translate(this.x, this.y);\n        ctx.scale(scale, -scale);\n        var lw = ctx.lineWidth;\n        ctx.lineWidth = ctx.lineWidth * unitsPerEm / fontSize;\n        if (fontStyle === 'italic') {\n          ctx.transform(1, 0, .4, 1, 0, 0);\n        }\n        glyph.render(ctx);\n        if (fontStyle === 'italic') {\n          ctx.transform(1, 0, -.4, 1, 0, 0);\n        }\n        ctx.lineWidth = lw;\n        ctx.scale(1 / scale, -1 / scale);\n        ctx.translate(-this.x, -this.y);\n        this.x += fontSize * (glyph.horizAdvX || customFont.horizAdvX) / unitsPerEm;\n        if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n          this.x += dx[i];\n        }\n      }\n      return;\n    }\n    var {\n      x,\n      y\n    } = this; // NEED TEST\n    // if (ctx.paintOrder === 'stroke') {\n    // \tif (ctx.strokeStyle) {\n    // \t\tctx.strokeText(renderText, x, y);\n    // \t}\n    // \tif (ctx.fillStyle) {\n    // \t\tctx.fillText(renderText, x, y);\n    // \t}\n    // } else {\n\n    if (ctx.fillStyle) {\n      ctx.fillText(renderText, x, y);\n    }\n    if (ctx.strokeStyle) {\n      ctx.strokeText(renderText, x, y);\n    } // }\n  }\n  applyAnchoring() {\n    if (this.textChunkStart >= this.leafTexts.length) {\n      return;\n    } // This is basically the \"Apply anchoring\" part of https://www.w3.org/TR/SVG2/text.html#TextLayoutAlgorithm.\n    // The difference is that we apply the anchoring as soon as a chunk is finished. This saves some extra looping.\n    // Vertical text is not supported.\n\n    var firstElement = this.leafTexts[this.textChunkStart];\n    var textAnchor = firstElement.getStyle('text-anchor').getString('start');\n    var isRTL = false; // we treat RTL like LTR\n\n    var shift = 0;\n    if (textAnchor === 'start' && !isRTL || textAnchor === 'end' && isRTL) {\n      shift = firstElement.x - this.minX;\n    } else if (textAnchor === 'end' && !isRTL || textAnchor === 'start' && isRTL) {\n      shift = firstElement.x - this.maxX;\n    } else {\n      shift = firstElement.x - (this.minX + this.maxX) / 2;\n    }\n    for (var i = this.textChunkStart; i < this.leafTexts.length; i++) {\n      this.leafTexts[i].x += shift;\n    } // start new chunk\n\n    this.minX = Number.POSITIVE_INFINITY;\n    this.maxX = Number.NEGATIVE_INFINITY;\n    this.textChunkStart = this.leafTexts.length;\n  }\n  adjustChildCoordinatesRecursive(ctx) {\n    this.children.forEach((_, i) => {\n      this.adjustChildCoordinatesRecursiveCore(ctx, this, this, i);\n    });\n    this.applyAnchoring();\n  }\n  adjustChildCoordinatesRecursiveCore(ctx, textParent, parent, i) {\n    var child = parent.children[i];\n    if (child.children.length > 0) {\n      child.children.forEach((_, i) => {\n        textParent.adjustChildCoordinatesRecursiveCore(ctx, textParent, child, i);\n      });\n    } else {\n      // only leafs are relevant\n      this.adjustChildCoordinates(ctx, textParent, parent, i);\n    }\n  }\n  adjustChildCoordinates(ctx, textParent, parent, i) {\n    var child = parent.children[i];\n    if (typeof child.measureText !== 'function') {\n      return child;\n    }\n    ctx.save();\n    child.setContext(ctx, true);\n    var xAttr = child.getAttribute('x');\n    var yAttr = child.getAttribute('y');\n    var dxAttr = child.getAttribute('dx');\n    var dyAttr = child.getAttribute('dy');\n    var customFont = child.getStyle('font-family').getDefinition();\n    var isRTL = Boolean(customFont) && customFont.isRTL;\n    if (i === 0) {\n      // First children inherit attributes from parent(s). Positional attributes\n      // are only inherited from a parent to it's first child.\n      if (!xAttr.hasValue()) {\n        xAttr.setValue(child.getInheritedAttribute('x'));\n      }\n      if (!yAttr.hasValue()) {\n        yAttr.setValue(child.getInheritedAttribute('y'));\n      }\n      if (!dxAttr.hasValue()) {\n        dxAttr.setValue(child.getInheritedAttribute('dx'));\n      }\n      if (!dyAttr.hasValue()) {\n        dyAttr.setValue(child.getInheritedAttribute('dy'));\n      }\n    }\n    var width = child.measureText(ctx);\n    if (isRTL) {\n      textParent.x -= width;\n    }\n    if (xAttr.hasValue()) {\n      // an \"x\" attribute marks the start of a new chunk\n      textParent.applyAnchoring();\n      child.x = xAttr.getPixels('x');\n      if (dxAttr.hasValue()) {\n        child.x += dxAttr.getPixels('x');\n      }\n    } else {\n      if (dxAttr.hasValue()) {\n        textParent.x += dxAttr.getPixels('x');\n      }\n      child.x = textParent.x;\n    }\n    textParent.x = child.x;\n    if (!isRTL) {\n      textParent.x += width;\n    }\n    if (yAttr.hasValue()) {\n      child.y = yAttr.getPixels('y');\n      if (dyAttr.hasValue()) {\n        child.y += dyAttr.getPixels('y');\n      }\n    } else {\n      if (dyAttr.hasValue()) {\n        textParent.y += dyAttr.getPixels('y');\n      }\n      child.y = textParent.y;\n    }\n    textParent.y = child.y; // update the current chunk and it's bounds\n\n    textParent.leafTexts.push(child);\n    textParent.minX = Math.min(textParent.minX, child.x, child.x + width);\n    textParent.maxX = Math.max(textParent.maxX, child.x, child.x + width);\n    child.clearContext(ctx);\n    ctx.restore();\n    return child;\n  }\n  getChildBoundingBox(ctx, textParent, parent, i) {\n    var child = parent.children[i]; // not a text node?\n\n    if (typeof child.getBoundingBox !== 'function') {\n      return null;\n    }\n    var boundingBox = child.getBoundingBox(ctx);\n    if (!boundingBox) {\n      return null;\n    }\n    child.children.forEach((_, i) => {\n      var childBoundingBox = textParent.getChildBoundingBox(ctx, textParent, child, i);\n      boundingBox.addBoundingBox(childBoundingBox);\n    });\n    return boundingBox;\n  }\n  renderChild(ctx, textParent, parent, i) {\n    var child = parent.children[i];\n    child.render(ctx);\n    child.children.forEach((_, i) => {\n      textParent.renderChild(ctx, textParent, child, i);\n    });\n  }\n  measureText(ctx) {\n    var {\n      measureCache\n    } = this;\n    if (~measureCache) {\n      return measureCache;\n    }\n    var renderText = this.getText();\n    var measure = this.measureTargetText(ctx, renderText);\n    this.measureCache = measure;\n    return measure;\n  }\n  measureTargetText(ctx, targetText) {\n    if (!targetText.length) {\n      return 0;\n    }\n    var {\n      parent\n    } = this;\n    var customFont = parent.getStyle('font-family').getDefinition();\n    if (customFont) {\n      var fontSize = this.getFontSize();\n      var text = customFont.isRTL ? targetText.split('').reverse().join('') : targetText;\n      var dx = toNumbers(parent.getAttribute('dx').getString());\n      var len = text.length;\n      var _measure = 0;\n      for (var i = 0; i < len; i++) {\n        var glyph = this.getGlyph(customFont, text, i);\n        _measure += (glyph.horizAdvX || customFont.horizAdvX) * fontSize / customFont.fontFace.unitsPerEm;\n        if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n          _measure += dx[i];\n        }\n      }\n      return _measure;\n    }\n    if (!ctx.measureText) {\n      return targetText.length * 10;\n    }\n    ctx.save();\n    this.setContext(ctx, true);\n    var {\n      width: measure\n    } = ctx.measureText(targetText);\n    this.clearContext(ctx);\n    ctx.restore();\n    return measure;\n  }\n  /**\r\n   * Inherits positional attributes from {@link TextElement} parent(s). Attributes\r\n   * are only inherited from a parent to its first child.\r\n   * @param name - The attribute name.\r\n   * @returns The attribute value or null.\r\n   */\n\n  getInheritedAttribute(name) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias,consistent-this\n    var current = this;\n    while (current instanceof TextElement && current.isFirstChild()) {\n      var parentAttr = current.parent.getAttribute(name);\n      if (parentAttr.hasValue(true)) {\n        return parentAttr.getValue('0');\n      }\n      current = current.parent;\n    }\n    return null;\n  }\n}\nclass TSpanElement extends TextElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, new.target === TSpanElement ? true : captureTextNodes);\n    this.type = 'tspan'; // if this node has children, then they own the text\n\n    this.text = this.children.length > 0 ? '' : this.getTextFromNode();\n  }\n  getText() {\n    return this.text;\n  }\n}\nclass TextNode extends TSpanElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'textNode';\n  }\n}\nclass SVGElement extends RenderedElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'svg';\n    this.root = false;\n  }\n  setContext(ctx) {\n    var _this$node$parentNode;\n    var {\n      document\n    } = this;\n    var {\n      screen,\n      window\n    } = document;\n    var canvas = ctx.canvas;\n    screen.setDefaults(ctx);\n    if (canvas.style && typeof ctx.font !== 'undefined' && window && typeof window.getComputedStyle !== 'undefined') {\n      ctx.font = window.getComputedStyle(canvas).getPropertyValue('font');\n      var fontSizeProp = new Property(document, 'fontSize', Font.parse(ctx.font).fontSize);\n      if (fontSizeProp.hasValue()) {\n        document.rootEmSize = fontSizeProp.getPixels('y');\n        document.emSize = document.rootEmSize;\n      }\n    } // create new view port\n\n    if (!this.getAttribute('x').hasValue()) {\n      this.getAttribute('x', true).setValue(0);\n    }\n    if (!this.getAttribute('y').hasValue()) {\n      this.getAttribute('y', true).setValue(0);\n    }\n    var {\n      width,\n      height\n    } = screen.viewPort;\n    if (!this.getStyle('width').hasValue()) {\n      this.getStyle('width', true).setValue('100%');\n    }\n    if (!this.getStyle('height').hasValue()) {\n      this.getStyle('height', true).setValue('100%');\n    }\n    if (!this.getStyle('color').hasValue()) {\n      this.getStyle('color', true).setValue('black');\n    }\n    var refXAttr = this.getAttribute('refX');\n    var refYAttr = this.getAttribute('refY');\n    var viewBoxAttr = this.getAttribute('viewBox');\n    var viewBox = viewBoxAttr.hasValue() ? toNumbers(viewBoxAttr.getString()) : null;\n    var clip = !this.root && this.getStyle('overflow').getValue('hidden') !== 'visible';\n    var minX = 0;\n    var minY = 0;\n    var clipX = 0;\n    var clipY = 0;\n    if (viewBox) {\n      minX = viewBox[0];\n      minY = viewBox[1];\n    }\n    if (!this.root) {\n      width = this.getStyle('width').getPixels('x');\n      height = this.getStyle('height').getPixels('y');\n      if (this.type === 'marker') {\n        clipX = minX;\n        clipY = minY;\n        minX = 0;\n        minY = 0;\n      }\n    }\n    screen.viewPort.setCurrent(width, height); // Default value of transform-origin is center only for root SVG elements\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform-origin\n\n    if (this.node // is not temporary SVGElement\n    && (!this.parent || ((_this$node$parentNode = this.node.parentNode) === null || _this$node$parentNode === void 0 ? void 0 : _this$node$parentNode.nodeName) === 'foreignObject') && this.getStyle('transform', false, true).hasValue() && !this.getStyle('transform-origin', false, true).hasValue()) {\n      this.getStyle('transform-origin', true, true).setValue('50% 50%');\n    }\n    super.setContext(ctx);\n    ctx.translate(this.getAttribute('x').getPixels('x'), this.getAttribute('y').getPixels('y'));\n    if (viewBox) {\n      width = viewBox[2];\n      height = viewBox[3];\n    }\n    document.setViewBox({\n      ctx,\n      aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n      width: screen.viewPort.width,\n      desiredWidth: width,\n      height: screen.viewPort.height,\n      desiredHeight: height,\n      minX,\n      minY,\n      refX: refXAttr.getValue(),\n      refY: refYAttr.getValue(),\n      clip,\n      clipX,\n      clipY\n    });\n    if (viewBox) {\n      screen.viewPort.removeCurrent();\n      screen.viewPort.setCurrent(width, height);\n    }\n  }\n  clearContext(ctx) {\n    super.clearContext(ctx);\n    this.document.screen.viewPort.removeCurrent();\n  }\n  /**\r\n   * Resize SVG to fit in given size.\r\n   * @param width\r\n   * @param height\r\n   * @param preserveAspectRatio\r\n   */\n\n  resize(width) {\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : width;\n    var preserveAspectRatio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var widthAttr = this.getAttribute('width', true);\n    var heightAttr = this.getAttribute('height', true);\n    var viewBoxAttr = this.getAttribute('viewBox');\n    var styleAttr = this.getAttribute('style');\n    var originWidth = widthAttr.getNumber(0);\n    var originHeight = heightAttr.getNumber(0);\n    if (preserveAspectRatio) {\n      if (typeof preserveAspectRatio === 'string') {\n        this.getAttribute('preserveAspectRatio', true).setValue(preserveAspectRatio);\n      } else {\n        var preserveAspectRatioAttr = this.getAttribute('preserveAspectRatio');\n        if (preserveAspectRatioAttr.hasValue()) {\n          preserveAspectRatioAttr.setValue(preserveAspectRatioAttr.getString().replace(/^\\s*(\\S.*\\S)\\s*$/, '$1'));\n        }\n      }\n    }\n    widthAttr.setValue(width);\n    heightAttr.setValue(height);\n    if (!viewBoxAttr.hasValue()) {\n      viewBoxAttr.setValue(\"0 0 \".concat(originWidth || width, \" \").concat(originHeight || height));\n    }\n    if (styleAttr.hasValue()) {\n      var widthStyle = this.getStyle('width');\n      var heightStyle = this.getStyle('height');\n      if (widthStyle.hasValue()) {\n        widthStyle.setValue(\"\".concat(width, \"px\"));\n      }\n      if (heightStyle.hasValue()) {\n        heightStyle.setValue(\"\".concat(height, \"px\"));\n      }\n    }\n  }\n}\nclass RectElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'rect';\n  }\n  path(ctx) {\n    var x = this.getAttribute('x').getPixels('x');\n    var y = this.getAttribute('y').getPixels('y');\n    var width = this.getStyle('width', false, true).getPixels('x');\n    var height = this.getStyle('height', false, true).getPixels('y');\n    var rxAttr = this.getAttribute('rx');\n    var ryAttr = this.getAttribute('ry');\n    var rx = rxAttr.getPixels('x');\n    var ry = ryAttr.getPixels('y');\n    if (rxAttr.hasValue() && !ryAttr.hasValue()) {\n      ry = rx;\n    }\n    if (ryAttr.hasValue() && !rxAttr.hasValue()) {\n      rx = ry;\n    }\n    rx = Math.min(rx, width / 2.0);\n    ry = Math.min(ry, height / 2.0);\n    if (ctx) {\n      var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\n      ctx.beginPath(); // always start the path so we don't fill prior paths\n\n      if (height > 0 && width > 0) {\n        ctx.moveTo(x + rx, y);\n        ctx.lineTo(x + width - rx, y);\n        ctx.bezierCurveTo(x + width - rx + KAPPA * rx, y, x + width, y + ry - KAPPA * ry, x + width, y + ry);\n        ctx.lineTo(x + width, y + height - ry);\n        ctx.bezierCurveTo(x + width, y + height - ry + KAPPA * ry, x + width - rx + KAPPA * rx, y + height, x + width - rx, y + height);\n        ctx.lineTo(x + rx, y + height);\n        ctx.bezierCurveTo(x + rx - KAPPA * rx, y + height, x, y + height - ry + KAPPA * ry, x, y + height - ry);\n        ctx.lineTo(x, y + ry);\n        ctx.bezierCurveTo(x, y + ry - KAPPA * ry, x + rx - KAPPA * rx, y, x + rx, y);\n        ctx.closePath();\n      }\n    }\n    return new BoundingBox(x, y, x + width, y + height);\n  }\n  getMarkers() {\n    return null;\n  }\n}\nclass CircleElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'circle';\n  }\n  path(ctx) {\n    var cx = this.getAttribute('cx').getPixels('x');\n    var cy = this.getAttribute('cy').getPixels('y');\n    var r = this.getAttribute('r').getPixels();\n    if (ctx && r > 0) {\n      ctx.beginPath();\n      ctx.arc(cx, cy, r, 0, Math.PI * 2, false);\n      ctx.closePath();\n    }\n    return new BoundingBox(cx - r, cy - r, cx + r, cy + r);\n  }\n  getMarkers() {\n    return null;\n  }\n}\nclass EllipseElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'ellipse';\n  }\n  path(ctx) {\n    var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\n    var rx = this.getAttribute('rx').getPixels('x');\n    var ry = this.getAttribute('ry').getPixels('y');\n    var cx = this.getAttribute('cx').getPixels('x');\n    var cy = this.getAttribute('cy').getPixels('y');\n    if (ctx && rx > 0 && ry > 0) {\n      ctx.beginPath();\n      ctx.moveTo(cx + rx, cy);\n      ctx.bezierCurveTo(cx + rx, cy + KAPPA * ry, cx + KAPPA * rx, cy + ry, cx, cy + ry);\n      ctx.bezierCurveTo(cx - KAPPA * rx, cy + ry, cx - rx, cy + KAPPA * ry, cx - rx, cy);\n      ctx.bezierCurveTo(cx - rx, cy - KAPPA * ry, cx - KAPPA * rx, cy - ry, cx, cy - ry);\n      ctx.bezierCurveTo(cx + KAPPA * rx, cy - ry, cx + rx, cy - KAPPA * ry, cx + rx, cy);\n      ctx.closePath();\n    }\n    return new BoundingBox(cx - rx, cy - ry, cx + rx, cy + ry);\n  }\n  getMarkers() {\n    return null;\n  }\n}\nclass LineElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'line';\n  }\n  getPoints() {\n    return [new Point(this.getAttribute('x1').getPixels('x'), this.getAttribute('y1').getPixels('y')), new Point(this.getAttribute('x2').getPixels('x'), this.getAttribute('y2').getPixels('y'))];\n  }\n  path(ctx) {\n    var [{\n      x: x0,\n      y: y0\n    }, {\n      x: x1,\n      y: y1\n    }] = this.getPoints();\n    if (ctx) {\n      ctx.beginPath();\n      ctx.moveTo(x0, y0);\n      ctx.lineTo(x1, y1);\n    }\n    return new BoundingBox(x0, y0, x1, y1);\n  }\n  getMarkers() {\n    var [p0, p1] = this.getPoints();\n    var a = p0.angleTo(p1);\n    return [[p0, a], [p1, a]];\n  }\n}\nclass PolylineElement extends PathElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'polyline';\n    this.points = [];\n    this.points = Point.parsePath(this.getAttribute('points').getString());\n  }\n  path(ctx) {\n    var {\n      points\n    } = this;\n    var [{\n      x: x0,\n      y: y0\n    }] = points;\n    var boundingBox = new BoundingBox(x0, y0);\n    if (ctx) {\n      ctx.beginPath();\n      ctx.moveTo(x0, y0);\n    }\n    points.forEach(_ref => {\n      var {\n        x,\n        y\n      } = _ref;\n      boundingBox.addPoint(x, y);\n      if (ctx) {\n        ctx.lineTo(x, y);\n      }\n    });\n    return boundingBox;\n  }\n  getMarkers() {\n    var {\n      points\n    } = this;\n    var lastIndex = points.length - 1;\n    var markers = [];\n    points.forEach((point, i) => {\n      if (i === lastIndex) {\n        return;\n      }\n      markers.push([point, point.angleTo(points[i + 1])]);\n    });\n    if (markers.length > 0) {\n      markers.push([points[points.length - 1], markers[markers.length - 1][1]]);\n    }\n    return markers;\n  }\n}\nclass PolygonElement extends PolylineElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'polygon';\n  }\n  path(ctx) {\n    var boundingBox = super.path(ctx);\n    var [{\n      x,\n      y\n    }] = this.points;\n    if (ctx) {\n      ctx.lineTo(x, y);\n      ctx.closePath();\n    }\n    return boundingBox;\n  }\n}\nclass PatternElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'pattern';\n  }\n  createPattern(ctx, _, parentOpacityProp) {\n    var width = this.getStyle('width').getPixels('x', true);\n    var height = this.getStyle('height').getPixels('y', true); // render me using a temporary svg element\n\n    var patternSvg = new SVGElement(this.document, null);\n    patternSvg.attributes.viewBox = new Property(this.document, 'viewBox', this.getAttribute('viewBox').getValue());\n    patternSvg.attributes.width = new Property(this.document, 'width', \"\".concat(width, \"px\"));\n    patternSvg.attributes.height = new Property(this.document, 'height', \"\".concat(height, \"px\"));\n    patternSvg.attributes.transform = new Property(this.document, 'transform', this.getAttribute('patternTransform').getValue());\n    patternSvg.children = this.children;\n    var patternCanvas = this.document.createCanvas(width, height);\n    var patternCtx = patternCanvas.getContext('2d');\n    var xAttr = this.getAttribute('x');\n    var yAttr = this.getAttribute('y');\n    if (xAttr.hasValue() && yAttr.hasValue()) {\n      patternCtx.translate(xAttr.getPixels('x', true), yAttr.getPixels('y', true));\n    }\n    if (parentOpacityProp.hasValue()) {\n      this.styles['fill-opacity'] = parentOpacityProp;\n    } else {\n      Reflect.deleteProperty(this.styles, 'fill-opacity');\n    } // render 3x3 grid so when we transform there's no white space on edges\n\n    for (var x = -1; x <= 1; x++) {\n      for (var y = -1; y <= 1; y++) {\n        patternCtx.save();\n        patternSvg.attributes.x = new Property(this.document, 'x', x * patternCanvas.width);\n        patternSvg.attributes.y = new Property(this.document, 'y', y * patternCanvas.height);\n        patternSvg.render(patternCtx);\n        patternCtx.restore();\n      }\n    }\n    var pattern = ctx.createPattern(patternCanvas, 'repeat');\n    return pattern;\n  }\n}\nclass MarkerElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'marker';\n  }\n  render(ctx, point, angle) {\n    if (!point) {\n      return;\n    }\n    var {\n      x,\n      y\n    } = point;\n    var orient = this.getAttribute('orient').getString('auto');\n    var markerUnits = this.getAttribute('markerUnits').getString('strokeWidth');\n    ctx.translate(x, y);\n    if (orient === 'auto') {\n      ctx.rotate(angle);\n    }\n    if (markerUnits === 'strokeWidth') {\n      ctx.scale(ctx.lineWidth, ctx.lineWidth);\n    }\n    ctx.save(); // render me using a temporary svg element\n\n    var markerSvg = new SVGElement(this.document, null);\n    markerSvg.type = this.type;\n    markerSvg.attributes.viewBox = new Property(this.document, 'viewBox', this.getAttribute('viewBox').getValue());\n    markerSvg.attributes.refX = new Property(this.document, 'refX', this.getAttribute('refX').getValue());\n    markerSvg.attributes.refY = new Property(this.document, 'refY', this.getAttribute('refY').getValue());\n    markerSvg.attributes.width = new Property(this.document, 'width', this.getAttribute('markerWidth').getValue());\n    markerSvg.attributes.height = new Property(this.document, 'height', this.getAttribute('markerHeight').getValue());\n    markerSvg.attributes.overflow = new Property(this.document, 'overflow', this.getAttribute('overflow').getValue());\n    markerSvg.attributes.fill = new Property(this.document, 'fill', this.getAttribute('fill').getColor('black'));\n    markerSvg.attributes.stroke = new Property(this.document, 'stroke', this.getAttribute('stroke').getValue('none'));\n    markerSvg.children = this.children;\n    markerSvg.render(ctx);\n    ctx.restore();\n    if (markerUnits === 'strokeWidth') {\n      ctx.scale(1 / ctx.lineWidth, 1 / ctx.lineWidth);\n    }\n    if (orient === 'auto') {\n      ctx.rotate(-angle);\n    }\n    ctx.translate(-x, -y);\n  }\n}\nclass DefsElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'defs';\n  }\n  render() {// NOOP\n  }\n}\nclass GElement extends RenderedElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'g';\n  }\n  getBoundingBox(ctx) {\n    var boundingBox = new BoundingBox();\n    this.children.forEach(child => {\n      boundingBox.addBoundingBox(child.getBoundingBox(ctx));\n    });\n    return boundingBox;\n  }\n}\nclass GradientElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.attributesToInherit = ['gradientUnits'];\n    this.stops = [];\n    var {\n      stops,\n      children\n    } = this;\n    children.forEach(child => {\n      if (child.type === 'stop') {\n        stops.push(child);\n      }\n    });\n  }\n  getGradientUnits() {\n    return this.getAttribute('gradientUnits').getString('objectBoundingBox');\n  }\n  createGradient(ctx, element, parentOpacityProp) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n    var stopsContainer = this;\n    if (this.getHrefAttribute().hasValue()) {\n      stopsContainer = this.getHrefAttribute().getDefinition();\n      this.inheritStopContainer(stopsContainer);\n    }\n    var {\n      stops\n    } = stopsContainer;\n    var gradient = this.getGradient(ctx, element);\n    if (!gradient) {\n      return this.addParentOpacity(parentOpacityProp, stops[stops.length - 1].color);\n    }\n    stops.forEach(stop => {\n      gradient.addColorStop(stop.offset, this.addParentOpacity(parentOpacityProp, stop.color));\n    });\n    if (this.getAttribute('gradientTransform').hasValue()) {\n      // render as transformed pattern on temporary canvas\n      var {\n        document\n      } = this;\n      var {\n        MAX_VIRTUAL_PIXELS,\n        viewPort\n      } = document.screen;\n      var [rootView] = viewPort.viewPorts;\n      var rect = new RectElement(document, null);\n      rect.attributes.x = new Property(document, 'x', -MAX_VIRTUAL_PIXELS / 3.0);\n      rect.attributes.y = new Property(document, 'y', -MAX_VIRTUAL_PIXELS / 3.0);\n      rect.attributes.width = new Property(document, 'width', MAX_VIRTUAL_PIXELS);\n      rect.attributes.height = new Property(document, 'height', MAX_VIRTUAL_PIXELS);\n      var group = new GElement(document, null);\n      group.attributes.transform = new Property(document, 'transform', this.getAttribute('gradientTransform').getValue());\n      group.children = [rect];\n      var patternSvg = new SVGElement(document, null);\n      patternSvg.attributes.x = new Property(document, 'x', 0);\n      patternSvg.attributes.y = new Property(document, 'y', 0);\n      patternSvg.attributes.width = new Property(document, 'width', rootView.width);\n      patternSvg.attributes.height = new Property(document, 'height', rootView.height);\n      patternSvg.children = [group];\n      var patternCanvas = document.createCanvas(rootView.width, rootView.height);\n      var patternCtx = patternCanvas.getContext('2d');\n      patternCtx.fillStyle = gradient;\n      patternSvg.render(patternCtx);\n      return patternCtx.createPattern(patternCanvas, 'no-repeat');\n    }\n    return gradient;\n  }\n  inheritStopContainer(stopsContainer) {\n    this.attributesToInherit.forEach(attributeToInherit => {\n      if (!this.getAttribute(attributeToInherit).hasValue() && stopsContainer.getAttribute(attributeToInherit).hasValue()) {\n        this.getAttribute(attributeToInherit, true).setValue(stopsContainer.getAttribute(attributeToInherit).getValue());\n      }\n    });\n  }\n  addParentOpacity(parentOpacityProp, color) {\n    if (parentOpacityProp.hasValue()) {\n      var colorProp = new Property(this.document, 'color', color);\n      return colorProp.addOpacity(parentOpacityProp).getColor();\n    }\n    return color;\n  }\n}\nclass LinearGradientElement extends GradientElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'linearGradient';\n    this.attributesToInherit.push('x1', 'y1', 'x2', 'y2');\n  }\n  getGradient(ctx, element) {\n    var isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox';\n    var boundingBox = isBoundingBoxUnits ? element.getBoundingBox(ctx) : null;\n    if (isBoundingBoxUnits && !boundingBox) {\n      return null;\n    }\n    if (!this.getAttribute('x1').hasValue() && !this.getAttribute('y1').hasValue() && !this.getAttribute('x2').hasValue() && !this.getAttribute('y2').hasValue()) {\n      this.getAttribute('x1', true).setValue(0);\n      this.getAttribute('y1', true).setValue(0);\n      this.getAttribute('x2', true).setValue(1);\n      this.getAttribute('y2', true).setValue(0);\n    }\n    var x1 = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('x1').getNumber() : this.getAttribute('x1').getPixels('x');\n    var y1 = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('y1').getNumber() : this.getAttribute('y1').getPixels('y');\n    var x2 = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('x2').getNumber() : this.getAttribute('x2').getPixels('x');\n    var y2 = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('y2').getNumber() : this.getAttribute('y2').getPixels('y');\n    if (x1 === x2 && y1 === y2) {\n      return null;\n    }\n    return ctx.createLinearGradient(x1, y1, x2, y2);\n  }\n}\nclass RadialGradientElement extends GradientElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'radialGradient';\n    this.attributesToInherit.push('cx', 'cy', 'r', 'fx', 'fy', 'fr');\n  }\n  getGradient(ctx, element) {\n    var isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox';\n    var boundingBox = element.getBoundingBox(ctx);\n    if (isBoundingBoxUnits && !boundingBox) {\n      return null;\n    }\n    if (!this.getAttribute('cx').hasValue()) {\n      this.getAttribute('cx', true).setValue('50%');\n    }\n    if (!this.getAttribute('cy').hasValue()) {\n      this.getAttribute('cy', true).setValue('50%');\n    }\n    if (!this.getAttribute('r').hasValue()) {\n      this.getAttribute('r', true).setValue('50%');\n    }\n    var cx = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('cx').getNumber() : this.getAttribute('cx').getPixels('x');\n    var cy = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('cy').getNumber() : this.getAttribute('cy').getPixels('y');\n    var fx = cx;\n    var fy = cy;\n    if (this.getAttribute('fx').hasValue()) {\n      fx = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('fx').getNumber() : this.getAttribute('fx').getPixels('x');\n    }\n    if (this.getAttribute('fy').hasValue()) {\n      fy = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('fy').getNumber() : this.getAttribute('fy').getPixels('y');\n    }\n    var r = isBoundingBoxUnits ? (boundingBox.width + boundingBox.height) / 2.0 * this.getAttribute('r').getNumber() : this.getAttribute('r').getPixels();\n    var fr = this.getAttribute('fr').getPixels();\n    return ctx.createRadialGradient(fx, fy, fr, cx, cy, r);\n  }\n}\nclass StopElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'stop';\n    var offset = Math.max(0, Math.min(1, this.getAttribute('offset').getNumber()));\n    var stopOpacity = this.getStyle('stop-opacity');\n    var stopColor = this.getStyle('stop-color', true);\n    if (stopColor.getString() === '') {\n      stopColor.setValue('#000');\n    }\n    if (stopOpacity.hasValue()) {\n      stopColor = stopColor.addOpacity(stopOpacity);\n    }\n    this.offset = offset;\n    this.color = stopColor.getColor();\n  }\n}\nclass AnimateElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'animate';\n    this.duration = 0;\n    this.initialValue = null;\n    this.initialUnits = '';\n    this.removed = false;\n    this.frozen = false;\n    document.screen.animations.push(this);\n    this.begin = this.getAttribute('begin').getMilliseconds();\n    this.maxDuration = this.begin + this.getAttribute('dur').getMilliseconds();\n    this.from = this.getAttribute('from');\n    this.to = this.getAttribute('to');\n    this.values = new Property(document, 'values', null);\n    var valuesAttr = this.getAttribute('values');\n    if (valuesAttr.hasValue()) {\n      this.values.setValue(valuesAttr.getString().split(';'));\n    }\n  }\n  getProperty() {\n    var attributeType = this.getAttribute('attributeType').getString();\n    var attributeName = this.getAttribute('attributeName').getString();\n    if (attributeType === 'CSS') {\n      return this.parent.getStyle(attributeName, true);\n    }\n    return this.parent.getAttribute(attributeName, true);\n  }\n  calcValue() {\n    var {\n      initialUnits\n    } = this;\n    var {\n      progress,\n      from,\n      to\n    } = this.getProgress(); // tween value linearly\n\n    var newValue = from.getNumber() + (to.getNumber() - from.getNumber()) * progress;\n    if (initialUnits === '%') {\n      newValue *= 100.0; // numValue() returns 0-1 whereas properties are 0-100\n    }\n    return \"\".concat(newValue).concat(initialUnits);\n  }\n  update(delta) {\n    var {\n      parent\n    } = this;\n    var prop = this.getProperty(); // set initial value\n\n    if (!this.initialValue) {\n      this.initialValue = prop.getString();\n      this.initialUnits = prop.getUnits();\n    } // if we're past the end time\n\n    if (this.duration > this.maxDuration) {\n      var fill = this.getAttribute('fill').getString('remove'); // loop for indefinitely repeating animations\n\n      if (this.getAttribute('repeatCount').getString() === 'indefinite' || this.getAttribute('repeatDur').getString() === 'indefinite') {\n        this.duration = 0;\n      } else if (fill === 'freeze' && !this.frozen) {\n        this.frozen = true;\n        parent.animationFrozen = true;\n        parent.animationFrozenValue = prop.getString();\n      } else if (fill === 'remove' && !this.removed) {\n        this.removed = true;\n        prop.setValue(parent.animationFrozen ? parent.animationFrozenValue : this.initialValue);\n        return true;\n      }\n      return false;\n    }\n    this.duration += delta; // if we're past the begin time\n\n    var updated = false;\n    if (this.begin < this.duration) {\n      var newValue = this.calcValue(); // tween\n\n      var typeAttr = this.getAttribute('type');\n      if (typeAttr.hasValue()) {\n        // for transform, etc.\n        var type = typeAttr.getString();\n        newValue = \"\".concat(type, \"(\").concat(newValue, \")\");\n      }\n      prop.setValue(newValue);\n      updated = true;\n    }\n    return updated;\n  }\n  getProgress() {\n    var {\n      document,\n      values\n    } = this;\n    var result = {\n      progress: (this.duration - this.begin) / (this.maxDuration - this.begin)\n    };\n    if (values.hasValue()) {\n      var p = result.progress * (values.getValue().length - 1);\n      var lb = Math.floor(p);\n      var ub = Math.ceil(p);\n      result.from = new Property(document, 'from', parseFloat(values.getValue()[lb]));\n      result.to = new Property(document, 'to', parseFloat(values.getValue()[ub]));\n      result.progress = (p - lb) / (ub - lb);\n    } else {\n      result.from = this.from;\n      result.to = this.to;\n    }\n    return result;\n  }\n}\nclass AnimateColorElement extends AnimateElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'animateColor';\n  }\n  calcValue() {\n    var {\n      progress,\n      from,\n      to\n    } = this.getProgress();\n    var colorFrom = new RGBColor(from.getColor());\n    var colorTo = new RGBColor(to.getColor());\n    if (colorFrom.ok && colorTo.ok) {\n      // tween color linearly\n      var r = colorFrom.r + (colorTo.r - colorFrom.r) * progress;\n      var g = colorFrom.g + (colorTo.g - colorFrom.g) * progress;\n      var b = colorFrom.b + (colorTo.b - colorFrom.b) * progress; // ? alpha\n\n      return \"rgb(\".concat(Math.floor(r), \", \").concat(Math.floor(g), \", \").concat(Math.floor(b), \")\");\n    }\n    return this.getAttribute('from').getColor();\n  }\n}\nclass AnimateTransformElement extends AnimateElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'animateTransform';\n  }\n  calcValue() {\n    var {\n      progress,\n      from,\n      to\n    } = this.getProgress(); // tween value linearly\n\n    var transformFrom = toNumbers(from.getString());\n    var transformTo = toNumbers(to.getString());\n    var newValue = transformFrom.map((from, i) => {\n      var to = transformTo[i];\n      return from + (to - from) * progress;\n    }).join(' ');\n    return newValue;\n  }\n}\nclass FontElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'font';\n    this.glyphs = {};\n    this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber();\n    var {\n      definitions\n    } = document;\n    var {\n      children\n    } = this;\n    for (var child of children) {\n      switch (child.type) {\n        case 'font-face':\n          {\n            this.fontFace = child;\n            var fontFamilyStyle = child.getStyle('font-family');\n            if (fontFamilyStyle.hasValue()) {\n              definitions[fontFamilyStyle.getString()] = this;\n            }\n            break;\n          }\n        case 'missing-glyph':\n          this.missingGlyph = child;\n          break;\n        case 'glyph':\n          {\n            var glyph = child;\n            if (glyph.arabicForm) {\n              this.isRTL = true;\n              this.isArabic = true;\n              if (typeof this.glyphs[glyph.unicode] === 'undefined') {\n                this.glyphs[glyph.unicode] = {};\n              }\n              this.glyphs[glyph.unicode][glyph.arabicForm] = glyph;\n            } else {\n              this.glyphs[glyph.unicode] = glyph;\n            }\n            break;\n          }\n      }\n    }\n  }\n  render() {// NO RENDER\n  }\n}\nclass FontFaceElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'font-face';\n    this.ascent = this.getAttribute('ascent').getNumber();\n    this.descent = this.getAttribute('descent').getNumber();\n    this.unitsPerEm = this.getAttribute('units-per-em').getNumber();\n  }\n}\nclass MissingGlyphElement extends PathElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'missing-glyph';\n    this.horizAdvX = 0;\n  }\n}\nclass TRefElement extends TextElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'tref';\n  }\n  getText() {\n    var element = this.getHrefAttribute().getDefinition();\n    if (element) {\n      var firstChild = element.children[0];\n      if (firstChild) {\n        return firstChild.getText();\n      }\n    }\n    return '';\n  }\n}\nclass AElement extends TextElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'a';\n    var {\n      childNodes\n    } = node;\n    var firstChild = childNodes[0];\n    var hasText = childNodes.length > 0 && Array.from(childNodes).every(node => node.nodeType === 3);\n    this.hasText = hasText;\n    this.text = hasText ? this.getTextFromNode(firstChild) : '';\n  }\n  getText() {\n    return this.text;\n  }\n  renderChildren(ctx) {\n    if (this.hasText) {\n      // render as text element\n      super.renderChildren(ctx);\n      var {\n        document,\n        x,\n        y\n      } = this;\n      var {\n        mouse\n      } = document.screen;\n      var fontSize = new Property(document, 'fontSize', Font.parse(document.ctx.font).fontSize); // Do not calc bounding box if mouse is not working.\n\n      if (mouse.isWorking()) {\n        mouse.checkBoundingBox(this, new BoundingBox(x, y - fontSize.getPixels('y'), x + this.measureText(ctx), y));\n      }\n    } else if (this.children.length > 0) {\n      // render as temporary group\n      var g = new GElement(this.document, null);\n      g.children = this.children;\n      g.parent = this;\n      g.render(ctx);\n    }\n  }\n  onClick() {\n    var {\n      window\n    } = this.document;\n    if (window) {\n      window.open(this.getHrefAttribute().getString());\n    }\n  }\n  onMouseMove() {\n    var ctx = this.document.ctx;\n    ctx.canvas.style.cursor = 'pointer';\n  }\n}\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$2(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nclass TextPathElement extends TextElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'textPath';\n    this.textWidth = 0;\n    this.textHeight = 0;\n    this.pathLength = -1;\n    this.glyphInfo = null;\n    this.letterSpacingCache = [];\n    this.measuresCache = new Map([['', 0]]);\n    var pathElement = this.getHrefAttribute().getDefinition();\n    this.text = this.getTextFromNode();\n    this.dataArray = this.parsePathData(pathElement);\n  }\n  getText() {\n    return this.text;\n  }\n  path(ctx) {\n    var {\n      dataArray\n    } = this;\n    if (ctx) {\n      ctx.beginPath();\n    }\n    dataArray.forEach(_ref => {\n      var {\n        type,\n        points\n      } = _ref;\n      switch (type) {\n        case PathParser.LINE_TO:\n          if (ctx) {\n            ctx.lineTo(points[0], points[1]);\n          }\n          break;\n        case PathParser.MOVE_TO:\n          if (ctx) {\n            ctx.moveTo(points[0], points[1]);\n          }\n          break;\n        case PathParser.CURVE_TO:\n          if (ctx) {\n            ctx.bezierCurveTo(points[0], points[1], points[2], points[3], points[4], points[5]);\n          }\n          break;\n        case PathParser.QUAD_TO:\n          if (ctx) {\n            ctx.quadraticCurveTo(points[0], points[1], points[2], points[3]);\n          }\n          break;\n        case PathParser.ARC:\n          {\n            var [cx, cy, rx, ry, theta, dTheta, psi, fs] = points;\n            var r = rx > ry ? rx : ry;\n            var scaleX = rx > ry ? 1 : rx / ry;\n            var scaleY = rx > ry ? ry / rx : 1;\n            if (ctx) {\n              ctx.translate(cx, cy);\n              ctx.rotate(psi);\n              ctx.scale(scaleX, scaleY);\n              ctx.arc(0, 0, r, theta, theta + dTheta, Boolean(1 - fs));\n              ctx.scale(1 / scaleX, 1 / scaleY);\n              ctx.rotate(-psi);\n              ctx.translate(-cx, -cy);\n            }\n            break;\n          }\n        case PathParser.CLOSE_PATH:\n          if (ctx) {\n            ctx.closePath();\n          }\n          break;\n      }\n    });\n  }\n  renderChildren(ctx) {\n    this.setTextData(ctx);\n    ctx.save();\n    var textDecoration = this.parent.getStyle('text-decoration').getString();\n    var fontSize = this.getFontSize();\n    var {\n      glyphInfo\n    } = this;\n    var fill = ctx.fillStyle;\n    if (textDecoration === 'underline') {\n      ctx.beginPath();\n    }\n    glyphInfo.forEach((glyph, i) => {\n      var {\n        p0,\n        p1,\n        rotation,\n        text: partialText\n      } = glyph;\n      ctx.save();\n      ctx.translate(p0.x, p0.y);\n      ctx.rotate(rotation);\n      if (ctx.fillStyle) {\n        ctx.fillText(partialText, 0, 0);\n      }\n      if (ctx.strokeStyle) {\n        ctx.strokeText(partialText, 0, 0);\n      }\n      ctx.restore();\n      if (textDecoration === 'underline') {\n        if (i === 0) {\n          ctx.moveTo(p0.x, p0.y + fontSize / 8);\n        }\n        ctx.lineTo(p1.x, p1.y + fontSize / 5);\n      } // // To assist with debugging visually, uncomment following\n      //\n      // ctx.beginPath();\n      // if (i % 2)\n      // \tctx.strokeStyle = 'red';\n      // else\n      // \tctx.strokeStyle = 'green';\n      // ctx.moveTo(p0.x, p0.y);\n      // ctx.lineTo(p1.x, p1.y);\n      // ctx.stroke();\n      // ctx.closePath();\n    });\n    if (textDecoration === 'underline') {\n      ctx.lineWidth = fontSize / 20;\n      ctx.strokeStyle = fill;\n      ctx.stroke();\n      ctx.closePath();\n    }\n    ctx.restore();\n  }\n  getLetterSpacingAt() {\n    var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return this.letterSpacingCache[idx] || 0;\n  }\n  findSegmentToFitChar(ctx, anchor, textFullWidth, fullPathWidth, spacesNumber, inputOffset, dy, c, charI) {\n    var offset = inputOffset;\n    var glyphWidth = this.measureText(ctx, c);\n    if (c === ' ' && anchor === 'justify' && textFullWidth < fullPathWidth) {\n      glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n    }\n    if (charI > -1) {\n      offset += this.getLetterSpacingAt(charI);\n    }\n    var splineStep = this.textHeight / 20;\n    var p0 = this.getEquidistantPointOnPath(offset, splineStep, 0);\n    var p1 = this.getEquidistantPointOnPath(offset + glyphWidth, splineStep, 0);\n    var segment = {\n      p0,\n      p1\n    };\n    var rotation = p0 && p1 ? Math.atan2(p1.y - p0.y, p1.x - p0.x) : 0;\n    if (dy) {\n      var dyX = Math.cos(Math.PI / 2 + rotation) * dy;\n      var dyY = Math.cos(-rotation) * dy;\n      segment.p0 = _objectSpread$2(_objectSpread$2({}, p0), {}, {\n        x: p0.x + dyX,\n        y: p0.y + dyY\n      });\n      segment.p1 = _objectSpread$2(_objectSpread$2({}, p1), {}, {\n        x: p1.x + dyX,\n        y: p1.y + dyY\n      });\n    }\n    offset += glyphWidth;\n    return {\n      offset,\n      segment,\n      rotation\n    };\n  }\n  measureText(ctx, text) {\n    var {\n      measuresCache\n    } = this;\n    var targetText = text || this.getText();\n    if (measuresCache.has(targetText)) {\n      return measuresCache.get(targetText);\n    }\n    var measure = this.measureTargetText(ctx, targetText);\n    measuresCache.set(targetText, measure);\n    return measure;\n  } // This method supposes what all custom fonts already loaded.\n  // If some font will be loaded after this method call, <textPath> will not be rendered correctly.\n  // You need to call this method manually to update glyphs cache.\n\n  setTextData(ctx) {\n    if (this.glyphInfo) {\n      return;\n    }\n    var renderText = this.getText();\n    var chars = renderText.split('');\n    var spacesNumber = renderText.split(' ').length - 1;\n    var dx = this.parent.getAttribute('dx').split().map(_ => _.getPixels('x'));\n    var dy = this.parent.getAttribute('dy').getPixels('y');\n    var anchor = this.parent.getStyle('text-anchor').getString('start');\n    var thisSpacing = this.getStyle('letter-spacing');\n    var parentSpacing = this.parent.getStyle('letter-spacing');\n    var letterSpacing = 0;\n    if (!thisSpacing.hasValue() || thisSpacing.getValue() === 'inherit') {\n      letterSpacing = parentSpacing.getPixels();\n    } else if (thisSpacing.hasValue()) {\n      if (thisSpacing.getValue() !== 'initial' && thisSpacing.getValue() !== 'unset') {\n        letterSpacing = thisSpacing.getPixels();\n      }\n    } // fill letter-spacing cache\n\n    var letterSpacingCache = [];\n    var textLen = renderText.length;\n    this.letterSpacingCache = letterSpacingCache;\n    for (var i = 0; i < textLen; i++) {\n      letterSpacingCache.push(typeof dx[i] !== 'undefined' ? dx[i] : letterSpacing);\n    }\n    var dxSum = letterSpacingCache.reduce((acc, cur, i) => i === 0 ? 0 : acc + cur || 0, 0);\n    var textWidth = this.measureText(ctx);\n    var textFullWidth = Math.max(textWidth + dxSum, 0);\n    this.textWidth = textWidth;\n    this.textHeight = this.getFontSize();\n    this.glyphInfo = [];\n    var fullPathWidth = this.getPathLength();\n    var startOffset = this.getStyle('startOffset').getNumber(0) * fullPathWidth;\n    var offset = 0;\n    if (anchor === 'middle' || anchor === 'center') {\n      offset = -textFullWidth / 2;\n    }\n    if (anchor === 'end' || anchor === 'right') {\n      offset = -textFullWidth;\n    }\n    offset += startOffset;\n    chars.forEach((char, i) => {\n      // Find such segment what distance between p0 and p1 is approx. width of glyph\n      var {\n        offset: nextOffset,\n        segment,\n        rotation\n      } = this.findSegmentToFitChar(ctx, anchor, textFullWidth, fullPathWidth, spacesNumber, offset, dy, char, i);\n      offset = nextOffset;\n      if (!segment.p0 || !segment.p1) {\n        return;\n      } // const width = this.getLineLength(\n      // \tsegment.p0.x,\n      // \tsegment.p0.y,\n      // \tsegment.p1.x,\n      // \tsegment.p1.y\n      // );\n      // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.\n      // Can foresee having a rough pair table built in that the developer can override as needed.\n      // Or use \"dx\" attribute of the <text> node as a naive replacement\n      // const kern = 0;\n      // placeholder for future implementation\n      // const midpoint = this.getPointOnLine(\n      // \tkern + width / 2.0,\n      // \tsegment.p0.x, segment.p0.y, segment.p1.x, segment.p1.y\n      // );\n\n      this.glyphInfo.push({\n        // transposeX: midpoint.x,\n        // transposeY: midpoint.y,\n        text: chars[i],\n        p0: segment.p0,\n        p1: segment.p1,\n        rotation\n      });\n    });\n  }\n  parsePathData(path) {\n    this.pathLength = -1; // reset path length\n\n    if (!path) {\n      return [];\n    }\n    var pathCommands = [];\n    var {\n      pathParser\n    } = path;\n    pathParser.reset(); // convert l, H, h, V, and v to L\n\n    while (!pathParser.isEnd()) {\n      var {\n        current\n      } = pathParser;\n      var startX = current ? current.x : 0;\n      var startY = current ? current.y : 0;\n      var command = pathParser.next();\n      var nextCommandType = command.type;\n      var points = [];\n      switch (command.type) {\n        case PathParser.MOVE_TO:\n          this.pathM(pathParser, points);\n          break;\n        case PathParser.LINE_TO:\n          nextCommandType = this.pathL(pathParser, points);\n          break;\n        case PathParser.HORIZ_LINE_TO:\n          nextCommandType = this.pathH(pathParser, points);\n          break;\n        case PathParser.VERT_LINE_TO:\n          nextCommandType = this.pathV(pathParser, points);\n          break;\n        case PathParser.CURVE_TO:\n          this.pathC(pathParser, points);\n          break;\n        case PathParser.SMOOTH_CURVE_TO:\n          nextCommandType = this.pathS(pathParser, points);\n          break;\n        case PathParser.QUAD_TO:\n          this.pathQ(pathParser, points);\n          break;\n        case PathParser.SMOOTH_QUAD_TO:\n          nextCommandType = this.pathT(pathParser, points);\n          break;\n        case PathParser.ARC:\n          points = this.pathA(pathParser);\n          break;\n        case PathParser.CLOSE_PATH:\n          PathElement.pathZ(pathParser);\n          break;\n      }\n      if (command.type !== PathParser.CLOSE_PATH) {\n        pathCommands.push({\n          type: nextCommandType,\n          points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, nextCommandType, points)\n        });\n      } else {\n        pathCommands.push({\n          type: PathParser.CLOSE_PATH,\n          points: [],\n          pathLength: 0\n        });\n      }\n    }\n    return pathCommands;\n  }\n  pathM(pathParser, points) {\n    var {\n      x,\n      y\n    } = PathElement.pathM(pathParser).point;\n    points.push(x, y);\n  }\n  pathL(pathParser, points) {\n    var {\n      x,\n      y\n    } = PathElement.pathL(pathParser).point;\n    points.push(x, y);\n    return PathParser.LINE_TO;\n  }\n  pathH(pathParser, points) {\n    var {\n      x,\n      y\n    } = PathElement.pathH(pathParser).point;\n    points.push(x, y);\n    return PathParser.LINE_TO;\n  }\n  pathV(pathParser, points) {\n    var {\n      x,\n      y\n    } = PathElement.pathV(pathParser).point;\n    points.push(x, y);\n    return PathParser.LINE_TO;\n  }\n  pathC(pathParser, points) {\n    var {\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathC(pathParser);\n    points.push(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n  }\n  pathS(pathParser, points) {\n    var {\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathS(pathParser);\n    points.push(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    return PathParser.CURVE_TO;\n  }\n  pathQ(pathParser, points) {\n    var {\n      controlPoint,\n      currentPoint\n    } = PathElement.pathQ(pathParser);\n    points.push(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n  }\n  pathT(pathParser, points) {\n    var {\n      controlPoint,\n      currentPoint\n    } = PathElement.pathT(pathParser);\n    points.push(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    return PathParser.QUAD_TO;\n  }\n  pathA(pathParser) {\n    var {\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    } = PathElement.pathA(pathParser);\n    if (sweepFlag === 0 && ad > 0) {\n      ad -= 2 * Math.PI;\n    }\n    if (sweepFlag === 1 && ad < 0) {\n      ad += 2 * Math.PI;\n    }\n    return [centp.x, centp.y, rX, rY, a1, ad, xAxisRotation, sweepFlag];\n  }\n  calcLength(x, y, commandType, points) {\n    var len = 0;\n    var p1 = null;\n    var p2 = null;\n    var t = 0;\n    switch (commandType) {\n      case PathParser.LINE_TO:\n        return this.getLineLength(x, y, points[0], points[1]);\n      case PathParser.CURVE_TO:\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = this.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = this.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n          len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case PathParser.QUAD_TO:\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = this.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = this.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n          len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case PathParser.ARC:\n        {\n          // Approximates by breaking curve into line segments\n          len = 0.0;\n          var start = points[4]; // 4 = theta\n\n          var dTheta = points[5]; // 5 = dTheta\n\n          var end = points[4] + dTheta;\n          var inc = Math.PI / 180.0; // 1 degree resolution\n\n          if (Math.abs(start - end) < inc) {\n            inc = Math.abs(start - end);\n          } // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n\n          p1 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n          if (dTheta < 0) {\n            // clockwise\n            for (t = start - inc; t > end; t -= inc) {\n              p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n              len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n              p1 = p2;\n            }\n          } else {\n            // counter-clockwise\n            for (t = start + inc; t < end; t += inc) {\n              p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n              len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n              p1 = p2;\n            }\n          }\n          p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n          len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          return len;\n        }\n    }\n    return 0;\n  }\n  getPointOnLine(dist, p1x, p1y, p2x, p2y) {\n    var fromX = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : p1x;\n    var fromY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : p1y;\n    var m = (p2y - p1y) / (p2x - p1x + PSEUDO_ZERO);\n    var run = Math.sqrt(dist * dist / (1 + m * m));\n    if (p2x < p1x) {\n      run *= -1;\n    }\n    var rise = m * run;\n    var pt = null;\n    if (p2x === p1x) {\n      // vertical line\n      pt = {\n        x: fromX,\n        y: fromY + rise\n      };\n    } else if ((fromY - p1y) / (fromX - p1x + PSEUDO_ZERO) === m) {\n      pt = {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    } else {\n      var ix = 0;\n      var iy = 0;\n      var len = this.getLineLength(p1x, p1y, p2x, p2y);\n      if (len < PSEUDO_ZERO) {\n        return null;\n      }\n      var u = (fromX - p1x) * (p2x - p1x) + (fromY - p1y) * (p2y - p1y);\n      u /= len * len;\n      ix = p1x + u * (p2x - p1x);\n      iy = p1y + u * (p2y - p1y);\n      var pRise = this.getLineLength(fromX, fromY, ix, iy);\n      var pRun = Math.sqrt(dist * dist - pRise * pRise);\n      run = Math.sqrt(pRun * pRun / (1 + m * m));\n      if (p2x < p1x) {\n        run *= -1;\n      }\n      rise = m * run;\n      pt = {\n        x: ix + run,\n        y: iy + rise\n      };\n    }\n    return pt;\n  }\n  getPointOnPath(distance) {\n    var fullLen = this.getPathLength();\n    var cumulativePathLength = 0;\n    var p = null;\n    if (distance < -0.00005 || distance - 0.00005 > fullLen) {\n      return null;\n    }\n    var {\n      dataArray\n    } = this;\n    for (var command of dataArray) {\n      if (command && (command.pathLength < 0.00005 || cumulativePathLength + command.pathLength + 0.00005 < distance)) {\n        cumulativePathLength += command.pathLength;\n        continue;\n      }\n      var delta = distance - cumulativePathLength;\n      var currentT = 0;\n      switch (command.type) {\n        case PathParser.LINE_TO:\n          p = this.getPointOnLine(delta, command.start.x, command.start.y, command.points[0], command.points[1], command.start.x, command.start.y);\n          break;\n        case PathParser.ARC:\n          {\n            var start = command.points[4]; // 4 = theta\n\n            var dTheta = command.points[5]; // 5 = dTheta\n\n            var end = command.points[4] + dTheta;\n            currentT = start + delta / command.pathLength * dTheta;\n            if (dTheta < 0 && currentT < end || dTheta >= 0 && currentT > end) {\n              break;\n            }\n            p = this.getPointOnEllipticalArc(command.points[0], command.points[1], command.points[2], command.points[3], currentT, command.points[6]);\n            break;\n          }\n        case PathParser.CURVE_TO:\n          currentT = delta / command.pathLength;\n          if (currentT > 1) {\n            currentT = 1;\n          }\n          p = this.getPointOnCubicBezier(currentT, command.start.x, command.start.y, command.points[0], command.points[1], command.points[2], command.points[3], command.points[4], command.points[5]);\n          break;\n        case PathParser.QUAD_TO:\n          currentT = delta / command.pathLength;\n          if (currentT > 1) {\n            currentT = 1;\n          }\n          p = this.getPointOnQuadraticBezier(currentT, command.start.x, command.start.y, command.points[0], command.points[1], command.points[2], command.points[3]);\n          break;\n      }\n      if (p) {\n        return p;\n      }\n      break;\n    }\n    return null;\n  }\n  getLineLength(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  getPathLength() {\n    if (this.pathLength === -1) {\n      this.pathLength = this.dataArray.reduce((length, command) => command.pathLength > 0 ? length + command.pathLength : length, 0);\n    }\n    return this.pathLength;\n  }\n  getPointOnCubicBezier(pct, p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\n    var x = p4x * CB1(pct) + p3x * CB2(pct) + p2x * CB3(pct) + p1x * CB4(pct);\n    var y = p4y * CB1(pct) + p3y * CB2(pct) + p2y * CB3(pct) + p1y * CB4(pct);\n    return {\n      x,\n      y\n    };\n  }\n  getPointOnQuadraticBezier(pct, p1x, p1y, p2x, p2y, p3x, p3y) {\n    var x = p3x * QB1(pct) + p2x * QB2(pct) + p1x * QB3(pct);\n    var y = p3y * QB1(pct) + p2y * QB2(pct) + p1y * QB3(pct);\n    return {\n      x,\n      y\n    };\n  }\n  getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n    var cosPsi = Math.cos(psi);\n    var sinPsi = Math.sin(psi);\n    var pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  } // TODO need some optimisations. possibly build cache only for curved segments?\n\n  buildEquidistantCache(inputStep, inputPrecision) {\n    var fullLen = this.getPathLength();\n    var precision = inputPrecision || 0.25; // accuracy vs performance\n\n    var step = inputStep || fullLen / 100;\n    if (!this.equidistantCache || this.equidistantCache.step !== step || this.equidistantCache.precision !== precision) {\n      // Prepare cache\n      this.equidistantCache = {\n        step,\n        precision,\n        points: []\n      }; // Calculate points\n\n      var s = 0;\n      for (var l = 0; l <= fullLen; l += precision) {\n        var p0 = this.getPointOnPath(l);\n        var p1 = this.getPointOnPath(l + precision);\n        if (!p0 || !p1) {\n          continue;\n        }\n        s += this.getLineLength(p0.x, p0.y, p1.x, p1.y);\n        if (s >= step) {\n          this.equidistantCache.points.push({\n            x: p0.x,\n            y: p0.y,\n            distance: l\n          });\n          s -= step;\n        }\n      }\n    }\n  }\n  getEquidistantPointOnPath(targetDistance, step, precision) {\n    this.buildEquidistantCache(step, precision);\n    if (targetDistance < 0 || targetDistance - this.getPathLength() > 0.00005) {\n      return null;\n    }\n    var idx = Math.round(targetDistance / this.getPathLength() * (this.equidistantCache.points.length - 1));\n    return this.equidistantCache.points[idx] || null;\n  }\n}\nvar dataUriRegex = /^\\s*data:(([^/,;]+\\/[^/,;]+)(?:;([^,;=]+=[^,;=]+))?)?(?:;(base64))?,(.*)$/i;\nclass ImageElement extends RenderedElement {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'image';\n    this.loaded = false;\n    var href = this.getHrefAttribute().getString();\n    if (!href) {\n      return;\n    }\n    var isSvg = href.endsWith('.svg') || /^\\s*data:image\\/svg\\+xml/i.test(href);\n    document.images.push(this);\n    if (!isSvg) {\n      void this.loadImage(href);\n    } else {\n      void this.loadSvg(href);\n    }\n    this.isSvg = isSvg;\n  }\n  loadImage(href) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        var image = yield _this.document.createImage(href);\n        _this.image = image;\n      } catch (err) {\n        console.error(\"Error while loading image \\\"\".concat(href, \"\\\":\"), err);\n      }\n      _this.loaded = true;\n    })();\n  }\n  loadSvg(href) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var match = dataUriRegex.exec(href);\n      if (match) {\n        var data = match[5];\n        if (match[4] === 'base64') {\n          _this2.image = atob(data);\n        } else {\n          _this2.image = decodeURIComponent(data);\n        }\n      } else {\n        try {\n          var response = yield _this2.document.fetch(href);\n          var svg = yield response.text();\n          _this2.image = svg;\n        } catch (err) {\n          console.error(\"Error while loading image \\\"\".concat(href, \"\\\":\"), err);\n        }\n      }\n      _this2.loaded = true;\n    })();\n  }\n  renderChildren(ctx) {\n    var {\n      document,\n      image,\n      loaded\n    } = this;\n    var x = this.getAttribute('x').getPixels('x');\n    var y = this.getAttribute('y').getPixels('y');\n    var width = this.getStyle('width').getPixels('x');\n    var height = this.getStyle('height').getPixels('y');\n    if (!loaded || !image || !width || !height) {\n      return;\n    }\n    ctx.save();\n    ctx.translate(x, y);\n    if (this.isSvg) {\n      var subDocument = document.canvg.forkString(ctx, this.image, {\n        ignoreMouse: true,\n        ignoreAnimation: true,\n        ignoreDimensions: true,\n        ignoreClear: true,\n        offsetX: 0,\n        offsetY: 0,\n        scaleWidth: width,\n        scaleHeight: height\n      });\n      subDocument.document.documentElement.parent = this;\n      void subDocument.render();\n    } else {\n      var _image = this.image;\n      document.setViewBox({\n        ctx,\n        aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n        width,\n        desiredWidth: _image.width,\n        height,\n        desiredHeight: _image.height\n      });\n      if (this.loaded) {\n        if (typeof _image.complete === 'undefined' || _image.complete) {\n          ctx.drawImage(_image, 0, 0);\n        }\n      }\n    }\n    ctx.restore();\n  }\n  getBoundingBox() {\n    var x = this.getAttribute('x').getPixels('x');\n    var y = this.getAttribute('y').getPixels('y');\n    var width = this.getStyle('width').getPixels('x');\n    var height = this.getStyle('height').getPixels('y');\n    return new BoundingBox(x, y, x + width, y + height);\n  }\n}\nclass SymbolElement extends RenderedElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'symbol';\n  }\n  render(_) {// NO RENDER\n  }\n}\nclass SVGFontLoader {\n  constructor(document) {\n    this.document = document;\n    this.loaded = false;\n    document.fonts.push(this);\n  }\n  load(fontFamily, url) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        var {\n          document\n        } = _this;\n        var svgDocument = yield document.canvg.parser.load(url);\n        var fonts = svgDocument.getElementsByTagName('font');\n        Array.from(fonts).forEach(fontNode => {\n          var font = document.createElement(fontNode);\n          document.definitions[fontFamily] = font;\n        });\n      } catch (err) {\n        console.error(\"Error while loading font \\\"\".concat(url, \"\\\":\"), err);\n      }\n      _this.loaded = true;\n    })();\n  }\n}\nclass StyleElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'style';\n    var css = compressSpaces(Array.from(node.childNodes) // NEED TEST\n    .map(_ => _.textContent).join('').replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm, '') // remove comments\n    .replace(/@import.*;/g, '') // remove imports\n    );\n    var cssDefs = css.split('}');\n    cssDefs.forEach(_ => {\n      var def = _.trim();\n      if (!def) {\n        return;\n      }\n      var cssParts = def.split('{');\n      var cssClasses = cssParts[0].split(',');\n      var cssProps = cssParts[1].split(';');\n      cssClasses.forEach(_ => {\n        var cssClass = _.trim();\n        if (!cssClass) {\n          return;\n        }\n        var props = document.styles[cssClass] || {};\n        cssProps.forEach(cssProp => {\n          var prop = cssProp.indexOf(':');\n          var name = cssProp.substr(0, prop).trim();\n          var value = cssProp.substr(prop + 1, cssProp.length - prop).trim();\n          if (name && value) {\n            props[name] = new Property(document, name, value);\n          }\n        });\n        document.styles[cssClass] = props;\n        document.stylesSpecificity[cssClass] = getSelectorSpecificity(cssClass);\n        if (cssClass === '@font-face') {\n          //  && !nodeEnv\n          var fontFamily = props['font-family'].getString().replace(/\"|'/g, '');\n          var srcs = props.src.getString().split(',');\n          srcs.forEach(src => {\n            if (src.indexOf('format(\"svg\")') > 0) {\n              var url = parseExternalUrl(src);\n              if (url) {\n                void new SVGFontLoader(document).load(fontFamily, url);\n              }\n            }\n          });\n        }\n      });\n    });\n  }\n}\nStyleElement.parseExternalUrl = parseExternalUrl;\nclass UseElement extends RenderedElement {\n  constructor() {\n    super(...arguments);\n    this.type = 'use';\n  }\n  setContext(ctx) {\n    super.setContext(ctx);\n    var xAttr = this.getAttribute('x');\n    var yAttr = this.getAttribute('y');\n    if (xAttr.hasValue()) {\n      ctx.translate(xAttr.getPixels('x'), 0);\n    }\n    if (yAttr.hasValue()) {\n      ctx.translate(0, yAttr.getPixels('y'));\n    }\n  }\n  path(ctx) {\n    var {\n      element\n    } = this;\n    if (element) {\n      element.path(ctx);\n    }\n  }\n  renderChildren(ctx) {\n    var {\n      document,\n      element\n    } = this;\n    if (element) {\n      var tempSvg = element;\n      if (element.type === 'symbol') {\n        // render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)\n        tempSvg = new SVGElement(document, null);\n        tempSvg.attributes.viewBox = new Property(document, 'viewBox', element.getAttribute('viewBox').getString());\n        tempSvg.attributes.preserveAspectRatio = new Property(document, 'preserveAspectRatio', element.getAttribute('preserveAspectRatio').getString());\n        tempSvg.attributes.overflow = new Property(document, 'overflow', element.getAttribute('overflow').getString());\n        tempSvg.children = element.children; // element is still the parent of the children\n\n        element.styles.opacity = new Property(document, 'opacity', this.calculateOpacity());\n      }\n      if (tempSvg.type === 'svg') {\n        var widthStyle = this.getStyle('width', false, true);\n        var heightStyle = this.getStyle('height', false, true); // if symbol or svg, inherit width/height from me\n\n        if (widthStyle.hasValue()) {\n          tempSvg.attributes.width = new Property(document, 'width', widthStyle.getString());\n        }\n        if (heightStyle.hasValue()) {\n          tempSvg.attributes.height = new Property(document, 'height', heightStyle.getString());\n        }\n      }\n      var oldParent = tempSvg.parent;\n      tempSvg.parent = this;\n      tempSvg.render(ctx);\n      tempSvg.parent = oldParent;\n    }\n  }\n  getBoundingBox(ctx) {\n    var {\n      element\n    } = this;\n    if (element) {\n      return element.getBoundingBox(ctx);\n    }\n    return null;\n  }\n  elementTransform() {\n    var {\n      document,\n      element\n    } = this;\n    return Transform.fromElement(document, element);\n  }\n  get element() {\n    if (!this.cachedElement) {\n      this.cachedElement = this.getHrefAttribute().getDefinition();\n    }\n    return this.cachedElement;\n  }\n}\nfunction imGet(img, x, y, width, _height, rgba) {\n  return img[y * width * 4 + x * 4 + rgba];\n}\nfunction imSet(img, x, y, width, _height, rgba, val) {\n  img[y * width * 4 + x * 4 + rgba] = val;\n}\nfunction m(matrix, i, v) {\n  var mi = matrix[i];\n  return mi * v;\n}\nfunction c(a, m1, m2, m3) {\n  return m1 + Math.cos(a) * m2 + Math.sin(a) * m3;\n}\nclass FeColorMatrixElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'feColorMatrix';\n    var matrix = toNumbers(this.getAttribute('values').getString());\n    switch (this.getAttribute('type').getString('matrix')) {\n      // http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement\n      case 'saturate':\n        {\n          var s = matrix[0];\n          /* eslint-disable array-element-newline */\n\n          matrix = [0.213 + 0.787 * s, 0.715 - 0.715 * s, 0.072 - 0.072 * s, 0, 0, 0.213 - 0.213 * s, 0.715 + 0.285 * s, 0.072 - 0.072 * s, 0, 0, 0.213 - 0.213 * s, 0.715 - 0.715 * s, 0.072 + 0.928 * s, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n          /* eslint-enable array-element-newline */\n\n          break;\n        }\n      case 'hueRotate':\n        {\n          var a = matrix[0] * Math.PI / 180.0;\n          /* eslint-disable array-element-newline */\n\n          matrix = [c(a, 0.213, 0.787, -0.213), c(a, 0.715, -0.715, -0.715), c(a, 0.072, -0.072, 0.928), 0, 0, c(a, 0.213, -0.213, 0.143), c(a, 0.715, 0.285, 0.140), c(a, 0.072, -0.072, -0.283), 0, 0, c(a, 0.213, -0.213, -0.787), c(a, 0.715, -0.715, 0.715), c(a, 0.072, 0.928, 0.072), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\n          /* eslint-enable array-element-newline */\n\n          break;\n        }\n      case 'luminanceToAlpha':\n        /* eslint-disable array-element-newline */\n        matrix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2125, 0.7154, 0.0721, 0, 0, 0, 0, 0, 0, 1];\n        /* eslint-enable array-element-newline */\n\n        break;\n    }\n    this.matrix = matrix;\n    this.includeOpacity = this.getAttribute('includeOpacity').hasValue();\n  }\n  apply(ctx, _x, _y, width, height) {\n    // assuming x==0 && y==0 for now\n    var {\n      includeOpacity,\n      matrix\n    } = this;\n    var srcData = ctx.getImageData(0, 0, width, height);\n    for (var y = 0; y < height; y++) {\n      for (var x = 0; x < width; x++) {\n        var r = imGet(srcData.data, x, y, width, height, 0);\n        var g = imGet(srcData.data, x, y, width, height, 1);\n        var b = imGet(srcData.data, x, y, width, height, 2);\n        var a = imGet(srcData.data, x, y, width, height, 3);\n        var nr = m(matrix, 0, r) + m(matrix, 1, g) + m(matrix, 2, b) + m(matrix, 3, a) + m(matrix, 4, 1);\n        var ng = m(matrix, 5, r) + m(matrix, 6, g) + m(matrix, 7, b) + m(matrix, 8, a) + m(matrix, 9, 1);\n        var nb = m(matrix, 10, r) + m(matrix, 11, g) + m(matrix, 12, b) + m(matrix, 13, a) + m(matrix, 14, 1);\n        var na = m(matrix, 15, r) + m(matrix, 16, g) + m(matrix, 17, b) + m(matrix, 18, a) + m(matrix, 19, 1);\n        if (includeOpacity) {\n          nr = 0;\n          ng = 0;\n          nb = 0;\n          na *= a / 255;\n        }\n        imSet(srcData.data, x, y, width, height, 0, nr);\n        imSet(srcData.data, x, y, width, height, 1, ng);\n        imSet(srcData.data, x, y, width, height, 2, nb);\n        imSet(srcData.data, x, y, width, height, 3, na);\n      }\n    }\n    ctx.clearRect(0, 0, width, height);\n    ctx.putImageData(srcData, 0, 0);\n  }\n}\nclass MaskElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'mask';\n  }\n  apply(ctx, element) {\n    var {\n      document\n    } = this; // render as temp svg\n\n    var x = this.getAttribute('x').getPixels('x');\n    var y = this.getAttribute('y').getPixels('y');\n    var width = this.getStyle('width').getPixels('x');\n    var height = this.getStyle('height').getPixels('y');\n    if (!width && !height) {\n      var boundingBox = new BoundingBox();\n      this.children.forEach(child => {\n        boundingBox.addBoundingBox(child.getBoundingBox(ctx));\n      });\n      x = Math.floor(boundingBox.x1);\n      y = Math.floor(boundingBox.y1);\n      width = Math.floor(boundingBox.width);\n      height = Math.floor(boundingBox.height);\n    }\n    var ignoredStyles = this.removeStyles(element, MaskElement.ignoreStyles);\n    var maskCanvas = document.createCanvas(x + width, y + height);\n    var maskCtx = maskCanvas.getContext('2d');\n    document.screen.setDefaults(maskCtx);\n    this.renderChildren(maskCtx); // convert mask to alpha with a fake node\n    // TODO: refactor out apply from feColorMatrix\n\n    new FeColorMatrixElement(document, {\n      nodeType: 1,\n      childNodes: [],\n      attributes: [{\n        nodeName: 'type',\n        value: 'luminanceToAlpha'\n      }, {\n        nodeName: 'includeOpacity',\n        value: 'true'\n      }]\n    }).apply(maskCtx, 0, 0, x + width, y + height);\n    var tmpCanvas = document.createCanvas(x + width, y + height);\n    var tmpCtx = tmpCanvas.getContext('2d');\n    document.screen.setDefaults(tmpCtx);\n    element.render(tmpCtx);\n    tmpCtx.globalCompositeOperation = 'destination-in';\n    tmpCtx.fillStyle = maskCtx.createPattern(maskCanvas, 'no-repeat');\n    tmpCtx.fillRect(0, 0, x + width, y + height);\n    ctx.fillStyle = tmpCtx.createPattern(tmpCanvas, 'no-repeat');\n    ctx.fillRect(0, 0, x + width, y + height); // reassign mask\n\n    this.restoreStyles(element, ignoredStyles);\n  }\n  render(_) {// NO RENDER\n  }\n}\nMaskElement.ignoreStyles = ['mask', 'transform', 'clip-path'];\nvar noop = () => {// NOOP\n};\nclass ClipPathElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'clipPath';\n  }\n  apply(ctx) {\n    var {\n      document\n    } = this;\n    var contextProto = Reflect.getPrototypeOf(ctx);\n    var {\n      beginPath,\n      closePath\n    } = ctx;\n    if (contextProto) {\n      contextProto.beginPath = noop;\n      contextProto.closePath = noop;\n    }\n    Reflect.apply(beginPath, ctx, []);\n    this.children.forEach(child => {\n      if (typeof child.path === 'undefined') {\n        return;\n      }\n      var transform = typeof child.elementTransform !== 'undefined' ? child.elementTransform() : null; // handle <use />\n\n      if (!transform) {\n        transform = Transform.fromElement(document, child);\n      }\n      if (transform) {\n        transform.apply(ctx);\n      }\n      child.path(ctx);\n      if (contextProto) {\n        contextProto.closePath = closePath;\n      }\n      if (transform) {\n        transform.unapply(ctx);\n      }\n    });\n    Reflect.apply(closePath, ctx, []);\n    ctx.clip();\n    if (contextProto) {\n      contextProto.beginPath = beginPath;\n      contextProto.closePath = closePath;\n    }\n  }\n  render(_) {// NO RENDER\n  }\n}\nclass FilterElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'filter';\n  }\n  apply(ctx, element) {\n    // render as temp svg\n    var {\n      document,\n      children\n    } = this;\n    var boundingBox = element.getBoundingBox(ctx);\n    if (!boundingBox) {\n      return;\n    }\n    var px = 0;\n    var py = 0;\n    children.forEach(child => {\n      var efd = child.extraFilterDistance || 0;\n      px = Math.max(px, efd);\n      py = Math.max(py, efd);\n    });\n    var width = Math.floor(boundingBox.width);\n    var height = Math.floor(boundingBox.height);\n    var tmpCanvasWidth = width + 2 * px;\n    var tmpCanvasHeight = height + 2 * py;\n    if (tmpCanvasWidth < 1 || tmpCanvasHeight < 1) {\n      return;\n    }\n    var x = Math.floor(boundingBox.x);\n    var y = Math.floor(boundingBox.y);\n    var ignoredStyles = this.removeStyles(element, FilterElement.ignoreStyles);\n    var tmpCanvas = document.createCanvas(tmpCanvasWidth, tmpCanvasHeight);\n    var tmpCtx = tmpCanvas.getContext('2d');\n    document.screen.setDefaults(tmpCtx);\n    tmpCtx.translate(-x + px, -y + py);\n    element.render(tmpCtx); // apply filters\n\n    children.forEach(child => {\n      if (typeof child.apply === 'function') {\n        child.apply(tmpCtx, 0, 0, tmpCanvasWidth, tmpCanvasHeight);\n      }\n    }); // render on me\n\n    ctx.drawImage(tmpCanvas, 0, 0, tmpCanvasWidth, tmpCanvasHeight, x - px, y - py, tmpCanvasWidth, tmpCanvasHeight);\n    this.restoreStyles(element, ignoredStyles);\n  }\n  render(_) {// NO RENDER\n  }\n}\nFilterElement.ignoreStyles = ['filter', 'transform', 'clip-path'];\nclass FeDropShadowElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'feDropShadow';\n    this.addStylesFromStyleDefinition();\n  }\n  apply(_, _x, _y, _width, _height) {// TODO: implement\n  }\n}\nclass FeMorphologyElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'feMorphology';\n  }\n  apply(_, _x, _y, _width, _height) {// TODO: implement\n  }\n}\nclass FeCompositeElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'feComposite';\n  }\n  apply(_, _x, _y, _width, _height) {// TODO: implement\n  }\n}\nclass FeGaussianBlurElement extends Element {\n  constructor(document, node, captureTextNodes) {\n    super(document, node, captureTextNodes);\n    this.type = 'feGaussianBlur';\n    this.blurRadius = Math.floor(this.getAttribute('stdDeviation').getNumber());\n    this.extraFilterDistance = this.blurRadius;\n  }\n  apply(ctx, x, y, width, height) {\n    var {\n      document,\n      blurRadius\n    } = this;\n    var body = document.window ? document.window.document.body : null;\n    var canvas = ctx.canvas; // StackBlur requires canvas be on document\n\n    canvas.id = document.getUniqueId();\n    if (body) {\n      canvas.style.display = 'none';\n      body.appendChild(canvas);\n    }\n    canvasRGBA(canvas, x, y, width, height, blurRadius);\n    if (body) {\n      body.removeChild(canvas);\n    }\n  }\n}\nclass TitleElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'title';\n  }\n}\nclass DescElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.type = 'desc';\n  }\n}\nvar elements = {\n  'svg': SVGElement,\n  'rect': RectElement,\n  'circle': CircleElement,\n  'ellipse': EllipseElement,\n  'line': LineElement,\n  'polyline': PolylineElement,\n  'polygon': PolygonElement,\n  'path': PathElement,\n  'pattern': PatternElement,\n  'marker': MarkerElement,\n  'defs': DefsElement,\n  'linearGradient': LinearGradientElement,\n  'radialGradient': RadialGradientElement,\n  'stop': StopElement,\n  'animate': AnimateElement,\n  'animateColor': AnimateColorElement,\n  'animateTransform': AnimateTransformElement,\n  'font': FontElement,\n  'font-face': FontFaceElement,\n  'missing-glyph': MissingGlyphElement,\n  'glyph': GlyphElement,\n  'text': TextElement,\n  'tspan': TSpanElement,\n  'tref': TRefElement,\n  'a': AElement,\n  'textPath': TextPathElement,\n  'image': ImageElement,\n  'g': GElement,\n  'symbol': SymbolElement,\n  'style': StyleElement,\n  'use': UseElement,\n  'mask': MaskElement,\n  'clipPath': ClipPathElement,\n  'filter': FilterElement,\n  'feDropShadow': FeDropShadowElement,\n  'feMorphology': FeMorphologyElement,\n  'feComposite': FeCompositeElement,\n  'feColorMatrix': FeColorMatrixElement,\n  'feGaussianBlur': FeGaussianBlurElement,\n  'title': TitleElement,\n  'desc': DescElement\n};\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction createCanvas(width, height) {\n  var canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\nfunction createImage(_x) {\n  return _createImage.apply(this, arguments);\n}\nfunction _createImage() {\n  _createImage = _asyncToGenerator(function* (src) {\n    var anonymousCrossOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var image = document.createElement('img');\n    if (anonymousCrossOrigin) {\n      image.crossOrigin = 'Anonymous';\n    }\n    return new Promise((resolve, reject) => {\n      image.onload = () => {\n        resolve(image);\n      };\n      image.onerror = (_event, _source, _lineno, _colno, error) => {\n        reject(error);\n      };\n      image.src = src;\n    });\n  });\n  return _createImage.apply(this, arguments);\n}\nclass Document {\n  constructor(canvg) {\n    var {\n      rootEmSize = 12,\n      emSize = 12,\n      createCanvas = Document.createCanvas,\n      createImage = Document.createImage,\n      anonymousCrossOrigin\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.canvg = canvg;\n    this.definitions = {};\n    this.styles = {};\n    this.stylesSpecificity = {};\n    this.images = [];\n    this.fonts = [];\n    this.emSizeStack = [];\n    this.uniqueId = 0;\n    this.screen = canvg.screen;\n    this.rootEmSize = rootEmSize;\n    this.emSize = emSize;\n    this.createCanvas = createCanvas;\n    this.createImage = this.bindCreateImage(createImage, anonymousCrossOrigin);\n    this.screen.wait(this.isImagesLoaded.bind(this));\n    this.screen.wait(this.isFontsLoaded.bind(this));\n  }\n  bindCreateImage(createImage, anonymousCrossOrigin) {\n    if (typeof anonymousCrossOrigin === 'boolean') {\n      return (source, forceAnonymousCrossOrigin) => createImage(source, typeof forceAnonymousCrossOrigin === 'boolean' ? forceAnonymousCrossOrigin : anonymousCrossOrigin);\n    }\n    return createImage;\n  }\n  get window() {\n    return this.screen.window;\n  }\n  get fetch() {\n    return this.screen.fetch;\n  }\n  get ctx() {\n    return this.screen.ctx;\n  }\n  get emSize() {\n    var {\n      emSizeStack\n    } = this;\n    return emSizeStack[emSizeStack.length - 1];\n  }\n  set emSize(value) {\n    var {\n      emSizeStack\n    } = this;\n    emSizeStack.push(value);\n  }\n  popEmSize() {\n    var {\n      emSizeStack\n    } = this;\n    emSizeStack.pop();\n  }\n  getUniqueId() {\n    return \"canvg\".concat(++this.uniqueId);\n  }\n  isImagesLoaded() {\n    return this.images.every(_ => _.loaded);\n  }\n  isFontsLoaded() {\n    return this.fonts.every(_ => _.loaded);\n  }\n  createDocumentElement(document) {\n    var documentElement = this.createElement(document.documentElement);\n    documentElement.root = true;\n    documentElement.addStylesFromStyleDefinition();\n    this.documentElement = documentElement;\n    return documentElement;\n  }\n  createElement(node) {\n    var elementType = node.nodeName.replace(/^[^:]+:/, '');\n    var ElementType = Document.elementTypes[elementType];\n    if (typeof ElementType !== 'undefined') {\n      return new ElementType(this, node);\n    }\n    return new UnknownElement(this, node);\n  }\n  createTextNode(node) {\n    return new TextNode(this, node);\n  }\n  setViewBox(config) {\n    this.screen.setViewBox(_objectSpread$1({\n      document: this\n    }, config));\n  }\n}\nDocument.createCanvas = createCanvas;\nDocument.createImage = createImage;\nDocument.elementTypes = elements;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n/**\r\n * SVG renderer on canvas.\r\n */\n\nclass Canvg {\n  /**\r\n   * Main constructor.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG Document.\r\n   * @param options - Rendering options.\r\n   */\n  constructor(ctx, svg) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.parser = new Parser(options);\n    this.screen = new Screen(ctx, options);\n    this.options = options;\n    var document = new Document(this, options);\n    var documentElement = document.createDocumentElement(svg);\n    this.document = document;\n    this.documentElement = documentElement;\n  }\n  /**\r\n   * Create Canvg instance from SVG source string or URL.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG source string or URL.\r\n   * @param options - Rendering options.\r\n   * @returns Canvg instance.\r\n   */\n\n  static from(ctx, svg) {\n    var _arguments = arguments;\n    return _asyncToGenerator(function* () {\n      var options = _arguments.length > 2 && _arguments[2] !== undefined ? _arguments[2] : {};\n      var parser = new Parser(options);\n      var svgDocument = yield parser.parse(svg);\n      return new Canvg(ctx, svgDocument, options);\n    })();\n  }\n  /**\r\n   * Create Canvg instance from SVG source string.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG source string.\r\n   * @param options - Rendering options.\r\n   * @returns Canvg instance.\r\n   */\n\n  static fromString(ctx, svg) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var parser = new Parser(options);\n    var svgDocument = parser.parseFromString(svg);\n    return new Canvg(ctx, svgDocument, options);\n  }\n  /**\r\n   * Create new Canvg instance with inherited options.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG source string or URL.\r\n   * @param options - Rendering options.\r\n   * @returns Canvg instance.\r\n   */\n\n  fork(ctx, svg) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return Canvg.from(ctx, svg, _objectSpread(_objectSpread({}, this.options), options));\n  }\n  /**\r\n   * Create new Canvg instance with inherited options.\r\n   * @param ctx - Rendering context.\r\n   * @param svg - SVG source string.\r\n   * @param options - Rendering options.\r\n   * @returns Canvg instance.\r\n   */\n\n  forkString(ctx, svg) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return Canvg.fromString(ctx, svg, _objectSpread(_objectSpread({}, this.options), options));\n  }\n  /**\r\n   * Document is ready promise.\r\n   * @returns Ready promise.\r\n   */\n\n  ready() {\n    return this.screen.ready();\n  }\n  /**\r\n   * Document is ready value.\r\n   * @returns Is ready or not.\r\n   */\n\n  isReady() {\n    return this.screen.isReady();\n  }\n  /**\r\n   * Render only first frame, ignoring animations and mouse.\r\n   * @param options - Rendering options.\r\n   */\n\n  render() {\n    var _arguments2 = arguments,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      var options = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {};\n      _this.start(_objectSpread({\n        enableRedraw: true,\n        ignoreAnimation: true,\n        ignoreMouse: true\n      }, options));\n      yield _this.ready();\n      _this.stop();\n    })();\n  }\n  /**\r\n   * Start rendering.\r\n   * @param options - Render options.\r\n   */\n\n  start() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var {\n      documentElement,\n      screen,\n      options: baseOptions\n    } = this;\n    screen.start(documentElement, _objectSpread(_objectSpread({\n      enableRedraw: true\n    }, baseOptions), options));\n  }\n  /**\r\n   * Stop rendering.\r\n   */\n\n  stop() {\n    this.screen.stop();\n  }\n  /**\r\n   * Resize SVG to fit in given size.\r\n   * @param width\r\n   * @param height\r\n   * @param preserveAspectRatio\r\n   */\n\n  resize(width) {\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : width;\n    var preserveAspectRatio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this.documentElement.resize(width, height, preserveAspectRatio);\n  }\n}\nexport { AElement, AnimateColorElement, AnimateElement, AnimateTransformElement, BoundingBox, CB1, CB2, CB3, CB4, Canvg, CircleElement, ClipPathElement, DefsElement, DescElement, Document, Element, EllipseElement, FeColorMatrixElement, FeCompositeElement, FeDropShadowElement, FeGaussianBlurElement, FeMorphologyElement, FilterElement, Font, FontElement, FontFaceElement, GElement, GlyphElement, GradientElement, ImageElement, LineElement, LinearGradientElement, MarkerElement, MaskElement, Matrix, MissingGlyphElement, Mouse, PSEUDO_ZERO, Parser, PathElement, PathParser, PatternElement, Point, PolygonElement, PolylineElement, Property, QB1, QB2, QB3, RadialGradientElement, RectElement, RenderedElement, Rotate, SVGElement, SVGFontLoader, Scale, Screen, Skew, SkewX, SkewY, StopElement, StyleElement, SymbolElement, TRefElement, TSpanElement, TextElement, TextPathElement, TitleElement, Transform, Translate, UnknownElement, UseElement, ViewPort, compressSpaces, Canvg as default, getSelectorSpecificity, normalizeAttributeName, normalizeColor, parseExternalUrl, index as presets, toNumbers, trimLeft, trimRight, vectorMagnitude, vectorsAngle, vectorsRatio };"],"sourceRoot":""}